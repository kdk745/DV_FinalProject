<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.0828.1711                                -->
<workbook source-platform='win' version='9.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.1'>
      <aliases enabled='yes' />
      <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range granularity='0.01' max='0.48999999999999999' min='0.0' />
      </column>
      <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
        <calculation class='tableau' formula='0.48999999999999999' />
        <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
      </column>
    </datasource>
    <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' inline='true' name='oracle.42342.593655092591' version='9.1'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_ZNK74' server='sayonara.microlab.cs.utexas.edu' service='orcl' username='C##cs329e_znk74'>
        <relation name='CHILD_DEATHS' table='[C##CS329E_ZNK74].[CHILD_DEATHS]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GBDCHILDCAUSES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GBDCHILDCAUSES]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>GBDCHILDCAUSES</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='KPI_percentage_month_over_4 _years' datatype='real' name='[Calculation_1825928200131940352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS])' />
      </column>
      <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
      <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
      <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths 0 To 27 Days (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[DEATHS_0_TO_27_DAYS]' peg='0' size='10' />
      </column>
      <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
      <column datatype='string' name='[Gbdchildcauses (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[GBDCHILDCAUSES]' default='&quot;Tetanus&quot;'>
          <bin value='&quot;Acute lower respiratory infections&quot;'>
            <value>&quot;Acute lower respiratory infections&quot;</value>
            <value>&quot;Birth asphyxia and birth trauma&quot;</value>
            <value>&quot;Congenital anomalies&quot;</value>
            <value>&quot;Other communicable, perinatal and nutritional conditions&quot;</value>
            <value>&quot;Prematurity&quot;</value>
            <value>&quot;Sepsis and other infectious conditions of the newborn&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;Tetanus&quot;' value='Other' />
        </aliases>
      </column>
      <column caption='KPI_percentage_month_over_4 _years (LMH)' datatype='string' name='[KPI_percentage_month_over_4 _years (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
      <group name='[Five Highest Causes 0 to 4 Years]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Acute lower respiratory infections&quot;' />
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Congenital anomalies&quot;' />
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Injuries&quot;' />
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Other communicable, perinatal and nutritional conditions&quot;' />
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Prematurity&quot;' />
        </groupfilter>
      </group>
      <group caption='Five Highest Countries' name='[Five Highest Countries 0-27]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[COUNTRY]' member='&quot;Dominican Republic&quot;' />
          <groupfilter function='member' level='[COUNTRY]' member='&quot;Guatemala&quot;' />
          <groupfilter function='member' level='[COUNTRY]' member='&quot;Haiti&quot;' />
          <groupfilter function='member' level='[COUNTRY]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[COUNTRY]' member='&quot;USA&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.339655' group-percentage='0.127586' measure-ordering='alphabetic' measure-percentage='0.27931' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GBDCHILDCAUSES:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Acute lower respiratory infections&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tetanus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Other noncommunicable diseases&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meningitis/encephalitis&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Injuries&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Birth asphyxia and birth trauma&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pertussis&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Other communicable, perinatal and nutritional conditions&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Prematurity&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sepsis and other infectious conditions of the newborn&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Congenital anomalies&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Diarrhoeal diseases&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GBDCHILDCAUSES:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Acute lower respiratory infections&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tetanus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Other noncommunicable diseases&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meningitis/encephalitis&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Injuries&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Birth asphyxia and birth trauma&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pertussis&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Other communicable, perinatal and nutritional conditions&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Prematurity&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sepsis and other infectious conditions of the newborn&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Congenital anomalies&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Diarrhoeal diseases&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
          <range granularity='0.01' max='0.48999999999999999' min='0.0' />
        </column>
        <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
          <calculation class='tableau' formula='0.48999999999999999' />
          <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74) (2)' inline='true' name='oracle.42342.593655092591 (copy)' version='9.1'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_ZNK74' server='sayonara.microlab.cs.utexas.edu' service='orcl' username='C##cs329e_znk74'>
        <relation name='CHILD_DEATHS' table='[C##CS329E_ZNK74].[CHILD_DEATHS]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GBDCHILDCAUSES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GBDCHILDCAUSES]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>GBDCHILDCAUSES</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
      <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
      <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
      <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='ordinal' />
      <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
      <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\znk\Documents\My Tableau Repository\Datasources\CHILD_DEATHS.tde' schema='Extract' tablename='Extract' update-time='12/05/2015 06:54:23 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4830' timestamp-start='2015-12-05 18:54:23.107' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>COUNTRY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY</remote-alias>
              <ordinal>0</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Antigua and Barbuda&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
              <ordinal>1</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>698</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>940249.0</statistic>
                <statistic aggregation='Avg' datatype='real'>194.66853002070394</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>10183.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>786.75080358702257</statistic>
                <statistic aggregation='StdevP' datatype='real'>786.66935518848277</statistic>
                <statistic aggregation='Var' datatype='real'>618976.82694482571</statistic>
                <statistic aggregation='VarP' datatype='real'>618848.67439266318</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3172075988.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
              <ordinal>2</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1093</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2071849.0</statistic>
                <statistic aggregation='Avg' datatype='real'>428.95424430641822</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26193.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1303.9774761917497</statistic>
                <statistic aggregation='StdevP' datatype='real'>1303.8424818877293</statistic>
                <statistic aggregation='Var' datatype='real'>1700357.2584154052</statistic>
                <statistic aggregation='VarP' datatype='real'>1700005.2175751536</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9099753623.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
              <ordinal>3</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>795</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1131617.0</statistic>
                <statistic aggregation='Avg' datatype='real'>234.28923395445133</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26123.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>852.53249218182521</statistic>
                <statistic aggregation='StdevP' datatype='real'>852.44423373216773</statistic>
                <statistic aggregation='Var' datatype='real'>726811.6502257539</statistic>
                <statistic aggregation='VarP' datatype='real'>726661.17162322265</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3774899139.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GBDCHILDCAUSES</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GBDCHILDCAUSES]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GBDCHILDCAUSES</remote-alias>
              <ordinal>4</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Acute lower respiratory infections&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tetanus&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4830.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4830.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YEAR</remote-name>
              <remote-type>4</remote-type>
              <local-name>[YEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YEAR</remote-alias>
              <ordinal>6</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9691395.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2006.5</statistic>
                <statistic aggregation='Min' datatype='real'>2000.0</statistic>
                <statistic aggregation='Max' datatype='real'>2013.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.0315462400844568</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.0311288741492746</statistic>
                <statistic aggregation='Var' datatype='real'>16.253365085939119</statistic>
                <statistic aggregation='VarP' datatype='real'>16.25</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='Median' datatype='real'>2007.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19445862555.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:YEAR:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2000.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2004.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2008.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2001.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2002.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2003.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GBDCHILDCAUSES:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Acute lower respiratory infections&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tetanus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Other noncommunicable diseases&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meningitis/encephalitis&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Injuries&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Birth asphyxia and birth trauma&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pertussis&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Other communicable, perinatal and nutritional conditions&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Prematurity&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sepsis and other infectious conditions of the newborn&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Congenital anomalies&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Diarrhoeal diseases&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74) (3)' inline='true' name='oracle.42342.593655092591 (copy 2)' version='9.1'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_ZNK74' server='sayonara.microlab.cs.utexas.edu' service='orcl' username='C##cs329e_znk74'>
        <relation name='CHILD_DEATHS' table='[C##CS329E_ZNK74].[CHILD_DEATHS]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GBDCHILDCAUSES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GBDCHILDCAUSES]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>GBDCHILDCAUSES</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
      <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
      <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
      <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='ordinal' />
      <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
      <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\znk\Documents\My Tableau Repository\Datasources\CHILD_DEATHS.tde' schema='Extract' tablename='Extract' update-time='12/05/2015 06:54:23 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4830' timestamp-start='2015-12-05 18:54:23.107' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>COUNTRY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY</remote-alias>
              <ordinal>0</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Antigua and Barbuda&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
              <ordinal>1</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>698</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>940249.0</statistic>
                <statistic aggregation='Avg' datatype='real'>194.66853002070394</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>10183.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>786.75080358702257</statistic>
                <statistic aggregation='StdevP' datatype='real'>786.66935518848277</statistic>
                <statistic aggregation='Var' datatype='real'>618976.82694482571</statistic>
                <statistic aggregation='VarP' datatype='real'>618848.67439266318</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3172075988.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
              <ordinal>2</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1093</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2071849.0</statistic>
                <statistic aggregation='Avg' datatype='real'>428.95424430641822</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26193.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1303.9774761917497</statistic>
                <statistic aggregation='StdevP' datatype='real'>1303.8424818877293</statistic>
                <statistic aggregation='Var' datatype='real'>1700357.2584154052</statistic>
                <statistic aggregation='VarP' datatype='real'>1700005.2175751536</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9099753623.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
              <ordinal>3</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>795</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1131617.0</statistic>
                <statistic aggregation='Avg' datatype='real'>234.28923395445133</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26123.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>852.53249218182521</statistic>
                <statistic aggregation='StdevP' datatype='real'>852.44423373216773</statistic>
                <statistic aggregation='Var' datatype='real'>726811.6502257539</statistic>
                <statistic aggregation='VarP' datatype='real'>726661.17162322265</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3774899139.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GBDCHILDCAUSES</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GBDCHILDCAUSES]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GBDCHILDCAUSES</remote-alias>
              <ordinal>4</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Acute lower respiratory infections&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tetanus&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4830.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4830.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YEAR</remote-name>
              <remote-type>4</remote-type>
              <local-name>[YEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YEAR</remote-alias>
              <ordinal>6</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9691395.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2006.5</statistic>
                <statistic aggregation='Min' datatype='real'>2000.0</statistic>
                <statistic aggregation='Max' datatype='real'>2013.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.0315462400844568</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.0311288741492746</statistic>
                <statistic aggregation='Var' datatype='real'>16.253365085939119</statistic>
                <statistic aggregation='VarP' datatype='real'>16.25</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='Median' datatype='real'>2007.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19445862555.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:GBDCHILDCAUSES:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Acute lower respiratory infections&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tetanus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Other noncommunicable diseases&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meningitis/encephalitis&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Injuries&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Birth asphyxia and birth trauma&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pertussis&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Other communicable, perinatal and nutritional conditions&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Prematurity&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sepsis and other infectious conditions of the newborn&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Congenital anomalies&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Diarrhoeal diseases&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:YEAR:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2000.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2004.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2008.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2001.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2002.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2003.0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Barchart'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_1_TO_59_MONTHS]' derivation='Sum' name='[sum:DEATHS_1_TO_59_MONTHS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#b40f1e' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-color' id='refline3' value='#b40f1e' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' z-order='1' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='sum' id='refline1' label-type='value' scope='per-cell' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='2' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='3' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' z-order='4' />
          </pane>
          <pane id='1' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk] + [oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk])</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Barchart 5 Highest</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_1_TO_59_MONTHS]' derivation='Sum' name='[sum:DEATHS_1_TO_59_MONTHS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Countries 0-27]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Countries 0-27]</column>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#b40f1e' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-color' id='refline3' value='#b40f1e' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' z-order='1' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='sum' id='refline1' label-type='value' scope='per-cell' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='2' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='3' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' z-order='4' />
          </pane>
          <pane id='1' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk] + [oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk])</rows>
        <cols>([oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk] / [oracle.42342.593655092591].[none:COUNTRY:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Boxplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='None' name='[none:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[oracle.42342.593655092591].[none:DEATHS_0_TO_27_DAYS:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <slices>
            <column>[oracle.42342.593655092591].[none:DEATHS_0_TO_27_DAYS:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <range granularity='0.01' max='0.48999999999999999' min='0.0' />
            </column>
            <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
              <calculation class='tableau' formula='0.48999999999999999' />
              <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='KPI_percentage_month_over_4 _years (LMH)' datatype='string' name='[KPI_percentage_month_over_4 _years (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI_percentage_month_over_4 _years (copy)]' derivation='User' name='[usr:KPI_percentage_month_over_4 _years (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' />
              <text column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[none:COUNTRY:nk]</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
        <pages>
          <column>[oracle.42342.593655092591].[none:YEAR:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Crosstab2'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <range granularity='0.01' max='0.48999999999999999' min='0.0' />
            </column>
            <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
              <calculation class='tableau' formula='0.48999999999999999' />
              <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='KPI_percentage_month_over_4 _years (LMH)' datatype='string' name='[KPI_percentage_month_over_4 _years (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI_percentage_month_over_4 _years (copy)]' derivation='User' name='[usr:KPI_percentage_month_over_4 _years (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' />
              <text column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[none:COUNTRY:nk]</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest Countries 0-27'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</rows>
        <cols>[oracle.42342.593655092591].[none:COUNTRY:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest Countries 1-59'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_1_TO_59_MONTHS]' derivation='Sum' name='[sum:DEATHS_1_TO_59_MONTHS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]</rows>
        <cols>[oracle.42342.593655092591].[none:COUNTRY:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Haiti Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74) (3)' name='oracle.42342.593655092591 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591 (copy 2)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk]'>
            <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Haiti&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591 (copy 2)].[none:YEAR:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591 (copy 2)].[sum:DEATHS_0_TO_4_YEARS:qk]</rows>
        <cols>([oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk] / [oracle.42342.593655092591 (copy 2)].[none:YEAR:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Haiti Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74) (2)' name='oracle.42342.593655092591 (copy)' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591 (copy)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591 (copy)].[none:COUNTRY:nk]'>
            <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Haiti&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]'>
            <groupfilter function='level-members' level='[none:GBDCHILDCAUSES:nk]' />
          </filter>
          <slices>
            <column>[oracle.42342.593655092591 (copy)].[none:COUNTRY:nk]</column>
            <column>[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='599' />
            <format attr='height' field='[oracle.42342.593655092591 (copy)].[none:YEAR:ok]' value='436' />
            <format attr='height' field='[oracle.42342.593655092591 (copy)].[none:COUNTRY:nk]' value='333' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]' />
              <wedge-size column='[oracle.42342.593655092591 (copy)].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <size column='[oracle.42342.593655092591 (copy)].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591 (copy)].[none:COUNTRY:nk]</rows>
        <cols />
        <pages>
          <column>[oracle.42342.593655092591 (copy)].[none:YEAR:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Histogram'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths 0 To 27 Days (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[DEATHS_0_TO_27_DAYS]' peg='0' size='10' />
            </column>
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Count' name='[cnt:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[oracle.42342.593655092591].[cnt:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[cnt:DEATHS_0_TO_27_DAYS:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[cnt:DEATHS_0_TO_27_DAYS:qk]</rows>
        <cols>[oracle.42342.593655092591].[Deaths 0 To 27 Days (bin)]</cols>
        <pages>
          <column>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</column>
        </pages>
        <show-full-range>
          <column>[oracle.42342.593655092591].[Deaths 0 To 27 Days (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='KPI_percentage_month_over_4 _years' datatype='real' name='[Calculation_1825928200131940352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS])' />
            </column>
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1825928200131940352]' derivation='User' name='[usr:Calculation_1825928200131940352:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42342.593655092591].[usr:Calculation_1825928200131940352:qk]' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[usr:Calculation_1825928200131940352:qk]' />
              <text column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <text column='[oracle.42342.593655092591].[usr:Calculation_1825928200131940352:qk]' />
              <geometry column='[oracle.42342.593655092591].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[Latitude (generated)]</rows>
        <cols>[oracle.42342.593655092591].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Map2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map 2&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <range granularity='0.01' max='0.48999999999999999' min='0.0' />
            </column>
            <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
              <calculation class='tableau' formula='0.48999999999999999' />
              <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='KPI_percentage_month_over_4 _years (LMH)' datatype='string' name='[KPI_percentage_month_over_4 _years (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI_percentage_month_over_4 _years (copy)]' derivation='User' name='[usr:KPI_percentage_month_over_4 _years (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' />
              <text column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <geometry column='[oracle.42342.593655092591].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[Latitude (generated)]</rows>
        <cols>[oracle.42342.593655092591].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Mexico/US Scatterplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Five Highest Causes of Death in US and Mexico in Children 0 to 4 Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <filter class='categorical' column='[oracle.42342.593655092591].[none:COUNTRY:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42342.593655092591].[none:COUNTRY:nk]</column>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' />
              <lod column='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</rows>
        <cols>([oracle.42342.593655092591].[none:COUNTRY:nk] * [oracle.42342.593655092591].[none:YEAR:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Scatterplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_1_TO_59_MONTHS]' derivation='Sum' name='[sum:DEATHS_1_TO_59_MONTHS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <lod column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <lod column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <lod column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk] + [oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk])</rows>
        <cols>[oracle.42342.593655092591].[none:YEAR:ok]</cols>
        <pages>
          <column>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Treemap Deaths by Cause'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Treemap of Total Deaths 0 to 4 Years in North America by Cause - </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#cfc1ba</color>
                <color>#d4b8aa</color>
                <color>#d9ae98</color>
                <color>#dfa385</color>
                <color>#e49872</color>
                <color>#e98c5d</color>
                <color>#ef7f47</color>
                <color>#f47230</color>
                <color>#f96318</color>
                <color>#ff5500</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <color column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <text column='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' />
              <text column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[oracle.42342.593655092591].[none:YEAR:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Treemap Total Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Treemap of Total Deaths 0 to 4 Years in North America by Country - </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#c6b2b2</color>
                <color>#c39c9c</color>
                <color>#c08686</color>
                <color>#bd7171</color>
                <color>#ba5d5d</color>
                <color>#b64949</color>
                <color>#b33535</color>
                <color>#b02323</color>
                <color>#ad1111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <color column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <text column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <text column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[oracle.42342.593655092591].[none:YEAR:ok]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[none:COUNTRY:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:DEATHS_0_TO_27_DAYS:qk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Prematurity&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Treemap Total Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2012.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Treemap Deaths by Cause'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='22' type='pages' />
            <card size='89' type='currpage' />
            <card size='67' type='filters' />
            <card size='269' type='marks' />
            <card pane-specification-id='2' param='[oracle.42342.593655092591].[none:COUNTRY:nk]' size='21' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Prematurity&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:ok]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Mexico/US Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Crosstab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
          <field>[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Crosstab2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[Five Highest Countries 0-27]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
          <field>[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Five Highest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Prematurity&quot;</value>
              <value>398926.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Other communicable, perinatal and nutritional conditions&quot;</value>
              <value>182387.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Injuries&quot;</value>
              <value>195687.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Congenital anomalies&quot;</value>
              <value>362220.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Acute lower respiratory infections&quot;</value>
              <value>265488.0</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[usr:Calculation_1825928200131940352:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Barchart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.42342.593655092591].[none:COUNTRY:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</axis>
            </node-reference>
            <page-reference />
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Barchart2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.42342.593655092591].[none:COUNTRY:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[Five Highest Countries 0-27]</field>
          <field>[oracle.42342.593655092591].[io:Five Highest Countries 0-27:nk]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Haiti Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591 (copy 2)].[none:YEAR:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591 (copy 2)].[none:YEAR:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Haiti Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]' type='color' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591 (copy)].[sum:DEATHS_0_TO_4_YEARS:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591 (copy)].[:Measure Names]</field>
          <field>[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591 (copy)].[none:YEAR:ok]</field>
          <field>[oracle.42342.593655092591 (copy)].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Five Highest Countries 0-27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;USA&quot;</value>
              <value>250660.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Mexico&quot;</value>
              <value>278408.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Haiti&quot;</value>
              <value>103324.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Guatemala&quot;</value>
              <value>108465.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Dominican Republic&quot;</value>
              <value>57032.0</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Five Highest Countries 1-59'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Boxplot' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAfhklEQVR4nO3d6XMbZ2Ln8W93o3HfBMBLFEndl3Uf9ngytidzeWYTbzapSl5kt2q39qj5
      B+b1vNq3qX2zyaZqdjc1k2Sy42Qmlq/4Gkm2ZN2iKJES7wskSBAEQNxXd+8LeRSNCXpEmgBh
      9fOp8gsCMp4HQP/QTz/P088jGYZhIAgmJW93BQRhO4kACKYmAiCYmgiAYGoiAIKpiQAIz5SV
      uYe8ef4NfvnLf2ZuMc6Fy7eoPX62xq3LF1gtPfqrnE1g2aZ6CsLWM0rcuH6fM995DZ+RJJEu
      8vDOJ0QnH3D87CkGbtwiny+hWq3cn5oiGOwTARCeLYYhIWtZLl54j5VKGKe3k99/vofzFy7R
      d/b7SNOfMja1xEuv/hGOzCKSGAgTniWJmWE+vTuObmj07TnCyO3LGDYnJ86c4u6NW2iShVMH
      +7gzMk4o0i8CIJibuAgWTK2h1wDFYpFisdjIIgThS2loAEqlEn6/H1kWJxqhNYkjUzA1EQDB
      1EQABFMTARBMTQRAMDURAMHURAAEU9vwOEA5t8L1u1OcO3uAaxcuIUf20WvPUfH3UYuN4tl1
      nE6vtRF1FYQtt+EAzE2OcO/BDLsiFYr+fWTv38DSbWfo1gi7959gr0dtRD0FoSE23ATq3/cc
      PodCrVrFZnegaDWqeg1JligWywDkcjmSySSFQmHLKywIW2nj1wCShKqqtO3YQ+zeBYqBHvxW
      F8+dfYVIaZJ7CxncbjfBYBCn09mAKgvC1mnodOhUKoXP5xNzgYSWJY5MwdREAARTEwEQTE0E
      QDA1EQDB1EQABFMTARBMTQRAMDURAMHURAAEUxMBEExNBEAwNREAwdREAARTEwEQTE0EQDA1
      EQDB1EQABFMTARBMTQRAMDURAMHURAAEUxMBEExNBEAwtU1vklcrJvn1rz8BXy97A1WqwV1U
      ow8J7DstFscVvjI2HYBqboWlbA09M0OoWuPGzREOHXuBg2JxXOErZNNNoHQiTqRnLx4tR7ai
      4XA6WE1nMRCL4wpfHZsOgKetnXT0ISVbEK/by+HTL9FjzDEkFscVvkLE4riCqYkjUzA1EQDB
      1EQABFMTARBMTQRAMDURAMHURAAEUxMBEExNBEAwNREAwdREAARTEwEQTE0EQDA1EQDB1EQA
      BFNbNwCGVmE1k2EpFqNca9gtA4Kwrda9Jzg+dpebI5MspGocOvESLx7b0cx6CUJTrBsAq8vN
      SrLGsef68ATdzayTIDTN+qtCWFQOnjjNoX07cTjsTaySIDTPutcA3rYubKUFfvF3P+OXb39E
      IltuZr0EoSnWPQNkEvPEc/D8N18l6AQ0rYnVEoTmWPcMUMqkmHxwi48++oCZnJ2QXyxxIjx7
      1g2AbMiceuEMWqVCISsWuBKeTfXXBTJ00olFogsrOIMhend0okgbf3GxLpDQ6upeA+SWZ/jo
      k/vs3tPL1OCnrFZe4sTutt/6N3o5w8VfX6Jka2dfSKfWtofy7DDhQ+fE4rjCV0bdn+ZcZpW+
      gyc5dvQoz79wlMziypp/k5geIalZ8HldZFfm+eCdN8m7d9IhFscVvkLqngGcPi8zH11mckjG
      0GH/6W+s+TflUhrVs4P40A28HS6CoQDLSwmMwzvJ53JUKhWKxSI+n6/hb0IQNmvTa4NWc0u8
      895l8rqLIz0W9M4TqLPX0XZ9jee6vIC4BhBaX90AZFfmGIuWeO7IblRl8wevCIDQ6uo2gfLJ
      BLHoMvGFCZxeP3sOHqFLzAcSnkF1A6DanPQfPMa+Hj+5bA7ZLi5shWdT3baJy+dl+NN3eefj
      ASDHyMOFJldLEJqj/jhAMkHHwRc5vkPm42t3sXn2N7tegtAUdQMQ2LGHXksaR6ST54/LJDVP
      s+slCE3xBd2gBoZhYBgSkiQhiakQwjNo3enQ+eVpzv/Lx1QMCy9+5w/Z3S56gTZL0zSKxSJO
      p1P8GLSYdb+N9GKMQN8Rju4JMR9LNbNOz5x0Os34+DiVSmW7qyJ8Tt0AVEt5fP1H6PfLGO6d
      nDkiboj/MjweDzt37sRqFZMEW03dJlByfoJYLcSxw8eaXZ9nkqqqBAKB7a6GUEfdABhGmYEr
      F4iOeQGF/SeeZ2+3+AI3K5fLkUgk6O7uFmeBFlO3F6icz1AyrPjcX241CNEL9EixWCSZTNLe
      3o7Fsv5CHELzrdsNWqsUyWQL2FweXPbN/WqJAAitrv5IcHyKd359HZfHS7mwSt+Jb3Fid6jZ
      dXtmrJQqjGYKnGjzYv8Ss2uFrVf325AkCQwJJDB0HVkSX9qXkcgVSC4tUahUt7sqwufUPQO4
      wn388R93ks7kcHj8OKxKs+v1THHVyrSVMqh6DbBtd3WEJ6x7RSarNoJt4svaCjVNQ9d1NF2s
      st1q1l8ZbuEB1+5PMzkR5fnv/QnH+kU36GZVVBsFqwNdEWfSVrNu4z6bXGVyZJy9xw+IhbG+
      JLlawVYti+UlW9C6Z4DIrv0cShSo5Mp07fE2s07PHIuuoeg68ubWHxAaaP0NMiaGySle9nQH
      8NjF4M2XUVEsaLKCJsZDWs46d4TNcnNohpyhcHfJymG7n6DH0ey6NVS1WiUajRIOh3G7GzvV
      W1EUDFkW3cktqO43YrW6qRVXqUkKklEkmXr2rgEMw6BYLFKr1Rpell9V8FstODazwKrQUHWn
      QhiGTmJ2jMGJeRRFpf/QUXrDdVZ4M6qsJAs4rQa61Y1UzmDYfbg+Gzdo5akQhmGg6zqyLD8a
      +GsgXdepVqtYrdaGlyVsTN0mkCTJ5BNxUgujFB1dWJeKdQMw9+Aqv7qe5KU+iYRrB6VEkq+9
      /HKj67wlJElCaVK3pCzL2GxiTKUVrfvTHO7ZyelvfBtHrUzQt/bLK6ejTKxaiDhl0Ap8/OEF
      OvYdw++wkM/nSaVSFArPXtNpM3K5HBMTE1SrYipEq1l/gwxF5tJbl+na3Y7VtnY2aLFYorC8
      wOTUBKmqg+/84WvM3LhEslTD6XTi8/lwOFr3wlnXdeLxOOVy4/c+0zSNcrmMrusNL0vYmHX7
      NxNzs5SrVQxFZ3Y2wa6I67ee93fu4ft/2Muho4v47FBzhTne6SCRKxO0uz5bSaJ127uVSoWF
      hYWmNE8cDgfhcFjcC9CC1v1GOvcfpm86Riql8o2vrXdPsEpfX88Tf3fRs86/bDU2m40DBw40
      5Q6tbDbL/Pw8Ho+nadcdwtOpG4BKbpm33/4AxeEmH58nla/gtbduc2YzJEnCbm/O/sd+vx+H
      wyEuhFtQ3QCkFhfoPvx1Th/qIZcY4fZIlN6v7W123Z4ZsizjcDhaukloVnUDoKgSI1c+YWHc
      Sa2cJ7znhWbX65lSLpcf3xMsmkCtpf5AmK5Te2LmoqwoKJsYzGrlgTBN00gkEvh8voY3hZLJ
      JHNzc+zfv79pzS7h6dQfCJNl1BY8aLdStVplcXERi8XS8IPS7/fjdrtRVbHPQqsxbb+czWZj
      165dTRmrkGVZrAfUop7tn/kvUKlUmJqaIpPJbHdVhG1k2gBYLBbC4TBOp3O7qyJsI9MGwDAM
      qtWqmJ5gcqYNgKZprK6uNmUukNC6TBsAWZZxuVyiZ8bkTBsAwzAol8tNuSNMaF2mDYCiKI/n
      6AjmZdpxgGq1ytLSEqqqiklqJmbaM4DVaqW7uxuvV6x5ZGamDUClUmF+fp5sNrvdVRG2kWkD
      YLFY8Hq94hrA5EwbgGq1SjqVIp/Pb3dVhG1k2gAYpTLagyH0xMp2V0XYRqYNQK1cpFLOUsyK
      TcDNzLQBQJIACUms12lq5v32jSf+E0zLtAFQJAtWzYEV0QtkZpseCTZqJWZmZlG97fjVGrrN
      i1RKYTja8Nhb/8ZvSVNQS3bkqpgMZ2abDkBmeYGVXIWxS2/R0++mZO+knM7xe698Yyvr1zA1
      pUzenaJkXd3uqgjbaNNNIF9nP8d2h3G0d+PUCnx84WPa9xzGbZXJ5XIkk8nWXhzXeHQBUGdR
      DMFENh2A4socb3x4h7NnjiIpTl79o39H9NYllos13G43wWCwpW83VKs2PKttOAt19j0QTGPT
      TaCaIbOj3U90doHew6exONo41vF7JEtVcLZ+u1qRVYLJHdjxbHdVhG206QB4Qjs4G/r8ornt
      dH3JCjWNzqMuUE00gczMtN2gKBKSLCGp5v0IhBa8IaZUKiFJUsNvUlHCDviDftT9bQ0tR2ht
      LffzNz09zfz8fMPLKWBwLWJhURbLophZywWgvb2dUCjU8HIcisKJNg8RR+OXLCyuppkfvEOt
      IpZgaTUtF4BUKsXqauMHpzTDIFWuUnpiFexGWZ4YZfrmpxSSYup1q2m5awBVVZuyl1a6UuVu
      KocOBOtsAriVDF0HQwy6taKWC0CzdlO0yDIWScKuNOEk+JudYcQOMS2n5QJQqVSaUk5N16kZ
      BkWtCWGz2ZAVC4rYJbLltNw30qwAWD7bBMTRhDOAJMmPfv3FGaDltFwAjCa1lQNWC9/pChKw
      Nf4jUO12bC6XOAO0oJb7Rjo6Orb0ItgwDKamptY8rusGibks/nYnVvva8iKRCG63e0vq0Na/
      B1/nDlSxBEvLabkAWCyWLd1JUdd1Xn/99TWPl/JVpkfnCbUHCXWtXR3utddeY//+/VtSB1mW
      sbbwzFgzq7tL5FbZzC6Rt2/fxmq1cuTIkUZVC4DYeJq/+u//j2/+4Hle+uOjDS1LaF0tNxCm
      63pTukFlRUKWJZQmTIarlGqsLOTQmtDjJGxMSzaBmjEQZhiPrg+2MmsTExO8/fbbax7PLBeJ
      z2bZeSiI1bH2vf3whz9synsW1mq5Tz3kbUO1Nr5asvzoDGBRtq5rMhwO88orr6x5/MHlGMtT
      Vzh97AXautdeWLfiRuJm0XIBsH+aQ3Gr8Pl7bbaY32PhQL+D3q6tm3bt9XrrXrtU5j3cvTHM
      gX0Hae8Xt2C2kpYLQGVyFcXX+A0rLLJB2Kdga8IKLjslg50WCbETQetpuQDknSlU+9b1l+u6
      zq9+9au1T5SrLK7MsXi9hG1ycM3T586do7u7e0NlLSwscPXq1TWPF2ZTLNhjnL/4NpY7a8P9
      2muvbWnXr/D0ti0AY2NjdTenGNEHUMsOkrfX/l62tbXR29u7oXIkSeLMmTNrHtcrNUq7DmN1
      W7F41wYuEAhsqBwAv99ft6zxXWMUV3UOdB4m4Fj7upKYIvGFyuUyi4uLdHZ2YrVu7czdbQvA
      6Ogo0Wh0zeOLi0tkKzVWrGsPyv379284AOvRDIOCYYChN/xD0CUDQzIwxEKkm7K6ukosFsPl
      cm35zVLbFoAf/OAHdR+/+fOfM53N8Sf/5T83tHwdjWUtTrsRwomroWWFrSF0Tw2nIkaDv4im
      aZRKpTWPF0tlSuUyxVKp7oYmDodj0z1p2xaAeDxe982OP7STlFPMzs6uec7lctHWtjU3seeN
      AtPaBJKuEyS4Ja+5Ht1aQ5VkDKXxd59VlwsYNR1r59bMY2qmWCzGX/zFX6x5vJSvsppaxR/0
      Yauz5tSPfvQj2tvbN1Xm5gNgaMyOj6IEuvHKJTS7H7mQQHdF8NcZ7Pm8aDRKMplc+0RolZDq
      YXR0dM1TnZ2dWxYARZKxyAqqvHW/AaVSifk6zbpULkZSS4ED7Na1B2ZX18ZXU3rzzTcZGBhY
      83g1XsCo6ljrjDf09fXx53/+5xsuq1lcLhcvvPDCmsfTSwWmx6P07+vBF17bNP4y+7xtfnHc
      +SFuTa5SXh1hf0QmYY1QyVZ4+ZWnS2IulyOVWrs7S16tIMsyUp3nfL6N96EbhsHM9PTa+hfL
      TE1ZUcNZLOG1zzscjg0v7ajVanXXQ11a1hhfkXH1lvG6tmbQKxqNMji4tvfqsTq3H2tbeP9z
      JV9k5u03sHf20/P1s1vymi6Xi3Pnzq15PJ1Nc+DUIfw+Oz732mNgMwGYmppicnJy8wHIr64Q
      6j7IysIEGc3Op59c5fv/9s9wqo8Wx61UKhSLRRKJBMlkElVVH08vTiaTXL16laGhoTWvW6tp
      IIGlTrfg7t278fl8JBIJnE7n4wO03t8ulwuHw4Gu6/zfv/mbNa+l6Qa5co1pi4xNXVvWiy++
      yIsvvgg8aq75fL7HaxU9+bdhGCwvL+P3+4nH4/zd3//9mtcq1zRKVZ35OxYUuU6PjyTR3t6O
      qqpomsbKygrBYBCLxbLm71qt9vjzrPfF1yoahgFqnQGOQqHA0NAQqVSKUCiELMtUKhXS6TTh
      cBhJkur+/dOf/nTNQgWGYaAX86CoKD/732vKOnr0KN/61rcolUpkMhkikQjw6CyZzWYJh8MA
      FItFcrkc4XCYVCrFT37ykzWvpesamg6KIiHX2dHn1Vdf5fDhwwDk83lKpdLjlkI+n6dcLhMM
      Pmrm/ubYjEajnD9/fvOzQbPz9/hgaJVyOsH+iEyl8ziJweucfPUP6HQ/OlA2Mxt0fmkFRZbo
      CDe2XZ7Ol/jwQZznujzs69p4l+dGTMRSDMxn+f2DEfwue0PLij5MUilp7Doebmg5tUqN7OQY
      kiuIv2dz7e+nlcolyOTA75Hxubb2uNj8dOg61wAOLcOq7iLie/TLtJkACEIztdz9AILQTOLI
      FExNBEAwNREAwdREAARTa/hUiFQqteHZjoZhtOz/08yyftM/0aqfxbNQv4YHIBAIbKgXyDAM
      KpXKhjfISCaTjwc7nlalUsFisWy4l2ozZZVKJez2jY0B5HI5VFXd8GexmbI2855qtRrAhu9n
      btbnVy6XqVarX7i+U8vdENOM3WF+Y6vnln+RjX55X4Wymnkjf6Pek/LjH//4xw15ZR4tdS7L
      8rqnoNmROxTUIJ46K7MBoFeIJ7K4nmL09DdlASTnx7gxMER0MUVbxMXk2CKhkB+ATDxORakw
      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
    </thumbnail>
    <thumbnail height='192' name='Histogram' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Treemap Total Deaths' width='192'>
      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
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIk
      AMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIk
      AMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIk
      AMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSbGt9wEpfH4qur/VhxReoqnz2QQ0C4IrFUKrV
      tT6s+IJKJFLrEtaFtf8YUFT8PVuwaeDu6MJhtxPaeYDWx/bjcNtB9VK/deOalyWsqQbtoErd
      9p3YbeDt2Yy7rovGbjfJawu4Qh7cvTup39SN262sfWnCcmoQABPTNAFQFAUzN0XsYpKGndtw
      +X1EeptIxarU9batfWnCctY+AKZBLrZEZP8BggE7FU+Eho0RKrk8tnAntsoixeQcjmgnqjQC
      YpWt+SAYTJKn3yfr92KWBqkUykwdS6OpJuV8ERUdvaKTmx7HMNe+OmEtNQgAoFcop1Kfflld
      TnNzXujmBKleLK55WcJ61j4Aikpo10MEGr0kh4cIbNsDy3PMfTyMYQCqg6aD+1k8fpb6/fux
      leZZjBtENreSv3aBxOjsmpcsvr5q0gUqTI5Qym6kYdeDOCszZHxdBBouk5ov4n+gn/DGDRQn
      UrgcOvlUmWo6wezJFG0HOlkcnUV6RvdOdzgo+3y1LuOeVR0OSobxlX9+7QNgmlTLGo1RO/Fj
      71O3ez++qIuUTQN3E237N6N6vfjb2qA8jX/bTlKXfk1obx8LZ87Jyb9C7KEQ7mi01mXcVt4w
      8Hq9t93Gc4/HWPsAqDZan/8WamoaT7QZd9gPxQXyRQ8ed45LP/05zc88xdLwMNHH9qEVUwQf
      fpa6+ipKNkI2sbzmJX8dKYCiV1jOFUDR8Pu8aF827WbqFMoGbqcdAKNapmJqOO3aqtaoKgo2
      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
    </thumbnail>
    <thumbnail height='192' name='Treemap Deaths by Cause' width='192'>
      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
      sw4GAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Scatterplot' width='192'>
      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
      Pn7nTyxWy/x/TAQBDrPrChwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Mexico/US Scatterplot' width='192'>
      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
      BgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crosstab' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9d5Ac95Xn+cks77uq2jca3UA30PAADQg60YmUKFIamdP40+zM7dye2biI
      vbt/biPOaO/29nbWzOzszu5MrEZeIkVKdKAD4b1v772pru4u76uyKt39AUgrDtkg2agqkdP1
      iUBEG3S+rMp6+fvle+/7nqDruk6NGpsU8Td9AjVq/CapOUCNTU3NAWpsamoOUGNTU3OAGpua
      mgPU2NTUHKDGpqbmADU2NTUHqLGpqTlAjU1NzQFqbGpqDlBjU1NzgBqbmpoD1NjUfAYdQCe6
      GiAvr1/Fres6uWwO7e/+XCkQjqU+sb1MPMT8/DyLy6uU5BKRaBz19sGVUoFCQSIajaH8XYOf
      FF0nl4qysLBIMivd3bHkPKF45g62NCKrAebn54kkMqilPJFEhvXeVV1XCYWid3dOgCLliCWz
      6KUcq9EkqViEaDhMIiuBWmQ1HEMtZkkXFArpGOFkFoB4aA1JyjI/P8/CYoBcUQFdJbq2TGA1
      ivYxq/oL6RiJbPFX3xu+/e1vf/uuX1UV0Qpr/OX/889JNxykp9VFdGWB5XAai0ElmioiJVfI
      F/L89Ecv0bKjm1hggbxuxmW3oqSm+N7rw9yz08/09Dy62YHdakL4CJtX3vg+M1Idy72nyDga
      SKyGMCIRXA3Tf+EoUyGZq+dOIdhc2BxubGYjmlJgZnKSrGrChsT09ByC1YXNsr49Jb/Gz156
      D5vdwPR8mNaWOhZmpilgwVhKshhcJZYq4nGaWJidIRqPY7C7iQZmiGZVzBQILK8SSebwmiT6
      5lN0tvjWMVbg5z/8Hrq3kZvnL+Jv9LIYyuE25JldXMVqs7O6NEc8mSYSDZPKp3nhBz+jod6H
      we5GyYSYWQhidXrQ8jGm5paxueqwGO98T03O3+TozVX218X586ODyLNXmV4OMrgosd0e4Scn
      ptgqBlkUW5l4+z/zRn+CB+/bzdG//vc4W6z88M0BWm05Lg+t0NWg85OXjxOPrNHc3YPD9NH3
      84nzL3M1YsetZVhdXcP4kX/xKWNx6Abtn3uOmeuXyPc8zOtvnqdnRwuRpRzjcT/+6AmaHvsf
      yBcKLPWd4spYkILi5J/84z/BBqAVOXX0VcztO7l4fYTf/YNv4rZ8xBunaYSCi5iyOVqKOYYG
      R1kemIdd38BayIPPREmWiC8O8/Zylj987jCp4ATXbgwRjN7k0X0GzvatsePwF/jmUwcR1vGA
      1MIopcbdHHnwMACXj/6IeF0Pgfd+yj37fAzEXYjheSIHuphcM2JZO0/DoWe5cukKZkHn3v1b
      mU26MQTHMH/jIa6PSjx+b/e6L8todrD7wAMIs/1MzU4zE7YgBSPMTc0xufdzzPWd54tfeIIX
      3r3KP/yjr6Pl84QXB7g2tQKRebp3tHJlbBnH2g0Sohnz9CP86Vcf/MhrGJzs5c2UAWgFoLV7
      HwNX+7hSUth//28xu3iTPdtT3Mi46LRFWYzmfvW37oYt3HffAQa//wsK5v3U21Q0ez22j3C8
      91GM8uJLAzy8x/MZ2wLpJa7dHEcpFJDXxpgMZ5AFJzu7tmEzW9BUmaJUxGhz4XbaoZijZcch
      Hr1/H2bD7U+drpHKSmzp7EQrZFiaHCWSjDI4Nr+uWcFo4oEnn+eJeztZXA7/6udbtu+gvs6D
      t86Dw+lnR1cHcjEPQHBmEs3RiEUv4WzooLPFxfzsDLOjg0QTYcZmVj5gx17fghRZoVBIMzIy
      TiSRoXlrJ1YlQ0ETaensot5hJpNO4/S34nVakdJxrE07eOzhw3hsRpq2dNHktlDSdNBVpsdG
      CIUCzCzHPvwt1UukSgI+pxXIMTIcZEtrA1KphNXupa21Aafbx5ZmP8a6RnZ3tVJKp8nLBjo7
      W8mkEoRjBR743JPs3VrHxPgEq4FpliK5D7UH0NZzH1/5/AO/+t7saaHVFOXUWJqD2+rI6AKZ
      iZvEZAOylKRveO59WzNZyoC1DoOmsOfBp3FGb9I7f4ft3odg9/jZ1dX+2doC6aUMCb2OL33h
      aXq2eigaW9juzjO2kmX/oYNI4UWs/na6du7GoSVxdx6ARBB32w7amzwI6OhGFw/eu4PhvlH2
      PfIkdikCDiehUIaOLY0falctFZkaHyGheXjs4Xuwmq20tjTS0LadZreRQChNe3srba3NWGwu
      Whq9WK0mQqEYbZ1b2dbRTiqR5eDhh9BTq5g9LiLxEluave+zY3T4aTJnuNI7Rl3bdu47sJPJ
      /l623Pcku1o8WD2N+J1WGhrq6L3eh5RLsO3x32OLukTJ0cbOjkas7nrq3Rbq29qwmB2IUhKL
      zUxaMtHsd/76u0khF2NibIrm3UfYv60RwVxHR71AwVhHW0sbzQ0+2re0IRgtdG5pQdcFtra3
      YnK3cs92F31jqzz5zDMc3NnI+GyI3bt3Eg+HMRtVioY66t2WD15DXcNgddNa70Yzuehs9lPf
      0kFHixtP8052bfOA5kbTZe5/4ks8fKiHQjZHU5Oflo4OEoE5lkIpHnnq8zS5zMyODVBwbefR
      e7oxGT5qMwu6pmKva6a+zk17ayNCTRP82UPJJ7hy+Sp5cyNPPXovJvGjL3yND0OvOUCNzc37
      HoJLpRKZzCfbS9Wo8VmmtgLU2NR8tqJAlUCXYGWMdTNA5Tan64wGksjVMQelCEQCVTGlqyo3
      ptYYjkhVeTs1WebC2BozydKG7d3RASIT5/g//+V3yajv/3kpPs875weYnxginC5++B9/Qorp
      CD/56c8pz9E+LjKM/gCuvFI1i+HlEP/i1BJ3mef9eKhpuPJnMH6zGtZYCYYZiCtcGgySVipv
      b3RqhVVF4+3e1Q1n4ddNhOm6yo1rvXhtZkbnY7iDJzkxqZCLxHj6QT8X+zJkW6y0dKX5ed84
      ZBc48MiznJ1M8nhdGGXbw6SmbrKwHOX5f/DfsbPeytV3X2FoaZW2vUdYvH4eu8OCrecp/Gvn
      WVI9hGJKtW7EtzHCnudg9mdVsaaVCry1UOK+RhOqpkOlozeiC/Z9CUbTlbVzm1xBwdfoJpbM
      kC1peD5JcmoDJCSNtnY3cwsBFE3fUDRs3TNUCyGuD4fxWEtcvzmEqqnsuOdxOq0y3q1bad2+
      F49JJRKYoXnfYxzY1ogOqLKCIsuUJAlFBQop4nkZXdcpFAuYRIVINIXZ6efpJ44Qi8SYXs7w
      /HOP47kdNtaUIrlCkWwm84F6nvIigGioqIVfRy6pmA0qI6tZ5pJV2AQJAojV2+U67CaS4Qya
      0YzTXHm7fpuBlbU0Nocd4wZvJuuuALHZCfZ95Y/42v1NvPLGCYomDy67CRoasLobMCRvIvu9
      tLU2cvXqOcKFMPsOdLBFHSGQEdhmEQgXJDwNPgyaDuhIuTxGRx0WiwmD34fZYsfvMbBt31ZO
      nriKyelFBNLLY5ydB2lxgN/64z/BvsE36OPhhXufr6iFX2JxOvnWQw4e6PSz3Weuik3su6Gn
      Ok8cra0NHChEsHbV465Ckc3uHS3EpmPcc18LG11s7joKlA3P8ubxa2iiiad/62s0OU13c7ga
      NapKLQxaY1PzvoVK13VUVV3v/9ao8feO9zmApmkoShXiVzVqfErYfIkwXUdWJbJyHlXXKSo5
      MqUsapV2giVZJVtUqYY5XdeRSgp5WatKePlWpE9BUqpnL1dUKKn6hu2t+6yuqQneeuk4gstG
      XWsPD9/bwy+rTcevn8Kz+/O0ujZo9TeIrkucmHuFsBTH73+M8OqbONz38sy25/BXOnKhlvjB
      2SUMZgNPP9BJh62yeYBSPsefn1rGYDbx3zzVRUOFA0/JeJLv3Yxgtjv500dasVX49hpcjvDy
      ZAqby8M/eqCRj1EN/QHWT4RpWWYCGZ7/0jbO3hhge6PIQP8Qlua9aJMDXF+UaGxq5WC7kZv9
      EzTsfBB18QYZo0ihZEFQVR589AhTfTcI5008/XAXJ07fpL5zD088uO83tvQIoo3nuv+A2fBp
      5uQ0JcGNKqdRdZU7vB1lQU6kWVBEtjtMuKqhxRPAIOiYzAaMgn7rBxUkFi+wbWcz6fkwyaKG
      rcIesBiVOHKwleu9q8haA4YNeMAdz1BTZUqKiq7mWA2GUBSJazeHQBDZdeAe1kYHCETCyFKa
      3sFJFqZn6djZxkywiFePMbO4TCovM3fjBsFkhPnFBaZnFihWNrt1Z3SNpXg/AdXHo0338JVd
      /4CHrHEuJZIVNy0YRexOOz2mAr3Rysfm07EMdVub6TTJBLKVD24YjQKypKAL4scSp9wtFoOA
      JCkYDMZ1ZaYfxZ0dQC6RzeUxmGxEFqdIyqCrCiBgtdoQDRqL07NImgFNLYFuxmo1YDSZMBpE
      csk15oMJrBYdSTFQ7/NTyiYp/QYdQNUK3AhdYTY1TH9yhanQSW6WmnjCt454vIwYPR4eccpM
      KnYO11c+X1LX6MOXTyE5PXS5Kp/xbm3xIiZTNLT58Zoq7wB7tvlYWYqzd2cD5g16wPvyAKqq
      Isu37ky6rpCMJVEBs82JzaiRyRURDEasBh2D1UmpkMdohHxBxmAyY9BVLHYrBUnBLGpgMCHl
      cuiCgMPlIp9KIVoduBzWCi/GNWp8PNZ1gBo1NgObLwxao8avUSuFqLGpqa0ANTY16zqArhUY
      7e2lt7ePhdX4h2TaNFYW50kXPvyZQSvlWVxa4VNdWaSXoP9v4cxfQKEKJSCqzE/OTPKXp+dJ
      VNBcIpHkP5xbopjP8Z1Tk/zttVWkKkTeCtkc3z01wQsDUZQq7CtS8SR/fXKC18aTaBu0t64D
      aGqEt97rw2vTeeeNd0hm4ly/fJGp5Rjz471cv3mT9956g5NnLjK+EEJKhbh04QIL4TSJlVku
      nz/H0WMXyebiXLt0kanlKMV0iEsXLrEUqY5C6SPJz0C8AN5ONlxQ/olQCCYVlIJErmJ3Bo1g
      KsdiSMJgsvB4t5dQJFsVqenKagJHWyOFSIxYqfIeMLaQoGdXC/PzEeQNesAdr3ohvsrA8BhF
      YG1uluDSJC++fpJrJ18jb2/FiobL5+TUm28xPDRGODjGC6+d4N033sHW4EOXFc6+8TIlTxNn
      Xvoxly+e4PjFq1wfmKqy9HEd5DzoVlBGYeXuOx9/FFIiC/VeetywmKpUtE1kX6cXh0FANBrp
      bPHS7VRZTFV+hdM0HYNRRNB1tCqsOKqmYzKJ6PrGa4/u6ACuli6+9MWncagpBq5fQ/Q1Y9A1
      BEHAV9+AUQST2Qy6xsj1K7jbOtBlGVXTMZvNCICqKpitVgRdxdm8jd3tfubHJyls8ITLirsH
      THFYiUOdu+LmzE47JJMMpaDVUcnElIDJIJBPJvl3p2ZYkIw02yufCGtqcrMwFiBrc+GzVj7T
      s7PNxaXrCzgbvJg3KIlcNwqkaRkuHb9EThBo3raXrc4igzMrmG11NFryeLvvJzk3SCiewdW2
      k2ZDgpFAAqfTz3Y/jMxFcPmb2d1ZR++NQfxdB+j2CVy+NkhLzyF62uvv6sXXqFEOamHQGpua
      Whi0xqbmA4qwWilEjc3EBzTBtR1Rjc3E+omw287wq3/r/O6zjFyQ+Nm1Rb5zcYHBWOVWPl1X
      GVhIIqk6l4aDvDmdqqgkUtdVrs0n0TSN3olVjk4kkKt1rYoRhOWx6tjSdYj3I6Q2nldaPxGm
      LPMv//c/4+irL/Gff/ImBUUln8tRlFVOvfCX9E4t0Te2SCGfI5vNoWgqhXyOQnHjjUqrjclm
      5fceaMcnwBZPpSRaGoNTq3z/xhqFQhGj10NkZo3lCibCrgwH+GFfjHwqRW/KQJdNJ12Nna0u
      I479GONUXxWMAdk5jJf/FWJ84w5wx6uuA+g6mqYyc/0kV8cXkM1b2SmClFphLlCE6BAvvTvM
      t/7wKS5cGkFRBP7wv/1T/B+cjvOpJB2Jo9f78VVMwSRyqKeBrlkJwWJlrzPDTZNILq+CuxKx
      eZGHDzRxan6NXKrAVEwim1L5Rn0dfnOFY/PhKwiSDV0sgaqCocK5B1cX6vYH7kpbcscokLul
      m688/0XMhRWGhiaxN2xla9uvKadEE8V0nIOPfwFzehXZ4qdnexvCZ2UJAAaXCxxos21YUvdJ
      0Ap5Ti9L+Iw62SoUy7i8DrY5zbiNUFSrcFEsDegOM0IuessBPgOsuwIIghWvKcM7J87TvPN+
      DnXYuNI/jsPVhVfowOypozmbIhgoYXQGYecBtq70UzK6cX5G7v4Au7ob8FQ8S2riG0facDut
      HKiXyTa2s8dXSVW8mW890ozNbeW3dglkBD87qiCJpG43mqsTvTML5ur0PtU7vokubjypWlOE
      1djU1BJhNTY171uHBUHAUOkHlxo1PkXUaoFqbGo27RYoV0yQU2USuSCL2WjZk3r5fJGZcJas
      rIGuE88WUfVbScRIpvzylGxOYiqUIVFUyeYkZqN5FF0nmswRSBY3rJj6RKhFiE1DPlcFY7em
      vgeiWRKSWn49gK7J9J49xquvvsrpayMfewiZWszz7lvvUtrgCVUDRY7zvd5/y/VwP98fP8ql
      2RcYypX34f/K5BqjSxF+0hdmdmmNf/b2NGkFhieX+D/eWyirLXSNszfmuL5aIFuQ+Pm1Zfqn
      1phI5Pju2QV+fmmWxXwVFCqBYzB6Bvp+CnLl7c3Nr/Hm6Bo/vr7GRqO868biimsjXFzU+R//
      4Dmi0RThuUGu9A2j+3bTJo2yWPSA0cP93Rb6+qfw7HiI1uIEQ2sKS0thOjsuMjA4R+Puh3nq
      vu5PTSMsXVcYWr2Gx7EVdB1BELELWQYSIQ4628tm5/OHtjK/FELLmamvN9FmSQHQ2lJH4/hq
      2ewAtzpeG4xEoklmTTKT6RLNspEDgoBB0CgarFirstbrYLBAYgQkCUyVHW61kihyYHczl68t
      I2s6xnL2BpXzGYwODyaTlZaWJqR0AkUpMTw6STK6xrb9R8gsThFKplDkHGPjc1y8Ps7TX3oM
      p0kjlUijFDOMTy5UeNDdJ0PXSixmFplPjTGeSfFAy/3YBDNtjrqy2llYjjJVMPFcjxePw4zx
      9rXxViBJogM93S38VztdDIby1LmcPFavc3YqhtDQyEGnxnTFJJi/hncPtPWA1QemyucB7CaR
      bLaIyWTaUGdouMMK4Oi8h4ZzL/KLVwLIhnqa1QVieQVVFgABs9mMaNAIzM+RKWoohiJdrU7e
      eecMyYJCYH6WrCSgGEpoOhs+wXIjGux8fe9/z+HYIEVrO5HIOVKOB/ma11lWO2PBJPOSiGYy
      8qUuB/d1+bCKIAgGHu4ucx9SQUQs5HhvtcTXDneSXo1wJWLndw+3cGN4maihjicq3RsdwOyE
      0GnY9dtgqXz76/07m3itf5UHD7RiKkdv0Pdxu9pT03UEUURAR9NutdgWhFsh01/+qa7rIAiI
      wi1hNIKAcPvngiAgCGJVSg1q1Pik1MKgNTY1NUFMjU1NTRJZY1OzaRNhNWrAnRxA14kGpjh7
      9jxza+uPDyplk8TTH2xzFV2a4PTp05y9eJ20pDA+PMSnZW3JS4v8zcBfsFoq8t7kD/jrgf/I
      rFShzmm6xvn+Jf7diVn6YyW0ksQ/OzpNOXOluqZx/OYif35yloFIgVcuzvIvjs2RUHWm59f4
      iytrZbR2BzLjGE/8UwxjZ6hG7DsWSfCXJ6b46XCi/L1B1cwSPz82wP79O4kFFsjlklw8fZyr
      w3Mo+Rinjr3D0NQCZ1//Kb84eZXZ0V7eefcUieKtM1keHULxdVKvLnG2f5FMOk0xF+Ps8WOM
      LoZJheZ57913mQtlqiyh1EgWU+iqSqmwwLikUufYRqO5MouhJhXpi8vUu220OAycGQqhGsv8
      +RAEHtnTjEeXyaSyLAp2vtCocS2kkJZVlEo5998lOYVQNKI7GqmGKmoqmOGeA61EV+KUyt0b
      NLMyj6l5O35/M4cPH2L09FuUGnexduU1Lt/s5crwLINDUzS0NLGtu53lQIjE3DWujIduH0Fm
      ou8yV8bCbNtSz9DNG1w99SZiy27UVITZ+XlKqSDHzg9s6MQ3jkirpwu3wYCmKZREH/tNyxyP
      xCpiTdd1JE3kkE/j9d4AxwIFViJZpmLlLRYRjUa+vLee0WDmV3YNBpEdzS422DXwk9P6LPKz
      /xvC3MsIhcoXwwhwSxh/FzH2dR3A1b4DwtPMz09z4dJNBKudbDyKhAWnr5EdbT4iwQAFXSQX
      CXBjdIG6Og+q+st7m5l9h4/QaDcglW4J5a02G9lElHQuxejAGCaHC3SN6qvoRdwWL1bHdg5a
      spxKFLnHU95M8C8x2Kw8VG/g2JzEkZ5W/vXXenh6p59d/jImpnSNiyNBXp5IcWBHE91CgVMx
      I4cbRERRxGerxkxWIDGM4ep/Asd+dEvlE2897W6GRlZpavWVpzfo+xRhuk4qEmB2OU5zRxdN
      LgMzU9OInha6ml1MjE1gqW+nxamxsJbCopeQNHA3bKW9wUUyFESx+7CraUJZEaGYomVLMzMT
      07iat+FQ46zEC1icfnZ0NNcSZTV+I9QkkTU2NbUwaI1NzftWgFoWuMZm4wOa4Bo1NhN3TISV
      pBzxeJx88f3PBUoxT076jD4r6Dqr8V5+NPoiM9kIF2Z/zk+nTyJVSDOoFIu8em2Of39ikjPL
      eQr5PO+Olj/kqqpZLi8dJyEXuTT3Cj+eOomk5Hh38ke8sXiNYjU0kVIIrv0VTPdWJbJXzOd5
      8dIcl5bzG+61un5v0FKCl3/yM3p7r/PeqSskkjHS+SKRUIT562/x47cvs7IWRVFkwqvLhGKp
      z8QWStfznFruZ7e/m3x6kGt5G/vEKU7GUhWxZ7RY+MbhDra7LHT7jFydCHJyqty2NBaiNzi2
      cI6MXMTr2U8p0ctMqpdJtQNnYYDBdBUGEyZHoWiEpStUYzzo0FQIb2sd10ZWKW3ws7dugDi7
      OEzKu4f/+pmHALjx5t+w2vIUM2+/zhNPbCUeWeXM0TE677mP5elxRpck/un/8qfYzJ/utiq6
      JrOaW8GRMlIwdtAprtKfDCNaskBlcgHpeIq8w0WbzUzLgWbOL0bKbEGkq+kw3YGbYHDT7ZSY
      tJuIalvwyccZKybYWy8BnjLb/TuUJDBZQc+BpvARrWfvGknRcTrMKLJc/lIIS50fORGhWMwz
      OzOHJprQ5CIl+ZYlX3MnbR4jc7OTSEY3olpE+wysAKLBxr66LWTkIgY0RKMPhTqO1DdVzOZs
      OEdno6MqGVldDvHmwiVSchGjoGE11WE317PD5a+8cXRQS6BIVdkCtfttDIyuYqtzYSr3kDxd
      V5m4eYnJYILmrn3s9Cmc651BlnSOHGzkxngIs9nJPXuaudk3haIb+cJXvojHXKWs411QktOE
      pCwN9kaKpSh53UqzzVOxIEChKCMajVgMArquEc+p+J2mMlvRSEtJbBYv+UKIjG6k1e4jkV9F
      M7ipt7oq35hAK0F6Bcz1YHNSaYO6prGWkrDbLbgthg2ZqynCamxqaomwGpuaDyjC1M9IX/ca
      NcrBBzTBNQeosZmobYH0EkJsoWol2WuRNL3LWaowIOYWchIhFa6KKV3TmFhOMp+qzpw4TVEY
      WkoQzCnl7w2qKiG+8xd/wxuvvcLJKyMfkdeQGegfRFb/i84pl1hmfKbMLQDLjoIw/TOMl1+s
      jrlSntfGUhTSWdakKnxE1Bxi759jGL1aeVtAaC3GuaUMxwfWyFZhIzE9H2Ywmuf1vvCGbyjr
      xyz1EkVTPV/50pP85KevMe4o0Dc0g46VIz1WzozEUXJJ6uvs+HYeJjY1jlcP8eZADIta5KGH
      dzEfFFgeOc9qPMeBp77I8vWzRLIqn//677LV+2mYoySidz6CPvN6VaxJyRyTSQmpWKR9WyMV
      jxOKVvSuR9GnpMrauU0mV6KptY747BqZoobLXtkNRiSr0N3u59LNFRRNx1TO3qC/RBANGASd
      8d4Rdj32BbYI84wt52nevg+nUaZnz24i4TDZbBa5lKe+6yAdTplIPEsuEmQ2ZeIbf/CH9PiN
      5Es6mWSIRLo6F+SjEcFsrZo1i8NMm8/FIY/OTLIKOl3BgG6q3o3GajGSSxVANGGr9ERKwGUR
      SaQkLBbLhltvru8AggElGeDoW8dxdR7ikUf3Mn72OIvqVna12bBZzNjtDkwmMzaLGZvNhtFk
      xWYxYbE5MJvNWP2tdDolXn/xJ/TPBFmLp7Fb7ahalUTaHwsP2u4nqmJJcHj4cptA3Onnsebq
      DJHD2oW2bW9VTLW1+mkzKOzf3USdsfIOsL+7EbISTx1qLk8muKYIq7HZqEWBamxqPiCIEcWa
      T9TYPNRqgWpsamq3+xqbGsO3v/3tb3/YLzQ1xbFX3mJsdh7B7sPvsd8hai3T1ztEfWMThttP
      49l4gOnlHI1+18c4DZ3F4aucvtzL7NIa9a1t2EzlFdb0B97gzbk3+MXSHBSGeXXyJcaLBqYD
      7/DG7DG2NH0ObxkjF+cGFvjFzSXOhDQebbXw/746QsNWDy++O86x8Qit7fX4Nxwq1FkOhvm/
      Tgb5fE89BnSuDczxN1dXERw2rt+c42d9IbZta8Am5/jnr06wY2cT7jK9pbqa5uejP+CN+bM0
      1W3lZ/1/xZmVcfY176dv5ju8HilwpL6jPMY+aB1i1+HkC9B1AE79TyAeAu/GxD7rJsJ0LcXE
      ssI//of38IMXjuL6+hcZun4Tg7eD/c0aNyZDKCpYxRJb9j1ANpMlsTjI1ckwum7i8KEt5PIG
      JnovMLaU5uHPP8Fy/3mCWRP3HdzO8NAExRI8+oVnqLcbWJqdoGXfV7HNvc2VsVWev3/rht+i
      D+Oe9q+Szid5cvfv022SyCoWHu34HHVqN3/R+11kTaWcC+JjB7aSLSyw/1AjfdOrCBYTug6i
      KGAUDZjuytd0NLMBty7cKgHQVSbCGt96qJn3ptbQNQd/tEfm3FKO9mwYp81S1tIEweDmqzu+
      wncGf0QpO0nR8yQP65cZSeWwWeuwVHIipZKGqevg8EIpD+6Wu2q0+pFX3GxzYu6aEB4AACAA
      SURBVBEKXHznXcxd95EbOca1kSmSQh1rcwN4fB5u9o8yPDRKanWWkOZFD48wNjPP1PAAJ24u
      8dDhPUjZOMG1FHMj1xibnGExLlBXmmZ0+XZnaUXi+umjnBvP0NNRAfWSlmRB9rDDaiKZW0C0
      b6feoJDUXfx+RzcXw4GymisVC8RFG62UuDCfYiWRZWA6RMzh44stRvrDd5MMFNna4Hhf8sck
      6uRLKhaTEUHXKMgaRqXAxYUss+EU07HyJR91rURGd/Dclu0MJMLoqkRJE3CYXbQ5Gstm50OJ
      XodoAFZvgmoD+8fZYazPHeVbUirCQP8ggqedrmadydlJJNVJt11EMduRjEbMFjOC8MvEloDd
      6cSSNN8qLjPZcRlSjI+OYvfXMTgbotVlRdFULHYHdoOFX10Wo5X7H32K8I13iMSDjF5YoKu+
      iN71NPvbbHf1IgEoRWjw7r/1upQiW9ydgEpf4G1m8xLP7Wq7exu/hiqVaG5yY7TZ+J+f38vl
      kSCtnX4s/ctcSxv46p67zUCLbGuwo2tFri5IHOl28cZEmmfu3UIqsMbJsMgfP1GPf6+Ps72r
      7K0vY8ZbVxhYfpfZfJ5nur/GyMIrLAg7ecRhJK95aa1kCUTzM/DsAzB2CVxucLaDZePZ7jtI
      IosEZgPIogF/UytuC6wGVxAdPrwWlbxuRS2ksDtdFEoqaqmIx24kp9swyhkwWVBUAxbyhJMS
      rVtaiK8so4gmnE4HKkZsFNBtflxWkUwiimDzYpDTZBQRvShjN+tg9+OyfrqF9r9JNE1mIaqw
      vbEMN4lNSC0MWmNT8wFBTI0am4nakLwam5paIqzGpuZ9iTBd19G0W0FVTY3y8vd/wcJKgGgR
      lsYHcda3YTMbSAZGeOPYWWJFEx2t/l8lyG6efBuhZSeudVreaKU8505eoLF7G+XuivNRzITP
      8dbSaeKaC6EwxuuLFzAZrFxePs7ZwHHy5m46bI6y2VMVhRP9y5jrPHgMGm/3BrG7zZzqC3Jx
      MUNrowtXOUuGdYWrS++QNdWzsHaC94L9NLvaODv7EgPpBF2ebXeZe/g7FJYxjLyL3tCNOPC3
      iGshdH894uCPEcMh9IYuKtYJrBDAMHIOvWk7wvSLiGobusO+oUPdIRFWILCW5Zn7D+Jv9nG5
      /xLbDt5qk7g8OUje1s6WejeByZv0Dk7h6TpCbmGGpOUMgYYucvMjtHa2Mzk+Br4e9rhi9M5n
      WFmK0rm3hd6ro4j2RvY3y5yfSPPE559me9PdxXTvhMuxk9/x7uJvR18naDLQ6dmBxVzP17q/
      wauTr3LQU19We+FYhsFAitYdOksrcS4upNje7ef+Pa2E55cZjiu0tJZLE6ATTY9xaW2QB6wN
      DKdz7PE0IQgG9tQf4r2lK6S1J7GVbb1XEKJDCMEx6OxGLHWicQNx0YpQcqA3VKbFJACajDj1
      NmJER82vIi5fAdMTGz7cHd8Sg8mK1+vFbn3//brnkS+zwxLn7OUbRGIJlFKOsYl5VKC+tYmb
      Z98jkNIxyGkUtcTI6ATXLg7z4DOfw2MWGL15gy2HHsUSGWF4PoC5aRfbGp0bfhEfh0abhxvL
      l3m841lihQSCluBqZIpsug/BdRh3matgW5o8dLtNaMUirw5HAZXZlIZdzjOv23m0qXxroKbm
      eXv+GKogM5uYIabIyLkRhrIqW1zttFhNrBbK2ZDXiN7+wC01nSqByQlGHSG1giBYEZYvIEgV
      Uv3FLiIGg5BfRBDr0Zq77yrLfcerXszEmJycZGpu+X2i+Jnes8zFFXS5QGB+nmxJR5WL6Do4
      /NtwlcK07tpPMjBHLK+gKjJbt7o5f+ICiYJKe8cWxq6eJajU0eY2YzQaKj6b4Nj4f+J6Js5q
      Ic4hTxPD8UXcFg+T8TV6vJWbUSaazXzr0U721duoF4v82aklUkWZtVz5VOOCaOOru/6E+7yd
      tPkO0W0oMJrJUEeYFyZfZbkoU2eskDTS1QOxE4hJJ1r3YfTCDIIsohsq1CLTexjlwd9Fd7eV
      ZRDfuoowXdeQSzI6t3TBogCiwYAoCOiaSklWMBiNCOioqoYgiAjoiEYjmqogiEYEXUVRNRAE
      jKKIoqoIgojRKKLICtzWG2uIGA2VfR6X1SKKriEKRkyCQElTMRnMoKsIwq3XVV50FFVHFEVE
      ARRVQxSgqN56u00GEWOZ98iapqALBtBlZB0soglFK6JhxCway+zkOqgKiKZbq4BgANEIavH2
      16bKaf51HTQVDEbQZMAAG1zBa5LIGpuaDyjCPo1jkmoJuhqV4lNfCvHrodkaNcrNp94BatSo
      JHcckpdcnePc2bOMzAQ3MIJGZW56kqz0aeoB9EEWg1GOTSWqNt1G13WGFhNU40lL02QuL77O
      scUrVFKj8kt0VeHKxCqD4UJ1eoPKMmdGVphKbLwX6fq9QbPL/PjV8/Ts200mtMjK8jxnT55g
      ZH6F3vMnuDwwQyI4w/nz5zh7dYBSKc/V08c43zeJlIlw5uQJjr79HrFkgkun3+PiwMwGT7GC
      FHO8MpomG1hlKFsdk6HAGn92Zplq9MYryYsMxIs82LwPSxUe7YLBCGNpjatDK6SqcN8bmVwh
      hsC7vSsoG3TwdR0gszyF2LILUy5CMBRnbXGMoUAJb2qA1y5PcvHtF7nW28d01kKg9zxTsxOs
      ZVVOv/QyJ8+9g+rrxG4QyIQWiBdk3nn5Far0Gfv4FGUUu43tdSJz8crfk7VinjfmS9zTYERW
      K3+PFDUjHnOevx78LqFS5T+R+YJCXb0TQSmRK1V+yUkWNVoaXRTyBZQNTslb1wFc7btgZYyM
      wUk6ME00W8Rit2M0W2hq38Gjn3uMFo8Fj8eHw2YgtDBBICPitYkYjWZy6RQlVWNtfpzVrAm3
      mQ1P8qsYVjPWfJ6JuEa3v/LVSYqs47HqTIazLKUr73CqprDVfz9bzToppfIO4HSYiYfSqCYL
      TnPl6yzr7UYCKylsDvuGcyrrPwTrOunoMuOzy9jrWuhotBHJCmxv9zI5OIDqbqPDrZPAjZAJ
      4fR6mJlawGy10d65hYXpWQSLnc4WHzOzAUxmGzsP7C1jPUp5WF6LM1Mw8FinuwLJsA9B15kO
      Zehsdle8IFDTigyuXka1bOfe+o6Kl/7qqkr/fAyr181uv7XiQ/k0WebqXJzmZh/bPKbakLwa
      NT4pn7L7cY0a1eUzoQgzGGqi+BqV4QOa4E/jjkipwgNcjc3JHRNhSqlIJp2mIJVYzy90XUOW
      P/6QMk0pIVU6JKfrlJQcyWIa+XYZha6VSEgJMrKEppVIFVOUNBVZyZMsplHvxvF1HamokMjL
      vwrHaZpGMi9T0nRkWb31O12nUJSJ50qU7jYkpt9qhKXrt77OFm4dN11U0QGpqKDevqHlS3df
      eq3rGnnlv2QvFLVAqpRF1XUkOUOqlEO7/XVazpc3sajr5EtpkqUsmq6j6TKSUgJA1YpI6sY/
      T+tLIuUMr//s54QzGYaGp2hqbUGRVRQpjWqwkk9GyBRkivF5jp4aYNu2FpKxOILRTCGTJJPJ
      UixKZHJFrFYzqWiEbFEjs3SN44MZtjWYiadyWO22skdfdL3EqfnXGYzeYK5kY7e7ibXQ63w3
      MIXd5CQcPc250DhJ3cLg4stcW71AznaQbbaNNY/SFJk3+lfpnYsSM9rprjMxMrbEyxNJQkWY
      mVrlxFSMot3JsWszJGUBf50D14Y1ijpzS2H+vwshPt/jw4DO4GKMk8OrjOYMHPCJ/N8vjNN1
      sJHg9Cr/uj/Bs913o9LSmFw7yn+c7uWp1kOgFzk+9WNOB69jcrTw1uj3GYxcx2bfyqn51xlP
      LdPm2YGjTFtXVV7htblT9AbfRXTdw/zyDzkayXDY28DbY/+WPrl1w4q+dVULucAQEWcPz92/
      g+VolvTCDc7NGmlKX6L+c3/C8rXjLIVSPHRkDytrEa4c+wULKQlZaMWdm8TS2EIwIuCSEzzx
      9ae5cb6P5ZUIzz6zH+Qcl86eZmJqkkd/759wb3v5tLgAgmjhi12/y1zkLNPqrWBjrKTgEiSi
      hSixxCoGiw+XyUbeYETSTTjvQo8gmsx884F2BsZXSN3W+U6ulPjqkTbe7Auxyywg6wIOo4ZR
      NxBJFSncZSLMWWelXszdPgGR+7f7CSZkHt5Tx5XJNRq8VtDB6XbQYErclS3Q8Lo7cAWGbn+b
      ISx7eL69nYuJZcwGgZxgQ5IWiJcU/GYr5jIq7AzmNn6v55tcnPkRJhGcrg7s0Vt5pS3udvJ3
      cex1z9Li8lFKhJDkAqde/zkz0TxoCiVZppRcI6qYcZhUzHYvDc2NpNfW2LJjPzs6GjFZ3Ozc
      1YGzrpV2j4VwKEhedGCnSFEFOZ8mnJLwOkXyUgUyhrrGUryfRbmOx5t6AGj0PcIf93yNsdVz
      GAQL9zXt4cbqWQKyl9/v2MfV6MJd2ZtYiJGyOXm45dYqYjNDKq9gF3TmCwZ+e4+b/pU8zx3p
      5MlGgbOBu7lsAo0ey/suXiaTR7XbaKDESKTAfCLL0EqBJnc5lGBGGu2/1q9VMGGgSKYk4dIi
      JC2HeLzOwXg2gde5B58SZE7KlMHubfQS/Svnsfg+z367kwb7rdXMZHLhNd/dzXPdLZBo9+EX
      kvSPz+Nu2c6Re/eTXJkHq5vOnXsoRFZx+hvo2L6dfHiNnnv2EQ6s0tK5C5cFGlpbEAx2mjwW
      fFtaSa6G8TbW09rWjtXuxqJmMTq9NLVto6muvJMaNb3IuaU3WSkmKYo21uILOE0yxxbPsrv1
      WY74/FxYm+CBtmfoNKW4EE/x7NZHqDNuLDUll2SOj4ZYzZYQbCZmAjkOb3dwajzJw3ta6LAo
      XFqVeXqXn+BSlL60wPN7/DjvqiuERjKv0dVo5MpsDr9dxGS10uyx8cB2H40mA/u667DpOpmS
      Tk/j3a6yCsmSSptVZDSTo8uucz2Z46mOpzEXRphVPDzb8QRyboiooYWHGnZhKdMqIEkBjgev
      EC2s4HLswmNQkTQb29yNKGoO3djIlg02yd0EirASK5kkza7GKiU9VAJxhS0+S8UzoXCr4nM1
      pdPmrc7UyaKSIi2LNNgq18GjmmwCB6hRY33e5wC6rqOqVZhx/wmp5QFqVIpaLVCNTU2tFqjG
      pmbdIXmqEuKll66wc6uT114/ybZ9u35Vvjs/co28YGZweA5jLkLa6MBtrc5D2MdB1xWuzr/C
      0cXL2O3babTYiMQv8b2JtwgUDezxNHBx+mcExAa22qy83v+XiL4j+DcYldEUmaPXF3l3LIzV
      7aLFYUSVZV65NIPidDM0vMDRiTh1XieWYo5/c3GFx7Z77+o1JrOjfH/yDPc07kNEoXfxKK8t
      nMVs8nFl4Q1OBS7gdO2ib+6nnFkdp8HTg8e4sWZVainIT0Zf5uJKH+3+g7hEmfOzv+Do4iXq
      Pd1cnvohp9am2eqq4+WRHzGUjtPl3V62KBBAPDPM96YucNDj5DuD32c6m2Z73VaGF1+kX3Kz
      07WxRN8dSiGKzAz1cubcBWYWwyyP3+ClF37Aj968TGBqiMH+67x74jwjQ6OE0tUQ+H0SRHqa
      H6FRyBCSbiWL8lKYIiLxQoJYeoze6AI5ucRi6BIT6Qj5uyhNEEQDjx9s5yuddmYTRQCSqTzh
      jEQ2LzGc1Plyl413p1MsJYuEUnerjZMJ5UOspSO3S1REdjQeodlQJFRSebL7d/hyfR398XGm
      0xJNjhacd5GVFQw+vrr7W9xjK7AkyYCRA80P41ATxPIzzJRauc+W5NRyLwbH/fiKc0zm03f5
      Gn8dmVBhjdVUhFRqELHuCezFEUbiQUL5VeLFwoaPfEcXtflaue/QfhwmKOQzqJrC3NwCuXQS
      T9tWOtq7cYlFJPnT9ZAqCCJeWxMPtd3HXGISgLHYGo91PkMmPcQvJl8hLMcYDV3lp1PvkSyF
      GY5uXLMsiCK6lGcgLfKFbbd6nPrr3Wx3mcBi5UtdDm4sZlB02N3ux3nXFQImehr34hAMvzwB
      XLZGHm09zFxyAUWa43qxhS/7LWTw4pEXuZ4MbdiaaLCRTvURtR3hfpcVBAMeRytPt+1nKDKF
      IJoxigJe9yGahQBzhQLrFo9tCBO7G/dhF0V8/sdpU0YJSCXMlnp2edrvah9/hzVRxO504nQ6
      sdksJEIrZBUBg6hjMlswmx0UUwESJhP1FW5r+EnRtRLHJn/MTD7JrrbnGA1N0elt5b2F49jd
      e/hHu77A1PIxVm37eXzfb3N14rs4G7o3bE+WJP7m1Bw2v4uJWA6TBIc6nZiMIkY0ZtayLOV0
      nt3vQRAo0wxkAYvRgqYnGAnHCScvMZyJst1/iL8efIHGui7m5L1sM5/hRsrAl7dsvBYonx3g
      r0bfZVf9DqZSzRg1lbG108zl4hze/jssLr7E6biTbzZqnFhZwWDbwk57uTtEC1gNZuTSGjPp
      EBbrTnY4HUSzJsziXaxuf/+jQEUmIot0N+y880jMsqEwtJRn/1Z3VRJhqpZhMh5nT8UGU7+f
      QjHKiqTQ5Wmuir1KswkcoEaN9fmAIObT2IawpgirUSk+E6UQn8aGvTX+flCdbfFdUtul1agU
      6zqApqbp7QtyaF8bQ6Nz7L//EHdKdQWn+tAb9rPFW+3xdx+PTHaM1wI36fAdRs0PsiRJbPV/
      jl3GOGejIZ7veg5POaNZus5aJE3cZEVIpOhPw1e7nfx8KEJJg4f2tLDfV57koaaonBwOspDV
      aKt3kknnSJd0Du9uoRiKsSZYeW63F3O5VlJdRph9BzGjoe59DmHuFQR9K1qjHcP0JRC9qAe+
      CdbylrnDrV5HJ+deJCW282TLbi4un6er6Rn2ufwbGgByhymRYV75xVW6tro4cfoGO3a1cvXM
      eRbjJbxCgrNXB5ieC1Lvd3Lt/DkGblzG4G5hYnENIT5POK8yeO0ia6kSoblhekeXaGnzceXU
      eyxES7S2NmKo4tZmcPEVLPXP86BvKzu9e1ELy7gdjVwODvNQYwdpfNSby+e8pVKRH5yeJe9w
      4rGYKEYS5Lxent/hZXElxb5tPuyG8rx+QRTpanajZPL4mn083V3HfCDN3q1W3hlOY5RyuOq9
      +MvVIFTJIGgudH0cQzyGGAhBYQA6/wCtqRkxmURv3UMl5k5JxRlOh1J8ffuTFEsxfDYrJ5Yn
      ua9x54aGUt7xlielwoyOT1GQYeDsccSOA2SGjzEwuUCgYEONTHHp/Elixna2+CzouTA3RucJ
      zoyyFAwxNrfKrm0NrMULLPQfZ3wxRF//OONjY+SK1X3YbvY/QDF1ju9MvkOxtMqC7GS3BRZy
      q1wOnmNRKm/n0nMDQfyNLtIlnT0NFiQgW1DJxeIo3nrqyzqzFIr5AvNFI3t9ZlLhOEKjnzpN
      RzRoZLk1iqpsmOrQ6+oQshY0fzOYJBCdoBcRgjfQtjxcsRGpRsHDDpeVH45+F9ncAUoBQShs
      WIR/Rwdw1Lfz0AP34TSDx1dHdGmelOrAYxWwO5xYrUasDjfZyDLRVB4cHoyZEKvRW3I4o9GM
      nAkzsRTB5bShaQZat7YipWNkC9V92E4U0/hsjaCViGWX8Dg6MZrr2enw4zNbKSjlPZ/2ljrM
      qkI6K3FmJonFKJCXNQbmsty7rbwaaIBwMofX68AowEBQ4kCbDU1R0Uxm7IJGupzNauU4hhvf
      BXsLupoGow9ECYpphEQOvc7/0cfYqGk1iyw6cRlF5mI3CJQEFCWPvsEG6esPydOKrIUyNNW7
      CEeT+Bs8rAWCiA4/DQ5IyibMSg6T3UUisoqqi3ib2siEllAEEx6vl0K+QEN9HauBAJpopK6+
      mXwsiGx00dbSQJl2AB+LUinOZDpIm7sHOzmKghOPyUSmEGShUKDH21W+PfJtilKJDAaQJFYK
      Oj1NDrKZIm6Ptex9QQtSiaJgpM4iEssUcTnMmAQIRrPkBCPdflv53m8lhxAeBU1H9+2F/AIC
      HnR/C2ST4CrvzOVfR9dlFpJT6KZG2q02ZlPz1Dm202R13H1v0E9rGLRGjUrx6SriqVGjynxA
      Evlp5NMo06zx94NaLVCNTc0dt0C6phINh5A/ZgBBVyXC0VQ5zquiFOUEM4k5copMNLvIbDpU
      sdVPU1XmQmlGV1Ks5hSCkTTja1nK3g9M14lnJEqaTiSRZTpWQNM0liNp5uISFZvIpCsQHYf4
      yq2p7bFJyJWxKdaHoeQgl7z1tRSBYmnDh1pXEgmgFbP89Lvfp23fIcLz0+RUI1o2wkooSiKd
      IRKKYHG6yYQDzAfjeJwagxMhGpw6M/NBrC43uegyc0sR3D7fhsfYlBW9xOnpV1kpZsgUI7y9
      eJVsZhDFeQ/N5vJXhuiaxmIsy4XhFYQ6G29fDtDos9NUZ6N8U4R0llej/JsTc+xscfLj66tk
      oknyJjNDyxmG50LY/XU02SpQVJibhrkJmHsVFAFmr8DqHLQfqswTppaHG/8KVorQ4IFT/ytY
      HwSvZ0OH+1hXPBaYYqL/JjNJK/d5wiSa7mf6whXuPdjIVCyPOTLD6HAf2a99k+u9M0THoni6
      95AqaeQWx/j/2zuz2Lau9I7/Lu+93FdJJEXtsmzJcmyPEtmJ4wnsOOPYTTzTYtAZtJgWUwwK
      FOhri74ULfpU9Kko0GmDDKYzaItpmiaepvGSxI6XxHZkW5a1mdo3aqMWihT3nff2QZk0bkZO
      IpEeJ+bvkRD1nUPynHvOt/y/IW8fwe//OUd2FbtI4sujFFJ4w7NYDQkqDBUIFJDUKP3rq3SY
      64tuTyNJ7HUb8AYqOewQ6TfI3JoK0lxrx1TE1Au73USLVYuAgICKpOTwJiR+1OHm7TtZ7LoS
      ZdSa26CjHm7OQjYAjcdh+k3I5sFQilQzCeo7YUoByQI17WynJ+um30DEP8n4QghBoyXgG0W1
      VCEqOVQVGlp2YTCYaKqpILq2zPRyDHeFnkxWBaVALJGnua0VqxpldDGMx2kmnXk0LrKCIGLT
      OnnWsxtveIVDNc9iFQ3Um0u3OH3+KPUeK5IgcvxgIx3GHEOhYpaRCpiNMpIgIOq0PLerCpss
      UmfRcHVwiX176qgzlsjhp8Sh/wzs/SFYzZBYBcEKUokWnEYLho2yU2QzyNvTPt30CCSSo+d2
      D82dR3iisYqVtRgeTx3N9dVUeBoxa0UaGmsxVXiwCUkkm4eaujoq7FU809FAb98Edbvasahx
      VLMLT009brthW4MtBoIgU2eUuLEyz/Hmb5GMDrIqt3GyuqVkuUmxTAGXw4hVLzI46mdFZ+Ol
      nRakItsrFMDjtBBcDrGitXKsCi75osytp/BUWrCWonNjZBTmeiE0CXUvwtotqDsBjkpKVhKn
      KiDawOHauIOYGsC4tcS7sheozGNNORBW5rHmM03yHkUdTmmLgk5lynweX4ma4Gx2637eMmUe
      RPkIVOaxZtOKsPzSAH/xt6/QtPcprr32j9zwS3S21X3mHyTX/Yz7o7gqrA9t0J+Hqub4YOo/
      OT9/A1HfTI3eyMjyJc7PXeTs3D2EzDhn5q6iaqvxzr3F+dmrOBydVG1RsErJ5Xjj1hwXRwJg
      NlFvlvD5lnjl1jJJUYdvYp7/GY9id5iR4lH++gM/J3ZtQxtUiXN6+Ge8M/8RNZUHsEvgXXiL
      f5+8jKxv5Pb0q3y0No7DVMfpe/9M3/ocHlsblmKpayhJNN0/Rhx5H1VnQRw5jdj7GlgbEG/9
      PUIyi1rVWpLtNRYf5vWps5yZfh+bTse5qbMMRkPsrdixpWaLmx6u1XyWQi5L/927+EMRjJYQ
      517/BavROPufe56uCxcwmC0cPNDK6JKCr/sSwWSalsMvs9r9DjGNlvq9x3j+yaaHIhB1PxKH
      G06xMvYz4oWN9O726uOQjbC77kU6DQrLY/9KIi9wvPklpgd+QmobJz9BkvjdQ434ZpYZSW7E
      O3on43z3UA0XBlcwRNPIDjt2nUAgKaBTtnekU4FsPvN/x1UlzXAowm83H+LG2g0i0SiOynaM
      ip+c9gme0q3SG1nmlLNhW3bvI5cGRQHzTgrfcCB6h1DEFcS0gKJ3gaBSCj+oxbyH36lTuBpK
      kUnOoJGMNNt2bHmtPfB9juZdzHdfwl7Tgrq+zKBvmQqXG1nvoMWSJm5qoNoik0+uMRfT8b0f
      /BHtzgQrmWq+8/xBfKPD/Gau1Cp5Qcfx+iOMB4c+fi1HbyLHMxYzObScbDjKWGiIlGDjhy3P
      8uHy8JatCUAgGGUkJXO80QhsVAQWFNAIMn/44m6+Xy/y5nCYlmoL292H8+kFQto2TjqtDEaC
      gIBGUCmoChrBwZ8c+EteMIU5F5LpsOQZTSQwCEV0JKRX0FBHobkJTWAeYfIKSutJqDxM7rf+
      BmHpPYREcUtMP0FVGAsMsdf9JLlsjEbXc/QtnCGzRXHjTT8VQTZQ62nCVanB2bITfwAaM3rW
      okl0SoigqZUdYoCFqBm7s4FG4xzn3zpN44FjtLpSXLg5xP7Oo0WvfPpiFOhdOMdIYp39nhcZ
      XBmmvcqGVd+KgILXf4H+6Cr7qo9x2/cWk8kwz+84tGVruUyW03eXEM0GvEEjxAscbLPxWs8y
      B1pddHkXGVnP8uz+egTAbdle9FLSeagVbvFRtMAJp0r/mp/9VW7enevjaOMJrs6cZi4Z4djO
      CryzS6iymw67e1s270PnRNEnEZfiFPbXIMxaUawyRCYRve+CtgXVYCyevU+j5gnhoEMv4ax+
      hrdnL2KzdCBvMc/sMagIyzK9vkSjo3HbO+8XI8/YUoZWz9ZK9L4sihJnJhqjxe55CNa+fjwG
      C6BMmc257wgkCMIjp8P5qMYmynw9eORzgR7x4ZX5ivPI5xiUhXHLlJJN06GVQogzb1zBVV/F
      7Y96kMUEa2k9DvP2PBi/KULr3fzbxHvEsSKmR/lv322qLTvQq3Hemb3OLvuOoi4239wK/zUY
      wGYzsbKwylujEXa4TfTcm+fSTJwWjwV9sSrkVJWFpSBv9K5gspkwC1nODFmYSwAAB/xJREFU
      D4VoMqr89OY81ydCVFZZqNQXKxCWgqE3YbIHKndDdh4mBzfqAbpfgeAaONtKk2eQDULPzyGu
      gBiF3tdB4wSLY0thh80DYUqc6+/8koTRQGh6Enf1HtIZGx/2XyGQlPnmcx30d3WRNXpod+bp
      GQ/yVEc7w95h9FXN7HMX6B5bJJfX01qVR9P4TZZ7rvDkC4foudaFYm3k5PNPF7Es8MEML3VR
      VfEC+2wVnB2+zL7qBrpWJmiTZrkwd4+Xm48X1V5B1rPPlqB7OkQwmOJJJ9xciuH1JXCbVWbi
      NXTYi7MAVCXPxdEQ7Q0OCoU892ZWuTia4Tv73fzxMzK/HAhQay7iw17Jg+coyO+CfxISV2Fe
      ApcIaSPsOVS6JBslBzUHYbgLIhpoPgXeX4Dnr2ALFXYPfEdVy16Wei+zlobo6hy+kT76A3qO
      Hd5LNrJGNJVhqO82s7M+BGc7dmWdTEGh5+YNbtzspb2jg8D8HEuz4yyH00wOjRAOB0ik0wzc
      vUPiIea47ao7RT3L/HzoNBlBh0OnJZ6Ns7f2KJ4iiuL+ih1uC3qtlkQsSV4ScegFwuspMGjR
      ShLJbPFChGpBxR9JsxyKccef4mC7iypJA6jM+9dw1VZhKqYMn2QBvQIJM9S2whMnNl43t0Lz
      Huj+CSS33rnxgeirwWoHXQYq98P0JdhGU74HLgCd1cOJI0+Q+ngussWJNrHAjetdTE6MMx9K
      IYkChYKCVqtldXaM1biCjICjwoR3oJ9IJo/T5WZ66C7rKQguTLEUyaIRHq53ZyE8znIqhF7r
      pEmb5d35MZrtRUwN+H98ODDH2HoG0ainRk3z3nSaPW49ar5ALFugmDPXSCIdLgOBRB75vl1Q
      ZdSfod1TZJnyzApc//FGKkT2Uy1yk8uw5gNBB0XsEXwfES+MdEFe2XgS6TTgOrCl3R8e4AVS
      1TzRaAazSSIWz2LQCRQ0esjESOY12Cx6opEYgiij12pQRT16TY5QJIkkS4zfeofbvgiC6ORH
      f3CKdDKFKGowmfTEonEEUcZmsyI+JKWIfD5JIB3BZnAhqymC2TSV+kpkjUo4HcOmsxb1DpDN
      5ggk81Ra9JDLsZ5VcVm0JJMZ4gUNbou2qALKuVyOQKJApUWHTlRZTxSwGyWS6TwGg1zcE0kh
      C/FlUFQweUAWNnZhvRHiKyDbQG8uTUmkWoDYEkg20MkQD4LRBfLWnuIlc4Mq+RyZbA5R1iJL
      Uimk4suU2TZfCWnEsiu0TKn4TEnko5gK8ahFp8t8fXjkA2FQFsctUzo2vRupSoqR/n76B+6x
      Gk4+zDGVjPX4FOt5lWhyjtsr/cQ+FgBYDE+TLNHxr5DP0zsT5IPxNSbCWVSlwHSg2C5CleB6
      nC5fhEReBVVhKpBEVVUWViLcWYiTK/b01BxCcAoUBWHxI4SVWVCyCP5bCKGVIhv79eRyYXqX
      b7OYSmxZHG7TBaAU1njv/T70Sphz711jbWmamze7CSVTDA3203+nm5VwiuDiJDdv9RCOreMd
      HOTO7W6GvAN4JxfJJsPcvX2TyYXgVt20RSMSH+enfX/HWCrL5elzzEYG+HDVRyo1yT/1vMpq
      iQYoCBqcVh1+f5hIXuH6wCyvdgeKakNVFMZWUwRX1unyJ7k7usg/XF8ik05xcTxKNpkkUFQ1
      3gKC7wzSjX+BpB8hlkMz+B8Ia71o5sbQDL8JxWzJtAkrcR9ZJcLb09e2LP77OU3yAoxO+DBY
      zfjGJ5no/5CrfeNcOHsJSQnw7vVepsenGL17mes9g5x5/y6J+T7uzYbp/uB9JqZnWJyf4M1z
      V0qnTvwFMRka6axoAhWMssRiIoxdhmv+UfY4Sle2qRE1uHWA1cY3KnV0tldhK/JnIWhEDjbZ
      iKU3pCv37qzALWrIxhLcCyS5NRcnX9QFrkGtO4RqsICuDsVlRUBFCAdQKzuBNYRPxwdKRJ2j
      A7OaQNUobFUg9IELwOxq4tR3f5/fO7ab/qEp3NVulEIejdlOrasCYusMjE7jqnah5AuYrHas
      JgMWuwNZIzDl7UOwu5DZ+gCLhSTqEIWNPrOzGQ0v1e5jPOQlXggzHBniXmihZLanl+M0VZuR
      BQGdXPwAkVooMLCU4GCjFd9a6hMbkkFLq8tKm0llLlZcLdINTU4BUrNo0nYUWwEhLyLEZgAb
      6jY1O78IC2EvFtvTZFLT5LdYErmpKgSCiNFooabGiSDpsBsEspKd+rpaGjxOampqMDtc7Ki2
      kNdW0FBfS72nmrraauxVbtxVFexs20k8lqGpsZE6j3NLVfvFRBYNVJqaaTdp6Y/GONHwIp2u
      J9lpaWJ35U50JRpfTgW3TY9R0gACJp1Mjb14PxBBI0A6TU+wwMt7qjBKGoxamUa3FZOSIqw1
      c6TeXOSmhAKqbIGqNli6gmA+hLLraYhPolYfBXtFMY39WnQauLN0i6fqvo3HUG6SV6bMl6Ys
      jFXmseYzkeBHLRqsqmo5DlCmZDwgF0glsjxD75ifPR2duG2/0vbPMTg4yf797Z/8pZJNEIgV
      cFdaySUCTCzlaKoSGJkJ47SAvroZJR6hym5mPangrLCUfmZlynwBNo8EKwqXz76Bfd9J5hfX
      IBSmZ8hP59HDrIcjrPqGGPGtIhhd6Na6uThl5M/+9Huo4VkuX5vDnpxmx7d+QD4xz5z3GqfP
      99Kx08JivpZvH6pnciHO4SOHcRhkMhE/V6730rjvGfY0Oh/i9Ms87vwvBGDQHtB3YooAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab2' width='192'>
      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
      /wUsQ3UkKIewsQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Five Highest' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAbnElEQVR4nO3dWXAc173f8W/Pvg9mButg4wKC4i4ukkhRpCiR2q6tklW+9rWTu1RSSeW6
      XOVU5SWpPPnRVXlNHnJT5dR98LUtx9po7RI3kCAJgACIjcS+AzODwQww+z55AC8tyYBIUEMI
      ZP8/T4MB5pzTjf5Nn9Pdp1spFotFhFApzXfdACG+SxIAoWoSAKFqEgChahIAoWoSAKFqEgCh
      ahIAoWoSAKFqEgChahIAoWq6japoeXmZfD6/UdUJcV82LAD5fB63271R1QlxX6QLJFRNAiBU
      TQIgVE0CIFRt3QHIZ2N8dvYDQpEQH7//Dp+29rAw1c8f3/oDt2bDnPv4YyKxBS5f6SCVk8lm
      YnNb91Ggsd52JufD1E70o68/xHJ/Cz0xIwee3EN77zCZsT58kRinXv4eJp3yMNosRMmsbw+Q
      WeCLy31EF+eY9S+h1WhRikXyRdBpteTzBRQ0VLnNzAUiFIsQCoUIhUJks9mHtAhCPLj1BcBQ
      wT/+4h959qnDHHzqKMvDrWhrd7KvqYmrre3s3dOEp3oLx06eYnm8h0g6h9vtxu12o9frH9Ii
      CPHglI26K0QoFJITYWLTkaNAQtUkAELVJABC1SQAQtUkAELVJABC1SQAQtUkAELVJABC1SQA
      QtU2bE7w425+fp5YLFbycrds2SLXUT1EEoAS+cUvfsH7LV0oBkvJyswExhjq66apqalkZYqv
      kgCUkPuln2GsfaJk5fn+5b+VrCyxOhkDCFVbXwCKebovf87nLR2kkmE+OXuWT1t7iCxM8tGf
      PmR6MU771ask01G6u3pkSqTY9NbZBcrhrm5grL2NmXIts0ktL22v41b3ORq3NHG1a5D0aDv+
      UICdB5+XKZFi01tfABQjtXU1TAzZiOjKOf20kysfnMVeacZrs5FK+ClkEmRyefLFlY0/FAoB
      yJRIsSmtrwtUiPHR+x8yFUpizITo7LpJ2uBkW301X3x+gW1NWzDaqjhz5hSDbZdYSsmUSLG5
      rW8PoLHx/R//zd0f9+w5cPf1rgMnV17s/ncAvPHm69++dUI8ZHIUSKiaBEComgRAqJoEQKia
      BEComgRAqJoEQKiaBEComgRAqJoEQKiaBEComgRAqJoEQKiaBEComgRAqNr65gMUk3zw1juE
      shpOv3iU8+cug72GY1t1XGobpunZ15hp+5STrxynuzfAiy8el2mRYlNb3x5AMXPmlZOQz+Of
      HqH+wItYl2cYnPNz+swpxkYmSEbmOPtJB0dPHMOkU0ilUqRSKQqFwkNaBCEe3DqnRKYIJswc
      aLDjW0qSSiXIafVYdVqisRgmixmdycWxJxvpvDlEoQiFQoFCocAGPYtPiHVZ5x5AR2Csi3ml
      khMnTmGNDFN34BhPHjjC5PgcRw8288TeJ9m5/2mqjAli6RwWiwWLxYJWq31IiyDEg1vnXSF0
      HHzuzN0fj59+7e7r115vBKDh2WcB2HfwcAmaJ8TDJUeBhKpJAISqSQCEqkkAhKpJAISqSQCE
      qkkAhKpJAISqSQCEqq15JriQTRIIR4guhvFub8ZqKE1WIpEIP/rRj0pS1pcdPHiQX/3qVyUv
      Vzze1gzA/GA3N8cmCKbNbEmYOXm4sSQVZrNZznX0U/GD/16S8gByy37yHVdKVp5QjzUDoNFp
      mV3Q8NShauxeT0krVbR6DBWlCRSAotHAUsmKEyqydr+mmMdogsmpILlsZgObJMTGWTMALu9W
      6sod6PU6NBqZ1SUeT2sGYH54hER0nmhBYSGYvPNukZHeNtq6b5PJJui8epkrXYNk4mHarrYR
      TmQZGx4mV8gyMTZGWh6TKja5NccA1du2ovc20nmtg6pK28qbuSgpTTn4eunuDjEaVnjtRB19
      bZ9RNHm4dGOI2OAVAoEt6Dy7aZA5MGKTW3MPYLC7Cc8GOXD0CNVu68qbOgc7Gp3EtXYa6huo
      t6Z45w/vEUxmqPV6CS+GSEfn6BsPU1NdjkZRCIVChEIheUyq2JTW7gINdNLScoNgeJL23pmV
      N7MR3nv7ffSOSvKpOFqzE5NOwely0t3dg7fOi9HZwA9ePUp7y2US2YI8JlVsamt2gVw1XsyG
      Trq6p3nhzMGVNxUDz5x8gaKipayyAq1+gabmXbitGnz+EJ6qapJby3B63Lx4woFOzjOLTW7V
      AESDE7R2z/DmP/x7zEYjBv2dzrzOROOWLXf/zlpbf/d1bV0tACbPyjkDR5nrITVZiNJZNQD2
      8i0cPwhn3/0jerOdPc+cZFd9aU+GCbEZrBqA5PI81zqHOfLC92iqdaMoch5APJ5WDYDe7OK5
      Uy9gMq7vrilCPGpWHaZq9QZ0WsjlooyP+SkU5ISWeDyt+hUfD47xT//0W2w15QRms/zg73/K
      3saKjW6bEA/dqgGwVTTxn372H+jqbaembots/OKxtWYn3+qu4fhzrxJPS/dHPL7WPFVVLOaZ
      GR9latZPTu7sLB5Ta88I67tGx1yOCk2Y1riWk0/WbmS7hNgQa+4B7OUV5CJB/EsZKivtG9km
      ITbMqnuAZf8US1Ty5hvfI4cOk0HOB4jH0+pngiN+zrVcpqLSAWjYefAYO2rl2h7x+Fk1ADqD
      jUPHT7KzsXzlZ71hQxslxEZZNQDljbsoX/XPiyzMThIvmqjzVhCcnUJjr8RtUZiZCVBZV09i
      aRFXhYelxTBOtwedzCcWm9iqAShkk/R2tjMbjGJylHPkqcM4TDrIRRke9RELTeOvq2PGHyeT
      6GV3rY75cJ7bi1kWey5y4Ok9hFJlPOuWK0jF5rbqUaDQ7BD+tJ2jx47R6Exzo+/OjDCdg6PP
      PonRasWYi1K5ZS/mWJCZ5Rh79+7GNztPOjLFhbYx9uxpRqeRKZFic1t1D+D2NmEdPseHH/Zj
      Lavi1Ok7E18KaS58/CHVe49TWZyldWKatMVJndXA5NQUnopqIqFGXnvlMC2XrvFXLz+Ly7Uy
      eA6Hwxu2UOLR895773Hp0qWSl/vzn/+cbdu2rfn7VQOgMVg5/tLrHP/6L7IpLO5qwvNTVO3b
      w+7YbbRPnKbWCf0DY+zd08RSjZGK2q08U5gilytgMMitIcS9nT9/nl9fmcDo3VmyMqM3zvLG
      G2+sPwAAhWyC+YUllgILNO7eh82gAaOTo3cegwrg2Xfo7uuDR1ZeO+9UVlNfulsfCnUw1u3G
      uvMvvnYfWGL4+j3/Zs0AzN3qpndiglDeQTDr4PmntpasYUJsFmvfGrHGy1LUyBP1Lurkcmjx
      mFozAOlkApQUI6PzpFKpjWyTEBtm1S5QKrbIzY4uFHsVW6vKcFlNG90uITbEqgHQ6k1UNTRT
      bndhJkkkksDrsW1024R46NY8EzzQ005IY8NusnD4ZP1qfybEI2/VMYDRVs6Lp0+iSy6xFI0Q
      TcpZXPF4WnMQnFiKsXv/DoxmK/GIDILF42nN8wDe3QcoTM5ic2Vp3F6zkW0qqXg6SzxVuj2Y
      xajDZpLLwx8XawYgMNTD22c7efrlZm7edvDcgUdzTnAkkWYuFC9ZeVVOiwTgMbJmF8hos6LX
      phgZ9WN3mDeyTUJsmNX3AMU80XSBxu116Ct3sLvRvcHNEmJjrLoHWJ4foWd8mcPPnqBaE+DG
      7fmNbpcQG2LVACTjCTyVNdhtNmoavaTC0Y1ulxAbYtUA2CuqSPiGaWlp4UbPLHVb/3wxXHLJ
      x4VrXRTTIT549z0+be1hyT/GB++dZWIhyrWWFuKpZW7cuElKHpMqNrlVxwDWMi+nX/Ou+oGJ
      kUEGhhY4Uqswl1Q43VjDYM9Ftu/YwfXuIdKjnfjCQfY/cxqTTibEi81t3Y+xa9p1AKsBTJXN
      vP78ITo+/RML6QIWi5VMKkUhl0JRFJLpPIDMCRab2vqf46goGPR6kqEZrl5vJ22uYOfWOs5/
      cYmm5m1YnV5ePHOK8a4rLKVy8phUsamt+56HeouTn/7wDQDefLP57vs79tyZKrnz7wD4/hvf
      L0HzhHi45Em+QtUkAELV5LbPj6BcvkDfVLBk5WkUhf1b1DnvWwLwiMqX8MmdRRUfrZYukFA1
      CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFC1dQcgn0nSPzhCsZil68o5esf8
      pCIBzn9+joVYmoGeHjKFDIMDt2VKpNj01n0tUN/1c5wbSVKjCzKv9RK/fo7lCgOe8gYutd8m
      OdKKb2Ga8m1Py5RIsemtew+w+9Bx3GZIp5LYbE70mTSRXB6Xy0UsEiWbCDIXTGK3WQCZEik2
      twceA5RV1TN36xpxWxXbKjxcbW2jvrEOg72Wv3rlODdbW4hm8jIlUmxq6+4C6cwOfvTG9zCb
      TLz+agWK3oJJDzVNCSw2O7nmn2CymHnt5TJ0Ohlji81t3QFQNBos5pV7hVrtzrvvO50rr/WW
      la6P0Sz3ExWbn3xFC1WTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhV
      kwAIVZMACFWTAAhVe+Dboxfjc/zzH87hbd7PHk+a89dusfvEq8zcuMjxM8e40TnFyeePybRI
      sak98B4gEvSRKoDVZGBifJwTJ48yMDBKyD/KO2dbOHxsZU5wLpcjl8tRLMoEebH5PHAAzJXN
      /N2/+TGB7hbCBQ2ZTAatXodWZ2HfjkoGhqYpFCEejxOPx8nn86VstxAl8cABKKQiXDn/Kebt
      h3h6/z76eoc4vH8HDdt3ceCp4xjic8TSOZxOJ06nE51OHkYjNp8H3ipNLi8vf+lp8m/+9U4A
      mmteAuCZ48e/ZdOEePjkKJBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNTk7Jb5RKpMjlird
      nb2Nei12s6Fk5X1bEgDxjWKpLJMLkZKV57KZNlUApAskVE0CIFStJAHIxMNcv3qdcCLD6NAQ
      uUKWidEx0vKMMLHJlWAMUKSv7SKYPFy6MUxs8AqBhQn0nt00aL996UI8TCXYAxRIpTLUer2E
      F0Oko3MMjIepqSpHo8hsMLG5lSAAGlzuMrq6evDWezE6G3jj1WO0X75MPFv49sUL8RCVoAuk
      0HzoBA5/CE9VNcmtLpxuF6dP2NGvEa9CKkas94tvX/Ud+XhoUxzQTY51kA3Nlqy8fDxcsrIe
      BempXoqZVMnKyy371vzdYjQJxRJtNlq9mdq6WgBMbjcA9jIXsPKYVIBEIgFAMpnkP/7bvwaS
      paj6DjNNTa/dratYLKLc6X5lkhkMxcy9iygW4T66bNlUgVAo+xf1nDp1ivK+Pkq6XA2vAyvr
      8Mt1FQpFDMX0vT9fLAIK3GOxNMU//59WPvbnulLp7P3XdR/rr5DOEwrl79YDoCgKhw8fJp1O
      U9r19wI2m+0v1h/AfChGEVCKGzRbPRQK4b4TjvuVTqcxGAxfafi9FAoFlpeXcblc66orlUph
      MpnW9ZlIJILZbF73I2AfpK4HWX/ZbBaNRoNWu76jEQ9S14MsUyKRQFEUzOt8oGIp198m6Dis
      zWg0blhd612hj0JdG/ls5kd1/Wl/+ctf/rJkpX0DvV6PRrP6oCCfSdB/axCnqxyddvVv++Ty
      Ekk0GHX3/jb7cl2D3a0MDI2znFYw5MKE0wbsFj0UcgSDS8RDM8Q1DqzG9R+z1el0aLUaJge7
      6R+Zw+mpwKR/sGO/uWSUsZkAulyGgtmC/s5eLxqYJJDUU+60oimm6W5vZ2hiGr3NTcI/TcZg
      w7xqnQUmx0YxWBzo7+N5zcllPzOLGVwO81fW38TwIEZHGdMjA2QKeWan5vAvJ6ksszAyPIJR
      ryEYL6BNBLg9F6XS7WCkpwedReHG9RtM+0K4KytRMlE622+Q0Tsos5lQAK1Wi06n+8oePh1Z
      YHQ+QnmZ/V/XDLd6b1NWWY72az2BwPQYKa0Fi+He3+OrbX+J8NzGBWCtjR+KBEc7+F//+/d4
      9z5FpSXHlXPnCRfMRKZukbGY6L9xi44v3mYwbkYXHqN/MkSNtwqd5i/DoijKV+p657e/48jz
      z3Lx408o87jIaDT0trYyOHyTt/90hXxknK6xMJmCFm+lC4pZOi59zlgwg1MX58LFVnSOCqYG
      2unrHyRvLsdjN91dpvBwCx/fLnBom435pTz6xCwXrnZjdZcz3ttFf38/RXsVidkB2rtvsZhU
      YHmCaz1jVLjMdNzo5PbtERweN76pcc6+9TtSrjpCw52MLqQp+m/SF/Wwq94F6SBvfdjB80f3
      8MHZz3A5LeicDm5fvcRYKEtxeYrrXYMsh2cYGJ6g8+plZv1BCuZyTJkAFy5dQ7FXwNIEF6/3
      UVZZxXT/dTpuzWHDR+tQin1NNV9Zfx//8fdUNO/i4nu/Ia/X0zPso7P1Bnv31vDeB6147TkC
      ioepy2/x9uVxjjx9kA9//X9wbXPSPVJgf3mUT3uXsAa76Q5qMSpFamoq0Sgr/6uvd28jkzf5
      U/sc1tQcfYPDZPQ2AhOTKIUoS8kCIyOjpBanudE/SjqdwWCxcKvjCr6kHntxifMXr6Ivq8Fp
      NXxl6LPa9hcYufbdd4GKxQJdHTd56tkn6ezoxVTuY8l2AHdmmZvXLrHV7eDitUGON1ah9aT4
      7fvXqHHpcdVu4UBD2T3LL6QjdHX3Es0UWZjoJ1GZpbNtiv/8sxeZDpsot/nQV2+l78p5nnhi
      G7bEPBP+CGMTH5LZXUf/0DwRnZvY7XaOvXKGt9/5iP/685/cLX9qZIT6HT+gbpubOmL8z//x
      Lj/+25f447vvoonGeeWFPbz90SVcyRmeO7mPz252Ex3ooKq2gmvFFB23A7yyLceVTi3LoWWq
      XB621urpHQ4zMDLAS4eq4Us9QY3OgKeiGkN+kf6eAbYZtUyFEoxe+4CmOhP2/T/A3/077Mf+
      FsdQP7t21vDhJ+ep1/p58qXX+ODtd1EWR7DXeznXomDLLzN88yqG519ZfQVmI7RevMhMKMEW
      QDFWsb9ymE/PXaNy12F8oTm2N2T5zWiG/VU6bk0F737UYLKwpaGKt7oGqf/hM7T/v/eZNds5
      ch8D5p62K2w/foZLl64QGZsgm3KTd+9j4GYXzfYEmgM/JTX2MdfGB5gMFNC1DRI7UE13/wRJ
      ax0NJ/fdc/APm+BaoFwyyO3ZNI1bGgiN9lIwO1maG2M2EMZZZmNyaIw0oDdoCIVTlLndNO/c
      hddtva/yFZ2JuoYGnEYN2cLKeF9jNGHU6cjElohnCjjsdnR6LcUixBemGPFFMRl0WByVlHvM
      +GZ9FAtZpiensX1tcN20/xCTN1tpa71AW/88bruGwdEJ7O5yDCYzTrsVRaPBYigyNe2nUNTh
      dnuo276bbbUurDYbFrPp7hERg77IxEAfQ74oRoOGwteOUWRiYfr6esDeiNsEy4EpxvxRzAaF
      fF6L0aRHoyiYjCYUoxGHzYoOKHNYGB8exeLy4PG4qGnYwdYKI7dGZrFYjeTWunGZ3sHJ06ep
      91juvnXw8B7OXexm/+56khmIjXaiVG7DW+Ohr6uP/J0mh/3TtHXf4onmHSzMTFG1dTtzU2Nk
      8/c+7qLVmnDYbei0gKJQ5nQwNzVBIp0DwGwygQJmqx13eQVP7N9PdWUVNQ4Tc76Fe28Yd2zY
      UaC1FHJJAuE01RVOQn4/Freb0NwsOkc5Dn0O/1IMg85CmVUhlChiIkmyYMJbXc4qPaC/EJid
      IJrKY7K5cJkhqzGSiKaornIwP+tDbzJgtrlIxSOUucvRFtJMz8yj6I14ymwsBII4PWW895t/
      Zvdzr9O8vR6n5c+X8xaLRcKBWZZTUOOtgXSE+WCEypoakpEIZQ4zi5EU1z/6F+ZiGpw7nuX7
      R2oJxfJ4q1yEoikchiKpgo58Po+BNPGcllwyRlFnxGU1kNfbKbMaoJBldnqWdL6Ip7oWTSqC
      xmwi6F9AazBh1msx2F0U4iF0Ng/p2BI2u5XwcgqXTce8bxFXlRd9PoY/nKC6upJwYJ4cWmw2
      G0XFgNtp+cr6Cy0EsLs9RBYDGMxW0jkNbpuG2fkINfUVJJaTaEmRMzhwGIoEwjGUbBq724Fv
      1g86I95aL9p8ktk5PxZXFeVl1jW/nHOpGKFEAV0+icXhxD89yG/fb+e//Pwn+HyLaIwW7PoC
      Gms5pJbQGC0sBwPobB5cFoW5uQDOSi9Oq/GeO4BMIvLdB+CRUCySTCYxmMxo7yd1q3w+nUqQ
      TOew2GwY7mMgL1bks2kSmQI2i2ldh8Pv18Z2gaJzXOgY2tAq70qFabneTe4brs6YHerDH13l
      pJmiYLZYHmzjv/N5o9lKWZlz1Y3/yoULTIwO4Fte30mg/o5WJieGuD21+GDtegRo9UbsVvND
      2fhho88DJBfpHvRRkZ9mYDrCrr07mJyJ4SkEsNRuxx9cgvgiaa2T5hod7QM+Trz8fco1C7z/
      /nl2HDxEcHKEvMnD/m0OWq/3UbPnOCf2N9677kyMqy3nmR0dYPfhQwSDGWq0C8T0Vmb9cUw6
      HVWWLBazg/bP2ik4vLz64jEM9/qKKBYZ6b5C14iPvceeYbDlGjpDgYbDp8hO32TCF+WJI8cY
      7ThPuqDFbDdTMNZyoDpPW98EO4+eof9mN2brQSwaK31XekjpXOxrNNN6Y5AdR05xuNn7ld15
      ammWDz+7zvTkGMdfOEpcA9OdnxPRl3P66G5aL19HW1ZHc7WGmz2DePc9T3GmjfFlHS+8eIy+
      q1dIaB3s3+7iens/3j3Hee5+1uFjaMMHwflMkqudw7xwbCcX2oaZ67vK5e4Ozn/yEYvTw7T0
      TLIUnGNqYhxN+U7qXQZyqSjBuJ6K4ixtg/OE/NMEgkuMjw4zODZ933UbndUcqDcyNJdkfqid
      S70zbGvexXDLO2RsNcR8k/j9PpYSaQa6u4jn7l1mEQj45okvTtA/Nsvo9DKHtrvpaO+gYyjM
      mePb+eCji8wvJvHoQ2hqdjFy8wYL/gCJpTl6hlauHQrNT3Hr5lXab8+x5BvHF1xibGSIkQnf
      SiVfMnerHaV2Lw0eG+nlAFP+JQJzEwz03aKn7Rw9U2GCc2NMTAdIxxa50TdCKDDH7YE+Rnvb
      uNgzyXJwDp8vyPjoMLfHZ9bxH3y8bHgAtHojXpeWs59cY2vTTvY1WrE1PEUiluTg0WfwmIvk
      0WG3GtF/6SSJVq/HVbMFh65AQWPCqgdHuZtMLMYnf/i/XDr/Eee6vukfqWAwGDAY9GiMDraW
      pYmb68jMdKNvOMRM/w0SWYiH55n0h9GQ5+YXb9Ha1cWvf3/uG5dpcniQZFFDNpNBbzRiNOjR
      W8vwGKKc/egau/ftQqc3oNdp0On1aJU8UxMjJHIK2Uxm5ZCgolBWVY/DADnFgllfxF3mJJlO
      fX37x13TwFRXC6O+CCgKCnkUnQ2bDhzeLZiKGdCbCc+NE8sUyKXTgA6n3YDGXkO5uUgePRaj
      FkeFm0y8lNdlPVpUOQjOJMP86a0/0vTCD9nfsL5rhsTjRZUBEOJffecnwoT4LkkAhKr9f5t1
      sZ30kKsIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Barchart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Barchart2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Haiti Bar' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAUoklEQVR4nO3d6XMUd37H8Xf33JpDF0LoQreQENgCARIWxjhrr71HlspVlUepPNo8zYPk
      WR64UluVP2Cf5clWdrfKcdVWNllfiY0PvOY+BAIhhG6hY3SN5tac3XkgjI2ZYdXySDLq76uK
      Kpjp+c13ZvrTv6OHaUXXdR0hTErd6QKE2EkSAGFqEgBhahIAYWoSAJPQsmnmHk6xGIj8iS11
      opEIWp6lET2TJBxPPmo0TTAUBXSCwWAhy9021p0uQGyPwYufEHTXoI9M4Th5lLE7d6lr6yQW
      ClHs1IimLSzOz1BeXcO537/HyR+cIZNOUFnXgiUapKKuFoDQ9H3GqKa7qQLQ6b9ykfYD+7m/
      pHB43zLjyxm62mu5c+s2JbWtKJEF9OJqmqvLd/YNyEMCYBKT/gh/9teHcaTXGLpxEa2kls8+
      eB/d5qG9MsXkih1fcy1jl27iLSll/OZF2l99gzu376Kl1nijrhbQGV8I0vDCwfVGVTvHXmzh
      f84P8pc/eYV3fv0rdFVFcZ4lm47w+edf4CbNm3/VsaOv/VkkACbRUlfKhS8vo0YClO4twf9w
      EptvD3p4kQeTQeyeJrwlpYSs02SyadJWK+7SGnyp8+i1rwGgZxNEkzZ8Ltvjdr3eYjzFJTjs
      Nsr37sNbugdHbIb+mQgWRcNmdeKwf393M0VOhJmDrmUIrgZRHW68LhuhYAiXrwQtESWZ0XHY
      HVgcNrKpFHomg6YouOzw4fufc+bsT/FaFHRdI5FK43I4vm5YyxJPpnG5HCTjUWJJnRKvk1A4
      ht1hQ0HFVVSEquzca38WCYAwtS1ZBdI0jVQqtRVNC1FQWxIAXddJJBJb0bQQBSXnAYSpSQDE
      t6zxu7d/RzgY4Lf/8TZrmTTxeJy5kVtMPHzIh59cYvj2DcLpna6zML6/61Nih+iEFx/y6Wef
      Mx+I8+D6eQYmF6i0JcmUtTJwd5yIO0ZRazc+259u7ftOegDxFKtnD2fOnKbYCeOjY+yprSOV
      AU/ZHqqr9+Gy7Z7dRnoA8S12ek6ewOXy0PfySYqLNB4spql/8QTuyjoc8RBu90lK7TtdZ2Fs
      yXmAbDZLLBbD5/MVumkhCmrLeoBsNksmk9mq5oUoiC0LQCqVYm1tbauaF6IgDAXgyrl3WVZ8
      HDtYzxdfXKGi5QWSsyMc7eviztAyr/QdwaKsf+nD5XLh9Xq3pGghCsXAdF4jEI1iy2TwTwxS
      /+LLBKbGWV6e4r8/uED3sS6UR2eAk8nk1lUsRAEZCIDO4e5XaCmHCX+UaDSMYrdjtbo52dVE
      /93R9a10HU3TtqhcIQrLQABU1OQKUwkvr//kZ3jW5uk6dpyu7h7aDh2jyq2RRcHlcuFyubau
      YiEKSJZBhantnlN6QmyCnAkWphMNrBBZWQYkAMKE7n5+jgvv/AaQIZAwOQmAMDUJgDA1CYAw
      NQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJ
      gDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1Qz+MpWspfv/bX3H01Te59MeL7Gk8RGJ2mO6+
      LoZGw5w59fX1AYR4Hhj6efSR/qvoRT4Wpx7QfPQVwvNThEOzvPfxNbqPr18fIBaLEY/Ht65i
      IQrIQADSLAUirMxNE4ylCIUCWBxObLZizvS0cf3WECgKVqsVq1V+cVE8HwzsqXb6Xv8RbQfb
      KaqoY7T/CuU9vaRX56ltbcY2NkFWB4fDQTabJZ3eJZcSF7ua4UN1RU0jAC/29K3fsKcVgMbm
      5sJVJcQ2kVUgYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBh
      ahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWp5fhYlw2fvfsRibA5H
      6SH+/I1eLNtblxDbIk8AsqzFV3CXN1HsciC/9il2qzxDIJ1sRkdPraE4nOjbW5MQ2yZPAOx0
      HunE5XBgs8ngR+xeeQKQZGRkgQX/NIHF5ce3Lk0Pc+HaXdJamluXv2RmOcL4yAhpLc3o6ARZ
      XfoK8XzJMwdwcvjYC8SWSwmolY9SohFNqyT997h12U/IUsXklSukAg+ZeDhCbWuvLCmJ507e
      fTYTmWchYafY6Xy8aWNjHUWOIhYWlvAVl5JNJkmnIgTCKewOO5qmsbq6SjAY3Kbyhfhu8gQg
      wf2RMZZnAow/GCEDQIZrX5xnLpSgufNFxm6ex1e9n+Liat744WkGr18hq6iUlpZSUlKyjS9B
      iM1TdP3bA3ed0GqQ0NIUVwfG6Dx+mvb6CkNLodlsllgshs/nK2ixQhTC5f96hwvv/AbIMweI
      B2YZmlzl9Otv4nPatrU4IbZTziFQSUUVpS6d65cuMDA0ibbdVQmxTXL2AIv+BRpe6OV4cZGc
      BRa7Wo4AKNS3HQQglUxidTi+0/LmfGjN0PY+pw23Qy6yJ7ZHjj1N596lj+mfChGem6H51A/5
      wYnOTX8Z7uS/fWpo+38928nfnWzY5LMJYUzOg3vzC8dp3FeC21vJ0a42OcEldq2cQyCHu5SX
      zrxOR+cSXrtN5gFi18o72E7HQywFQ9i8pXicOzcmf7i8xuj8xq88b1EVTneWbWFFYjfJs2en
      OPfhx+zZX83g8Bw/++npHfsPMYmURjCW2fD2qnRXwoA8w3sL+yqLmZ1ZoLxqrwyBxK6VowfQ
      uHd9gPa+1ziUyWC1Wp//APz7GYgubHz7nn+Avn/csnLE90fOIdDc+CDDC3PYgZLKJnqPdTzf
      /yc44ofI/Ma3T4S3rhbxvZJzFajlhRPsbWnCDiiKKsugYtfKfSb4QCvpVJKMruBwWJ7/IdB3
      5R+Au/9p7DGv/AvYiramHlEwOc8Ej/R/yb2ZIBZFw13RzJneQybvBfRHf8Ruk3MOkIzFUWwO
      nEqKeCwuH30BhJNhMvrGl3MdFgdum3sLKxKQZwh0+NQPaY6FSetWfB63DIEK4Ocf/5zBlcEN
      b3+2+Sy/OPWLLaxIQL4TYYqCy+3D9bjrlwjsNF3X0Q32xQoKiiKf3bPkOROc5tM//C8L0Tmc
      ZYc4+6O+53sZdBfwJ2f4g9/YRPxvqv+eMnvFFlW0O+T9ko/TmaHE247P6ZHjv9i18gRAxWG3
      E16Yx1pTLJPgXWL2n/6Z6PnzG97e3dtD7S9/uYUV7bycy6AL06MMTgY43HUYT4l8F2i30NbW
      0CKRjW8f/9a3cDMZmJ8z9qQVFeB0GXvMNsrZA9idTpqamvF4nIRWVtEaq01+HkAAEIvBB+8b
      e8yPfwJ1+7emngLIGYBEJMDoyH38Sz727j8oPYAomOHLfmaGVze8vafEQc/Zpi2rJ+d5gKrm
      TmoHHjAyO4fNVysBEAXjnwhx/9LGv5hYVuV+IgC6rrP0MGToOb1lLlweR8778kyCFUqqmmhR
      00TSaTTkWkri+0HXdEb7jc1DmruqjAbAyr5yC2m1g/qyajkHIHatPAFIMHT/AWuZCoJLEZpa
      qrCR5tK5c8wHorR3dXLnxgAVzYdJzD7gaF8Xgw9WOdN3BIuceRTPkTwjGyct9XUEQnPsP9jx
      KCU2Tr72Jh31e/CPD9F45DSrM5OsBh7y7v9epvtYF4quE4/HWVsz9mNYQuyUHAHQmRq8wq2x
      ABVlXlaD4ce3T9y7SXbPAQ43VhKJhLDY7dhsXk4da+HGwIP1BlUVVZUZg3g+5DwRNjcT5fWz
      P8WjJDj/0XXStGLXUiyvhAnEg5Qe76ZkeYDWEz2kAnXUH2jDPjJKFgWn00k2myWT2fhXf4XY
      KblPhNlSfPL+e1jQwFax3k2oDo6//OrjbWr6Tq//Ze/6NQCa29q2ulYhCi7neYCjr77JEf3r
      f8u0VuxWOQOgKAqymCPMQGarwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQA
      wtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLU
      JADC1CQAwtTyXic4l/DiJG//4SJ/+xe9vPfhZcobD5J4eJ/uU0cYnojx6im5PoB4vhjqAXR7
      CcVOjZWZMVqPnyHmnyEW9fPBpzc5dnz9+gDRaJRYLLZV9QpRUIYCUFxSggIUub2sLi9icRVh
      c5Ty2ksdXL1xFxQFh8OB3W7fonKFKCxDQyCAnr4+KhrqqA3fpKyjh3SokerGBmzWKTQdbDYb
      qqqSSqW2oFwhCstwABoaGwHoPHpi/Yay9X/vb2goWFFCbBdZBRKmJgEQpiYBEKYmARCmJgEQ
      piYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKYm
      ARCmJgEQpiYBEKYmARCmJgEQpiYBEKZm+IexABKBSX7/4SXKmzpJzgxz9FQX90cjnJEfxxXP
      mU31ACsPR2jufoXI/DTh8Bzvf3yd7uNdsvOL586mAuAqchMKrmBxuLDZi3m15wDX+ofQdb3Q
      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
      Eb0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Haiti Pie' width='192'>
      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
      kGgMgET7Px79tuR2FDjNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Five Highest Countries 0-27' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Five Highest Countries 1-59' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
