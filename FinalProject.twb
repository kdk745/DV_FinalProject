<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.0828.1711                                -->
<workbook source-platform='win' version='9.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.1'>
      <aliases enabled='yes' />
      <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range granularity='0.01' max='0.48999999999999999' min='0.0' />
      </column>
      <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
        <calculation class='tableau' formula='0.48999999999999999' />
        <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
      </column>
    </datasource>
    <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' inline='true' name='oracle.42342.593655092591' version='9.1'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_ZNK74' server='sayonara.microlab.cs.utexas.edu' service='orcl' username='C##cs329e_znk74'>
        <relation name='CHILD_DEATHS' table='[C##CS329E_ZNK74].[CHILD_DEATHS]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GBDCHILDCAUSES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GBDCHILDCAUSES]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>GBDCHILDCAUSES</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='KPI_percentage_month_over_4 _years' datatype='real' name='[Calculation_1825928200131940352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS])' />
      </column>
      <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
      <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
      <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths 0 To 27 Days (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[DEATHS_0_TO_27_DAYS]' peg='0' size='10' />
      </column>
      <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
      <column datatype='string' name='[Gbdchildcauses (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[GBDCHILDCAUSES]' default='&quot;Tetanus&quot;'>
          <bin value='&quot;Acute lower respiratory infections&quot;'>
            <value>&quot;Acute lower respiratory infections&quot;</value>
            <value>&quot;Birth asphyxia and birth trauma&quot;</value>
            <value>&quot;Congenital anomalies&quot;</value>
            <value>&quot;Other communicable, perinatal and nutritional conditions&quot;</value>
            <value>&quot;Prematurity&quot;</value>
            <value>&quot;Sepsis and other infectious conditions of the newborn&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;Tetanus&quot;' value='Other' />
        </aliases>
      </column>
      <column caption='KPI_percentage_month_over_4 _years (LMH)' datatype='string' name='[KPI_percentage_month_over_4 _years (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
      <group name='[Five Highest Causes 0 to 4 Years]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Acute lower respiratory infections&quot;' />
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Congenital anomalies&quot;' />
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Injuries&quot;' />
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Other communicable, perinatal and nutritional conditions&quot;' />
          <groupfilter function='member' level='[GBDCHILDCAUSES]' member='&quot;Prematurity&quot;' />
        </groupfilter>
      </group>
      <group caption='Five Highest Countries' name='[Five Highest Countries 0-27]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[COUNTRY]' member='&quot;Dominican Republic&quot;' />
          <groupfilter function='member' level='[COUNTRY]' member='&quot;Guatemala&quot;' />
          <groupfilter function='member' level='[COUNTRY]' member='&quot;Haiti&quot;' />
          <groupfilter function='member' level='[COUNTRY]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[COUNTRY]' member='&quot;USA&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.339655' group-percentage='0.127586' measure-ordering='alphabetic' measure-percentage='0.27931' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GBDCHILDCAUSES:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Acute lower respiratory infections&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tetanus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Other noncommunicable diseases&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meningitis/encephalitis&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Injuries&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Birth asphyxia and birth trauma&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pertussis&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Other communicable, perinatal and nutritional conditions&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Prematurity&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sepsis and other infectious conditions of the newborn&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Congenital anomalies&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Diarrhoeal diseases&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GBDCHILDCAUSES:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Acute lower respiratory infections&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tetanus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Other noncommunicable diseases&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meningitis/encephalitis&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Injuries&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Birth asphyxia and birth trauma&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pertussis&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Other communicable, perinatal and nutritional conditions&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Prematurity&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sepsis and other infectious conditions of the newborn&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Congenital anomalies&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Diarrhoeal diseases&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
          <range granularity='0.01' max='0.48999999999999999' min='0.0' />
        </column>
        <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
          <calculation class='tableau' formula='0.48999999999999999' />
          <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74) (2)' inline='true' name='oracle.42342.593655092591 (copy)' version='9.1'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_ZNK74' server='sayonara.microlab.cs.utexas.edu' service='orcl' username='C##cs329e_znk74'>
        <relation name='CHILD_DEATHS' table='[C##CS329E_ZNK74].[CHILD_DEATHS]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GBDCHILDCAUSES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GBDCHILDCAUSES]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>GBDCHILDCAUSES</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
      <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
      <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
      <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='ordinal' />
      <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
      <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\znk\Documents\My Tableau Repository\Datasources\CHILD_DEATHS.tde' schema='Extract' tablename='Extract' update-time='12/05/2015 06:54:23 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4830' timestamp-start='2015-12-05 18:54:23.107' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>COUNTRY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY</remote-alias>
              <ordinal>0</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Antigua and Barbuda&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
              <ordinal>1</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>698</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>940249.0</statistic>
                <statistic aggregation='Avg' datatype='real'>194.66853002070394</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>10183.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>786.75080358702257</statistic>
                <statistic aggregation='StdevP' datatype='real'>786.66935518848277</statistic>
                <statistic aggregation='Var' datatype='real'>618976.82694482571</statistic>
                <statistic aggregation='VarP' datatype='real'>618848.67439266318</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3172075988.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
              <ordinal>2</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1093</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2071849.0</statistic>
                <statistic aggregation='Avg' datatype='real'>428.95424430641822</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26193.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1303.9774761917497</statistic>
                <statistic aggregation='StdevP' datatype='real'>1303.8424818877293</statistic>
                <statistic aggregation='Var' datatype='real'>1700357.2584154052</statistic>
                <statistic aggregation='VarP' datatype='real'>1700005.2175751536</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9099753623.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
              <ordinal>3</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>795</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1131617.0</statistic>
                <statistic aggregation='Avg' datatype='real'>234.28923395445133</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26123.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>852.53249218182521</statistic>
                <statistic aggregation='StdevP' datatype='real'>852.44423373216773</statistic>
                <statistic aggregation='Var' datatype='real'>726811.6502257539</statistic>
                <statistic aggregation='VarP' datatype='real'>726661.17162322265</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3774899139.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GBDCHILDCAUSES</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GBDCHILDCAUSES]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GBDCHILDCAUSES</remote-alias>
              <ordinal>4</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Acute lower respiratory infections&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tetanus&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4830.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4830.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YEAR</remote-name>
              <remote-type>4</remote-type>
              <local-name>[YEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YEAR</remote-alias>
              <ordinal>6</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9691395.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2006.5</statistic>
                <statistic aggregation='Min' datatype='real'>2000.0</statistic>
                <statistic aggregation='Max' datatype='real'>2013.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.0315462400844568</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.0311288741492746</statistic>
                <statistic aggregation='Var' datatype='real'>16.253365085939119</statistic>
                <statistic aggregation='VarP' datatype='real'>16.25</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='Median' datatype='real'>2007.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19445862555.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:YEAR:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2000.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2004.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2008.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2001.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2002.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2003.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GBDCHILDCAUSES:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Acute lower respiratory infections&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tetanus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Other noncommunicable diseases&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meningitis/encephalitis&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Injuries&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Birth asphyxia and birth trauma&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pertussis&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Other communicable, perinatal and nutritional conditions&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Prematurity&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sepsis and other infectious conditions of the newborn&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Congenital anomalies&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Diarrhoeal diseases&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74) (3)' inline='true' name='oracle.42342.593655092591 (copy 2)' version='9.1'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_ZNK74' server='sayonara.microlab.cs.utexas.edu' service='orcl' username='C##cs329e_znk74'>
        <relation name='CHILD_DEATHS' table='[C##CS329E_ZNK74].[CHILD_DEATHS]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GBDCHILDCAUSES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GBDCHILDCAUSES]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>GBDCHILDCAUSES</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
            <parent-name>[CHILD_DEATHS]</parent-name>
            <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
      <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
      <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
      <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='ordinal' />
      <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
      <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\znk\Documents\My Tableau Repository\Datasources\CHILD_DEATHS.tde' schema='Extract' tablename='Extract' update-time='12/05/2015 06:54:23 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4830' timestamp-start='2015-12-05 18:54:23.107' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>COUNTRY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY</remote-alias>
              <ordinal>0</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Antigua and Barbuda&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_0_TO_27_DAYS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_0_TO_27_DAYS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_0_TO_27_DAYS</remote-alias>
              <ordinal>1</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>698</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>940249.0</statistic>
                <statistic aggregation='Avg' datatype='real'>194.66853002070394</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>10183.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>786.75080358702257</statistic>
                <statistic aggregation='StdevP' datatype='real'>786.66935518848277</statistic>
                <statistic aggregation='Var' datatype='real'>618976.82694482571</statistic>
                <statistic aggregation='VarP' datatype='real'>618848.67439266318</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3172075988.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_0_TO_4_YEARS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_0_TO_4_YEARS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_0_TO_4_YEARS</remote-alias>
              <ordinal>2</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1093</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2071849.0</statistic>
                <statistic aggregation='Avg' datatype='real'>428.95424430641822</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26193.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1303.9774761917497</statistic>
                <statistic aggregation='StdevP' datatype='real'>1303.8424818877293</statistic>
                <statistic aggregation='Var' datatype='real'>1700357.2584154052</statistic>
                <statistic aggregation='VarP' datatype='real'>1700005.2175751536</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9099753623.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_1_TO_59_MONTHS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[DEATHS_1_TO_59_MONTHS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_1_TO_59_MONTHS</remote-alias>
              <ordinal>3</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>795</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1131617.0</statistic>
                <statistic aggregation='Avg' datatype='real'>234.28923395445133</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26123.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>852.53249218182521</statistic>
                <statistic aggregation='StdevP' datatype='real'>852.44423373216773</statistic>
                <statistic aggregation='Var' datatype='real'>726811.6502257539</statistic>
                <statistic aggregation='VarP' datatype='real'>726661.17162322265</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3774899139.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GBDCHILDCAUSES</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GBDCHILDCAUSES]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GBDCHILDCAUSES</remote-alias>
              <ordinal>4</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Acute lower respiratory infections&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tetanus&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4830.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4830.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YEAR</remote-name>
              <remote-type>4</remote-type>
              <local-name>[YEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YEAR</remote-alias>
              <ordinal>6</ordinal>
              <family>CHILD_DEATHS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9691395.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2006.5</statistic>
                <statistic aggregation='Min' datatype='real'>2000.0</statistic>
                <statistic aggregation='Max' datatype='real'>2013.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.0315462400844568</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.0311288741492746</statistic>
                <statistic aggregation='Var' datatype='real'>16.253365085939119</statistic>
                <statistic aggregation='VarP' datatype='real'>16.25</statistic>
                <statistic aggregation='Count' datatype='integer'>4830</statistic>
                <statistic aggregation='Median' datatype='real'>2007.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19445862555.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:GBDCHILDCAUSES:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Acute lower respiratory infections&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tetanus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Other noncommunicable diseases&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meningitis/encephalitis&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Injuries&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Birth asphyxia and birth trauma&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pertussis&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Other communicable, perinatal and nutritional conditions&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Prematurity&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sepsis and other infectious conditions of the newborn&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Congenital anomalies&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Diarrhoeal diseases&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:YEAR:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2000.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2004.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2008.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2001.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2002.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2003.0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Barchart'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_1_TO_59_MONTHS]' derivation='Sum' name='[sum:DEATHS_1_TO_59_MONTHS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#b40f1e' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-color' id='refline3' value='#b40f1e' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' z-order='1' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='sum' id='refline1' label-type='value' scope='per-cell' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='2' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='3' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' z-order='4' />
          </pane>
          <pane id='1' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk] + [oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk])</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Barchart 5 Highest</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_1_TO_59_MONTHS]' derivation='Sum' name='[sum:DEATHS_1_TO_59_MONTHS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Countries 0-27]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Countries 0-27]</column>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#b40f1e' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-color' id='refline3' value='#b40f1e' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' z-order='1' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='sum' id='refline1' label-type='value' scope='per-cell' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='2' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='3' />
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' z-order='4' />
          </pane>
          <pane id='1' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk] + [oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk])</rows>
        <cols>([oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk] / [oracle.42342.593655092591].[none:COUNTRY:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Boxplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='None' name='[none:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[oracle.42342.593655092591].[none:DEATHS_0_TO_27_DAYS:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <slices>
            <column>[oracle.42342.593655092591].[none:DEATHS_0_TO_27_DAYS:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
            </encodings>
            <reference-line axis-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <range granularity='0.01' max='0.48999999999999999' min='0.0' />
            </column>
            <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
              <calculation class='tableau' formula='0.48999999999999999' />
              <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='KPI_percentage_month_over_4 _years (LMH)' datatype='string' name='[KPI_percentage_month_over_4 _years (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI_percentage_month_over_4 _years (copy)]' derivation='User' name='[usr:KPI_percentage_month_over_4 _years (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' />
              <text column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[none:COUNTRY:nk]</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
        <pages>
          <column>[oracle.42342.593655092591].[none:YEAR:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Crosstab2'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <range granularity='0.01' max='0.48999999999999999' min='0.0' />
            </column>
            <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
              <calculation class='tableau' formula='0.48999999999999999' />
              <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='KPI_percentage_month_over_4 _years (LMH)' datatype='string' name='[KPI_percentage_month_over_4 _years (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI_percentage_month_over_4 _years (copy)]' derivation='User' name='[usr:KPI_percentage_month_over_4 _years (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' />
              <text column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[none:COUNTRY:nk]</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</rows>
        <cols>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest Countries 0-27'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</rows>
        <cols>[oracle.42342.593655092591].[none:COUNTRY:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest Countries 1-59'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_1_TO_59_MONTHS]' derivation='Sum' name='[sum:DEATHS_1_TO_59_MONTHS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]</rows>
        <cols>[oracle.42342.593655092591].[none:COUNTRY:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Haiti Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74) (3)' name='oracle.42342.593655092591 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591 (copy 2)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk]'>
            <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Haiti&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591 (copy 2)].[none:YEAR:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591 (copy 2)].[sum:DEATHS_0_TO_4_YEARS:qk]</rows>
        <cols>([oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk] / [oracle.42342.593655092591 (copy 2)].[none:YEAR:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Haiti Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74) (2)' name='oracle.42342.593655092591 (copy)' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591 (copy)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591 (copy)].[none:COUNTRY:nk]'>
            <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Haiti&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]'>
            <groupfilter function='level-members' level='[none:GBDCHILDCAUSES:nk]' />
          </filter>
          <slices>
            <column>[oracle.42342.593655092591 (copy)].[none:COUNTRY:nk]</column>
            <column>[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='599' />
            <format attr='height' field='[oracle.42342.593655092591 (copy)].[none:YEAR:ok]' value='436' />
            <format attr='height' field='[oracle.42342.593655092591 (copy)].[none:COUNTRY:nk]' value='333' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]' />
              <wedge-size column='[oracle.42342.593655092591 (copy)].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <size column='[oracle.42342.593655092591 (copy)].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591 (copy)].[none:COUNTRY:nk]</rows>
        <cols />
        <pages>
          <column>[oracle.42342.593655092591 (copy)].[none:YEAR:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Histogram'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths 0 To 27 Days (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[DEATHS_0_TO_27_DAYS]' peg='0' size='10' />
            </column>
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Count' name='[cnt:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[oracle.42342.593655092591].[cnt:DEATHS_0_TO_27_DAYS:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[oracle.42342.593655092591].[cnt:DEATHS_0_TO_27_DAYS:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[cnt:DEATHS_0_TO_27_DAYS:qk]</rows>
        <cols>[oracle.42342.593655092591].[Deaths 0 To 27 Days (bin)]</cols>
        <pages>
          <column>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</column>
        </pages>
        <show-full-range>
          <column>[oracle.42342.593655092591].[Deaths 0 To 27 Days (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='KPI_percentage_month_over_4 _years' datatype='real' name='[Calculation_1825928200131940352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS])' />
            </column>
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1825928200131940352]' derivation='User' name='[usr:Calculation_1825928200131940352:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42342.593655092591].[usr:Calculation_1825928200131940352:qk]' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[usr:Calculation_1825928200131940352:qk]' />
              <text column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <text column='[oracle.42342.593655092591].[usr:Calculation_1825928200131940352:qk]' />
              <geometry column='[oracle.42342.593655092591].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[Latitude (generated)]</rows>
        <cols>[oracle.42342.593655092591].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Map2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map 2&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <range granularity='0.01' max='0.48999999999999999' min='0.0' />
            </column>
            <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.48999999999999999'>
              <calculation class='tableau' formula='0.48999999999999999' />
              <range granularity='0.01' max='0.59999999999999998' min='0.48999999999999999' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='KPI_percentage_month_over_4 _years (LMH)' datatype='string' name='[KPI_percentage_month_over_4 _years (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([DEATHS_0_TO_27_DAYS])/sum([DEATHS_0_TO_4_YEARS]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI_percentage_month_over_4 _years (copy)]' derivation='User' name='[usr:KPI_percentage_month_over_4 _years (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' />
              <text column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <geometry column='[oracle.42342.593655092591].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[Latitude (generated)]</rows>
        <cols>[oracle.42342.593655092591].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Mexico/US Scatterplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Five Highest Causes of Death in US and Mexico in Children 0 to 4 Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <filter class='categorical' column='[oracle.42342.593655092591].[none:COUNTRY:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42342.593655092591].[none:COUNTRY:nk]</column>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' />
              <lod column='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</rows>
        <cols>([oracle.42342.593655092591].[none:COUNTRY:nk] * [oracle.42342.593655092591].[none:YEAR:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Scatterplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 27 Days' datatype='real' name='[DEATHS_0_TO_27_DAYS]' role='measure' type='quantitative' />
            <column caption='Deaths 1 To 59 Months' datatype='real' name='[DEATHS_1_TO_59_MONTHS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_27_DAYS]' derivation='Sum' name='[sum:DEATHS_0_TO_27_DAYS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_1_TO_59_MONTHS]' derivation='Sum' name='[sum:DEATHS_1_TO_59_MONTHS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]' />
          <slices>
            <column>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <lod column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <lod column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <lod column='[oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk] + [oracle.42342.593655092591].[sum:DEATHS_1_TO_59_MONTHS:qk])</rows>
        <cols>[oracle.42342.593655092591].[none:YEAR:ok]</cols>
        <pages>
          <column>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Treemap Deaths by Cause'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Treemap of Total Deaths 0 to 4 Years in North America by Cause - </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Gbdchildcauses' datatype='string' name='[GBDCHILDCAUSES]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[GBDCHILDCAUSES]' derivation='None' name='[none:GBDCHILDCAUSES:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#cfc1ba</color>
                <color>#d4b8aa</color>
                <color>#d9ae98</color>
                <color>#dfa385</color>
                <color>#e49872</color>
                <color>#e98c5d</color>
                <color>#ef7f47</color>
                <color>#f47230</color>
                <color>#f96318</color>
                <color>#ff5500</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <color column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <text column='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' />
              <text column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[oracle.42342.593655092591].[none:YEAR:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Treemap Total Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Treemap of Total Deaths 0 to 4 Years in North America by Country - </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CHILD_DEATHS (C##CS329E_ZNK74)' name='oracle.42342.593655092591' />
          </datasources>
          <datasource-dependencies datasource='oracle.42342.593655092591'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths 0 To 4 Years' datatype='real' name='[DEATHS_0_TO_4_YEARS]' role='measure' type='quantitative' />
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DEATHS_0_TO_4_YEARS]' derivation='Sum' name='[sum:DEATHS_0_TO_4_YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#c6b2b2</color>
                <color>#c39c9c</color>
                <color>#c08686</color>
                <color>#bd7171</color>
                <color>#ba5d5d</color>
                <color>#b64949</color>
                <color>#b33535</color>
                <color>#b02323</color>
                <color>#ad1111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <color column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
              <text column='[oracle.42342.593655092591].[none:COUNTRY:nk]' />
              <text column='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[oracle.42342.593655092591].[none:YEAR:ok]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[none:COUNTRY:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:DEATHS_0_TO_27_DAYS:qk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Prematurity&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[oracle.42342.593655092591].[cnt:DEATHS_0_TO_27_DAYS:qk]</axis>
            </node-reference>
            <page-reference>
              <fields>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Prematurity&quot;</bucket>
              </multibucket>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Treemap Total Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2012.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Treemap Deaths by Cause'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='22' type='pages' />
            <card size='89' type='currpage' />
            <card size='67' type='filters' />
            <card size='269' type='marks' />
            <card pane-specification-id='2' param='[oracle.42342.593655092591].[none:COUNTRY:nk]' size='21' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Prematurity&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:ok]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Mexico/US Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Crosstab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
          <field>[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Crosstab2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[Five Highest Countries 0-27]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
          <field>[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Five Highest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Prematurity&quot;</value>
              <value>398926.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Other communicable, perinatal and nutritional conditions&quot;</value>
              <value>182387.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Injuries&quot;</value>
              <value>195687.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Congenital anomalies&quot;</value>
              <value>362220.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_4_YEARS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Acute lower respiratory infections&quot;</value>
              <value>265488.0</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[usr:Calculation_1825928200131940352:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[usr:KPI_percentage_month_over_4 _years (copy):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Barchart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.42342.593655092591].[none:COUNTRY:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</axis>
            </node-reference>
            <page-reference />
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Barchart2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.42342.593655092591].[none:COUNTRY:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[Five Highest Causes 0 to 4 Years]</field>
          <field>[oracle.42342.593655092591].[Five Highest Countries 0-27]</field>
          <field>[oracle.42342.593655092591].[io:Five Highest Countries 0-27:nk]</field>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Haiti Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591 (copy 2)].[none:YEAR:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591 (copy 2)].[none:COUNTRY:nk]</field>
          <field>[oracle.42342.593655092591 (copy 2)].[none:YEAR:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Haiti Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]' type='color' />
            <card pane-specification-id='0' param='[oracle.42342.593655092591 (copy)].[sum:DEATHS_0_TO_4_YEARS:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591 (copy)].[:Measure Names]</field>
          <field>[oracle.42342.593655092591 (copy)].[none:GBDCHILDCAUSES:nk]</field>
          <field>[oracle.42342.593655092591 (copy)].[none:YEAR:ok]</field>
          <field>[oracle.42342.593655092591 (copy)].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Five Highest Countries 0-27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;USA&quot;</value>
              <value>250660.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Mexico&quot;</value>
              <value>278408.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Haiti&quot;</value>
              <value>103324.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Guatemala&quot;</value>
              <value>108465.0</value>
            </tuple>
          </tuple-reference>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                </x-fields>
                <y-fields>
                  <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
                <field>[oracle.42342.593655092591].[sum:DEATHS_0_TO_27_DAYS:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Dominican Republic&quot;</value>
              <value>57032.0</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Five Highest Countries 1-59'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42342.593655092591].[none:COUNTRY:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Boxplot' width='192'>
      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
      +SFuTa5SXh1hf0QmYY1QyVZ4+ZWnS2IulyOVWrs7S16tIMsyUp3nfL6N96EbhsHM9PTa+hfL
      TE1ZUcNZLOG1zzscjg0v7ajVanXXQ11a1hhfkXH1lvG6tmbQKxqNMji4tvfqsTq3H2tbeP9z
      JV9k5u03sHf20/P1s1vymi6Xi3Pnzq15PJ1Nc+DUIfw+Oz732mNgMwGYmppicnJy8wHIr64Q
      6j7IysIEGc3Op59c5fv/9s9wqo8Wx61UKhSLRRKJBMlkElVVH08vTiaTXL16laGhoTWvW6tp
      IIGlTrfg7t278fl8JBIJnE7n4wO03t8ulwuHw4Gu6/zfv/mbNa+l6Qa5co1pi4xNXVvWiy++
      yIsvvgg8aq75fL7HaxU9+bdhGCwvL+P3+4nH4/zd3//9mtcq1zRKVZ35OxYUuU6PjyTR3t6O
      qqpomsbKygrBYBCLxbLm71qt9vjzrPfF1yoahgFqnQGOQqHA0NAQqVSKUCiELMtUKhXS6TTh
      cBhJkur+/dOf/nTNQgWGYaAX86CoKD/732vKOnr0KN/61rcolUpkMhkikQjw6CyZzWYJh8MA
      FItFcrkc4XCYVCrFT37ykzWvpesamg6KIiHX2dHn1Vdf5fDhwwDk83lKpdLjlkI+n6dcLhMM
      Pmrm/ubYjEajnD9/fvOzQbPz9/hgaJVyOsH+iEyl8ziJweucfPUP6HQ/OlA2Mxt0fmkFRZbo
      CDe2XZ7Ol/jwQZznujzs69p4l+dGTMRSDMxn+f2DEfwue0PLij5MUilp7Doebmg5tUqN7OQY
      kiuIv2dz7e+nlcolyOTA75Hxubb2uNj8dOg61wAOLcOq7iLie/TLtJkACEIztdz9AILQTOLI
      FExNBEAwNREAwdREAARTa/hUiFQqteHZjoZhtOz/08yyftM/0aqfxbNQv4YHIBAIbKgXyDAM
      KpXKhjfISCaTjwc7nlalUsFisWy4l2ozZZVKJez2jY0B5HI5VFXd8GexmbI2855qtRrAhu9n
      btbnVy6XqVarX7i+U8vdENOM3WF+Y6vnln+RjX55X4Wymnkjf6Pek/LjH//4xw15ZR4tdS7L
      8rqnoNmROxTUIJ46K7MBoFeIJ7K4nmL09DdlASTnx7gxMER0MUVbxMXk2CKhkB+ATDxORakw
      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
    </thumbnail>
    <thumbnail height='192' name='Histogram' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAdS0lEQVR4nO3d6XdU54Hn8e+9t3aVVFJJQhKSALGvBhsMsQ3BAWO84MROumNn6U5PZvqc
      OX1Oz5x5O/MmL+YP6DM50326O5OknZy403biODFe4gUbY4xZBJIACaF9X6ok1V51t2deCGOX
      qkoGG8qgej5vkKoe3fvUw/3VXZ77PFcRQggkqUSpX3UFJOmrJAMglTQZAKmkyQBIJU0GQCpp
      MgBSSZMBkEqaDIBU0mQApJImAyCVNBkAqaTJAEglzfHZX05enuW//1PX5/6Ry6WiCUHaFHhc
      KoqAlGHjcalYps2WZidN1RqNVRpPPVCPpmm37QNI0peRFQAhwLI/5+ZQh5O/PtxApUfljyem
      +YuvL+P85Rnaoxrfv89POpLkH94OcbYPdrY4+eFjAdxu9+38DJL0hd38IZBp8OsTYRwqlPtc
      6KZNwKexdqWfkydGcdSU47kNFZWk2+HmA+DQqBYZ3hu2aPIY/OzoKOXLAwQ0BZ/XgWJaGLeh
      opJ0O9x8AATsuGcZax0ZzkxYPPK1OuaG53j79BR1G2tp7whh3YaKStLt4Pj8IgtYFn98b+z6
      r799d/T6z//2xsgtqZQkFYu8DCqVNBkAqaTJAEglTQZAKmkyAFJJkwGQSpoMgFTSZACkkiYD
      IJU0GQCppMkASCVNBkAqaTIAUkmTAZBKmgyAVNJuOgCqQ6Uh6MbnAIdTo77KiVMFt8dBfaVT
      Jkq6q9z0gJiNm4Jsr3RTqaboU3xsCKhcuRSiYXMtLk2l7cQgH0/bt6OuknTL3fQX9uWOEEOG
      gqJqLK+At1ujrF5eQZWm83pnku0rvDQFNbY1O1hZK6dDke5sNx2ApgYfl9qnqKz3g61QVa6R
      SOooqkbApzGbMEgbgmhKkNLl8/ekO9tNHwKlbJVvPljDsQ/HGLQ9PLrByzunpyiLKnytSeOV
      Np1ZC0IxqCmXZwTSne2mAxCejPP8ZPzabxl+ORKZ/zEWpqv7FtZMkopAfkVLJU0GQCppMgBS
      SZMBkEqaDIBU0mQApJImAyCVNBkAqaTJAEglTQZAKmkyAFJJkwGQSpoMgFTSZACkkiYDIJU0
      GQCppMkASCVNBkAqaTc9JHLnrjrur3FBMkGb4eWBGnj3zBSNm+rZXKvx8tEBehK3o6qSdOvd
      9B7gwvkpfvHeJK4KH+uXezF1k7mkgw1VFv9xMcW+dT5UBRwaaHL/It3hFt0DeD0aGgrYFvFr
      U5womoMn9wR55f0xpnQoXxbg+7srUQFNUbBtwZZmB41VGs3VN/8gekkqpoJbqKo5+S/fWo5P
      OElHo/zLG1OkgP37ltPiMWF9BWGnh621Li50TKE1VvOtjS7+8HqK/iR0DJnsbLH5cRE/jCTd
      rEW/oh2ak/BIlKRiYV177Z13BnnnM2Xe/+SHgdGs1yXpblA4AALCsQyxpEXnUBS9iJWSpGIp
      eJpq2yaXBlJUL/NyYFc9z94fuPlLRpJ0hyu4TSuKRm2Z4ELXHLG0RSRuXD8MkqSlYpGTYI2H
      ttfgR2F4cIafvjGFnOpWWmoKBkAIiwuXZigPlhPUFJyAUcSKSVIxFAxAmU9jImoRngnxan+c
      ZDFrJUlFUuAkWOWHjzZAxsRwuvnOA0Gcxa2XJBVFgT2ACysa48MrUUCj8VAtZcBcMWsmSUVQ
      IAAWdrmfvzviA0BPpmQ/gLQkFQiAwf97efDTXwXyCpC0JBU4B9DYsdqHQwEhN35pCSuwB3By
      ZF8dO1pSdPXF6A9nmIyYMgjSklNgDyAY7J/jV+9Pk3I6WVPvwVXceklSURQIgM6o5eG5XZX0
      9UVJq4ocOyktSQW2aydba+DkkM5j99ewdUUZ7uLWS5KKokAADHpnLcKjMd69mqTMpWAXt16S
      VBQFToIFrx6fmv9xOs4/vRqXJ8DSklT40F6A5lCp8GpoShFrJElFVHg8gKrygydXUqvahCcj
      /OrkHBbgdDtYEXQyM5shIVSWBzTGwxk0t5M6v8rQVEaOG5DuGoXHAyhOgg6DdzoSPLDajRtI
      Ats2VVGrCHbsqqIjobHCIxjqmaFhUy2GrdBzeoiTk/KMQbo7FLwKtG+jg5dORajzK7z2Uej6
      7dCtF6Y5O5phKmZS5xcc74izsiFAhapz7GqKbc1eWmo1dq12srZeDqKU7mwFb4V4ePcydq7w
      4nE7WNvku94RVl3n5+GVDn57MoxuKVQHHMTjaRTVQVWZg1DUYCZhMzJjEY7JPYF0Zyv4FT0b
      TnK2OwKAaViY115f3einskrjsS02b7XO8egGL2+fmcE3Bw82OXjlvE7UhkhS0FglAyDd2Qre
      Dfr2+TlGw5mcd860TnDmM7//ejw2/0PvLL29t76CknQ7FRwPcGnYwuNSUYQgZcheAGlpKhAA
      hSMHGlldoaEIwejwHL9vjcreYGnJKRAAjbXVKifbZlGcTu5f4cVDVA6Ml5acAleBTH51bBqv
      z4kPk9+dCMmNX1qSCl4FCodSvB9KFbMuklR0i/ZU3bOpkoDmQMTjnBhIF6tOklQ0BQOgOTw8
      tj2AmRJEDSftA+NEi1kzSSqCggGwLZ2uaRsRSmApBvFi1kqSimTR2aGVRILTQ3FM05LjAaQl
      qUAAHHzn0To2BV3UB33MzSR45dQs8ixAWmoKXgYdmbIwDIOpiEllwIlW3HpJUlEUPATqGYyy
      vMxHNG4yManLqRGlJalgAGYiJjs2BfEr8w/IOCuffi0tQYs+IKPt8gzl1eUEHap8QIa0JC1y
      GdTk4qRJ3VSI04m0vBVCWpIKzgqhOdx8e08Nq+s97L03SFkxayVJRbLIY1INhmIWW9cFSEyn
      5CVQaUkqeAjUsNyPz7aYCOl83B3PmuqkdlkZ7mQSo8LPQy0+uq6ECTm83L9c4+3WOXLHkUnS
      nanAHsDBs1+r4KV3Rvj5iVkO7qnFc+2dylo//+3pVWyu1ti9uYrBvhl6ZwXf31tFxFvOwRY5
      E4R09yjYE6wnM1iKAmmTOOAB0sDcdJy3riTwKArj00l272li/WAUxTQYDNscqfGwQ2RoDmo0
      BmX3mXRnKzgofiCh8dSeWgCiU0lyRgYoCoppcq4vwY5y0BUnWxrgak+YC8MmFwYMdrY4+dFt
      rb4kfTkFAmBz4swUkWT+UcCXL02hJg0sn86WOsGLZ6Io5Sk212qcHjbz/o0k3YkKHgL99RNN
      kMlwZTRDIp7mdHfiekdYKHStVyCZ5Hjo2ovhJCfCt7u6knRrFTwEeumDELtWOOifyKDrppzw
      VlqSCvYDjE/FsMr9PLuvjh31TjklirQkFQyAQ/OwzpfhH46OU7OigvJi1kqSiqRgAEwzzUdj
      Kn97aBldF2eIFbNWklQki/ZanW6d4HRrsaoiScVXMABrVlaxZ6VG55hBc7XGWx/P5PYFSNJd
      ruAhkNOhUFbmYnWdm8hsRo4FkJakggG4OhCnstpLpd9JTcC5+LGSJN2lCj8lUlEIljvQTYFh
      CTktirQkLToi7OUPJvECyYQuO8KkJanwHgAo8zmpCHh5eFsAZ7FqJElFtMjMcCrLgm4qVIVk
      Mi17gqUladEhkSNhA7di094Tk6O8pCVp0UHxe5o0XjkXYcuWKvzFrJUkFUnBAFiWzuUZlWf3
      VjPcH0VOiyUtRQXPATasD9J7YYyRpir8EUNeBpWWpAJ7ACePrHFwNWJz6UqUdVuq5LxA0pJU
      8DnBttvNumUe8Hnw2bacHFdakgqOCf734yEObq1C1XX+dCr86b1AisLe3fXE+6aIBwIcWu/h
      7Y8mCaysZmeDgz+8M8akTIt0lyh4DjAbTvLS+7kzggaqvdzXUk7X1Az3bCrjXHeCh9ZXUt3k
      4miPxYG1Hl64LOeRk+4ON32PWySU5MK4jkcBVREkUjaeZR6EbZHQbfxejR2rnHJeIOmusOit
      EIuyLPrD8MyDVXQPzzGWcfPcDj9n+pNcGDD4U2uaM73yWEi6s32hu5w/OD6AIkAMjXBSVTAt
      AYODOFQwLHnBVLp7fKEACMF8v4D4zAYvBIa8ZVS6y3zxQyBJWgJkAKSSJgMglTQZAKmkyQBI
      JU0GQCppMgBSSZMBkEqaDIBU0mQApJJWlBkPn/g/HzCXzH9j3Fv/Yz9lbjnxovTVKMqWNxFJ
      M5PIHwB565z0VZKHQFJJkwGQSpoMgFTSZACkkiYDIJW0LxWA5c0V/OBAA/fUOWhorOA7e4J4
      blXNJKkIvkQAFHZvrKTr8jSd04LvPVDJED4eXSOfJCDdPb54P4AC/aNx7t3ZyMaJBJgGExGb
      XVUudqzipqdFmU3oJPX8g4qrypz4XLKzTLr1vkQAFLwO6JtIs85lk8TJfc0KXZdDXBi1uDBg
      sLPFyY9ucHH/+2gnv2sdyfveT793L09tX/6FqypJhXzxANg2XcNJ1tU4eWkwDr4U64IqbaNy
      agjp7vGljivmZtOcmb02DaKe4uzcraiSJBWPvAwqlTQZAKmkyQBIJU0GQCppMgBSSZMBkEqa
      DIBU0mQApJImAyCVNBkAqaTJAEglTQZAKmlFucl+VbWPKl/+gTKqMv/vsgo3a2rL8pbxy4mz
      pNukKFvWwRUwOjRFeeNGvGXzgyaFESceSWPFpvjgUh+NgWYOt0BkKkJg5Trs6AixiE5w5RrS
      452cNaPs2NRM1/lzWJWr2LoyQNuZVvwrNtNcbnK+/Sqr79mFX5+k9co42+7bWTB0kvSJohwC
      JaNRKpbVMHH53LVXBJG+j5jo6WN8dIK6ehdXT50i1HURl1cw1XuVVMLAkR5kaugqPWMJzPFO
      Wi91IyqWc+7Ymwy0H2fEDnD14/foGpqmrlLh7RPtvPnan6lvqODY8Y+L8dGku9wtC8CzT6zi
      f/5wDdsCSs57FY1rsRIhyurXApAJ9ZAW5Tg0heZN9xAfG8fhc+PyaUTGR0hHogQaG0jFdFTN
      SWpmhN6hEWJU0eBOoKhOCDQw3dPByOQElQ1rSMzN4FQFTTV+zp7vZGwydKs+mrSE3aJDIBeN
      bp1fnbM4vMZLR2sy693YYCuRhJea5gqsTBqhOsGIk5pJ09F+jmDzehznTyKqmnGaceKGn8jw
      COX1NczG0qzfvp2K2AhV6hwjCQ81jgRJpZx7d+5goPMKkfFu/A0txD7qo3zLWu5z2XRO3Ph4
      5LtJSrcIxTN53/O6NGr87iLX6O52iwIg5scIO1VSup3zrury49LSJGMRPC4nruAq6ivrKW9K
      sXn1Ki53D7JizwHGJkeIzWrUtazCio0RjzpYvrGFMkeEuk272dhSR8+lDlr2PsWmlZV0tl9i
      5/6D1PkMLnX2ceSpQ5RbM1weCPHI3q235qPdYU70hPjb58/mfe/JbQ383x/cd8PL6g8liKfN
      vO+tri2jzO3gWNcUL53LP1b70OY6nr638YbXV2x//8J5bDt3+mVVVfjp9+4FblkADE4Omjyy
      wsEf3kpnvTN7+hzByThlpg3x0fkXBwcA8AKxc2laNJWZwXbi4SQVALMXAKgEmLtATUuQZYbB
      zPAAQYBwLzNDUAcQaScGrAA4f5a4LQgNzXKifX4ds0md3qkEAB6nxt88tOrWfOSviD04y8bh
      7rzv1TgnmT6WuOFl/eMbXXSMRPK+97+ObGJjfQWjFyfoPTWYt8ym0eVMzzUTSRm88PFQ3jLV
      fhd/uav5hut0K/W+drpgAKbr48AtvAp06twkp/K8Pv6H15g40Ylu5u4ZAIbb63GoKmPDc0zO
      JvOWGV1Rhaj0MjaXonVoNm+ZpiofO5orMW3BmYvjectYmspwb/0NfZ6vQsdIhMGZ/BvwjuZK
      mqp82NE0Dw7M5C2zfNzL8Mg5hBAc7cjfBg5V5bGt822wui9MeYHDqbRxheEyF95QggfH8oek
      KuxnuLOCRMZEXJnKW0b3OBm+XAvAsa4pEnr+Pc7BTXV4nRqXxiL0h/K3wbbGSlZW+/K+l88D
      neMIkRsARVEYfr5v/mfxmRJp3WImZtzwCgqJx+NkMjqKMFhW5WUypvNJENPpNB7Pp/PHLa/0
      YOg6CVO5Pi+QrmdwOJyo6vw5erDMhWob2Krz+nMGbNvGNA1crvljXp9Lo8whcLpcjM19uhf6
      7PpUBerKXdi2jdPpzFum0GumOf8f53A4burvDMNAVVU0Tfvcv0vZKonMJ22g43A4rrdBVZkT
      zTYRmpNwfL4NhBDouo7bPd8GXpeG3yFwuVyMFmgDRYGGCjemaRLVBWnDzlun2nI3wtQxcTCX
      mt8mLMvEtsX1tiv3OHArFg6nm4lo/vU5NYVq33ybhRIm5rUNYeH6GgIeDD1D2taIZ8xrbaej
      qtr1tqvyOdGEmdN2mUzmeht8tu3GIp+GO2e7C8y3AeI2ikajIp1OZ71mWVbW77Zti3A4nPOa
      bdtZr4VCoc8tEw6Hc5a/8PdMJiOi0eiiZW50fQvL5FtWLBYTqVTqtqwvX5mZmRlhmuai69N1
      XUQikdtSp3zLSiQSIplM3pb15SszOzsrDMNYdH2GYYjZ2VlxW/sBFEVBUeYviwohMI0MmYyO
      Zds55eYJbMsgnU5jWnbW7uvTMiBsm0wmjW6YOWU+uz5Dz5DRDewFu8HPrs8yDTIZHdNapE62
      RSadxjCtwnUSNnomja6bWevLbQP9BtrAvKE20PO0wSd7jIVtYNmf1waZRdtA2BaZzI22weJt
      /kkbmJ/TBpl0GmOxNhA2emb+832RNlBVNfsQ6HYau3yK146fZTZuUr96A089fohKb/YpSCI8
      zOtH36B/MkJFsIZvHPku6+sWHPPZGY798Xe09Y2husvZ9uBBHr53LVm9D8Km++wx3j19iURG
      oXHjdr59eC8uLTvvsyOdvPbn9xkNJahpbObRJ5+mqdKVVcbMRHjz97/nylgYt7+S3QeeZNe6
      hgXrM2h97w0+6ughI1ys3v41vvnwzpxOlokrZzj63mlmYjp1q9Zz5InDBH3ZbZCaHeX1V1+n
      b2IOf1U1+5/4CzYtL89ekMhw/NWXOd8zAs5ytn7tYQ7s2pDTBr2tx3n743ZiaWhcv42nD+/H
      68yuVWSsm6NvHmNkOkZ1QxOHnnyGFcHsS6m2EefN371I12gYZ1klux5+nD0bGxesz6Tt+Jt8
      2N5N2nKxctv9PHNwd04bTPe08qd3TxGKZKhbtYYnHn+cWn92j306OsEbf3yVnvE5/JVB9j7+
      bbY0VS5Yn86Hr7/CuStDCEcZm3Z/nUN7Ni8oI+hv+4C3TrYRTdksX7eVbz32MGWuTw9Hi3aT
      zeDVftbt+Qb1XpWui22EY2kqvf6sMpGpEdTqdTy1p4Hk2EW6B0Osr1uRvSBzlqGwg8NPPoWd
      nOHC4BDWvWuzP4gwGByYZse+R6hywsdn20iadk4AJgcGCK7bxa6HypnsbWNwIkJTZW1WGSM5
      zYxZzRNHHkSfHeLK4Dg7FwbASjI4muTBg4/jUy1OnL6EyU6yowRD3X2s2f0we70qVy+3MxVJ
      EfRlb9zR8Bh2RQtHdjeRmujk6lAoNwBmhMFplUNPPAWpCOd6B7F2bVjQBhaD/ePcs/cRgi44
      d66NhG7idWbXamp4kEDLDnY+WEmov43+8QgrgsuyyljpEFPpSh478iDm3Cidg6PsXhgAO8Xg
      aIw9Bx7Dr9p88HEHJrvztEEPq3Z+nYfKHPR1tTE5m6TWH8gqk5gZR/et5Mg395Ge7KZncJot
      TZUL2iDK4JTgwONH0PQYZ7oGsPZsXrBBWwz1jbLloYPUuBUunG8jmjayAqD95Cc/+QlFUNOw
      jPGrl7k6OMnKLfexobkOTc3uNfYFgojYBBc7e1GCq3jovg24HQu+QzQfFUqY9z66gKH62LJ1
      M7VV5dn/GYpGTU05fZ0Xab/YzYbdX2dtQzBr9wkQqKklPtFHx6XLWMH17N2xBqeWXUZzeHFZ
      EdounKNrwuSRg3sJeBfcY6S6qfIrdF/uoLWjm10HHqM5mB1uALfHycRwP72DEzRt3MGmVfU5
      beD1V5IODdDWcYlJM8ChffflfGujean2pPjzm39maFZw4JH9VJctmJheUamuqaDj5HucvjjM
      9n37WVMfRF3QBhXVNaSmBujo6sffvJH7t6zKaQPV6ceZHObDc10IbyVbNm2kOuDLbnPVRXWl
      i+5LF2m/2MvObxyiObgguEBNQz1TfZ1cvNxN+cpt3LdhBY4FbeD0lEEyxPmzZ+iLe3nsG7uz
      Ntr5NvAQ8OhcvthBR/cYDxw4SH1g4RUiBZcLxgb7GRgNsf7e+2mpr85qg6LdDu0N1LHv0JM8
      +91n2LU5d0MDiE4P0dk7iiUspoZ6uDoczl2QGeHjs1dIzU2RwsVITx85162ERVfraa4OTGA7
      FC6dv0Ayz2XYwYsf8fp7Z5ieGuX0Bx/QPZp7iTUzN8SMWs8ynxuvEqOtczj3yZZWgjOtPdRW
      BfCUeWg9fY58F/sunj7Bxf4p1m25h23rW3DlaYPIZD8XLvUSTaYxwn209ea5pcNK0tp6GadD
      EItF6bjcS86nEzY97eeZs90EA246Ws+TMHLbIDzaS/fQFGAx2tPF4ETuJU8rHeJsWx+xmUmE
      00lv9wA5M8DaOu2nTzMwPIXiUjh/5nzeNrhy+h3ePtXO1MQQJ98/wXA4llNmdnwAu7KZgNuF
      W5+krWc6t83NKB+1jtBY6cPlVTjfejG3TsKk9cMPuDoZZ+M9O9jc0pQTtjtqPEB5sJ50eAh/
      8xb279/PmobK3ELCIiGq+PF//c+ku97mxKU8vZTCZjZm8NDhI3z/2W/js5KYVu6pzqrte9l3
      TzMuf4Cd+w6zuakqT61sTr72HxzvmuG+7RtIJpK5/xmKiqrP0dp+BWdZBcJI5338q+1exref
      /gaT3ef4t1/+mp6JaE4ZM5NCNwxiSZPKcheJfD21dppQJENlRTmbtm8lPDqRGwAE8WgMb0UV
      tdVV6Ml4zkknQLC+kdBQDw0bd7F//9dprs3dcwlhYPua+U8/fo6hk6/SPpTni0kYzKYcHHjy
      m/zVc09jR2fz1Ak2PnCY+9fU4C6vZu/Bw6yqyV2faqd56/f/zrlRi/u3rCIeT+UuSNFQ0tOc
      bevF66/AMvW8be4OruKpR3Yx0P4hP/v5C0zEsjtqi3YSfKNMPY0hNDxuJ7nfjwCCZDKF1+dF
      mAbTM1FqltWgLShj6DpCceByWMzNGQQqfTmHQDB/JWFmuJsZRz3rlucGTgiBZZlkMpn5/gOX
      D0/O+ASBpacZ7OslZrpYt2ENPmfuvUjT4xNUNdSjCYEQIusK0fUl2RZzs3M4HYKRyThr1q7E
      qS6styARHmNgVrB+VS2WqeHxLKiTEJhGmpH+XkIJaFm/hmCZJ3d9wiaTSmKrLtxODUVVcw6T
      hLBJJJJ4vV5sI00omqZuWXX2t6cQpNMpVIcTTdWZm4NgdVnO/6GwbWzbYqzvCmZgBauWledt
      A90wSKd1hG3h9Vfgcmo5J7h6Okbv1R4MR4C1a1fidTlyLgRMjk9SVbcMDbBtgebQsj7fHRcA
      6RaxDU6+/iIfdk1S5nWDu4bnvv8MwQXnLyOXTvDbo6fw+H0oqpMHHn2Ge1fXZJUx4yP86z+/
      gO7y4dQUmrfs5Yn992R/6ZgJXnvxBTonEnjdTrTyZn70V0/lPDLrykdHeeWDTvx+Hzj8HP7W
      M6ypyz5XiIxd5vnfHAWPD01V2PTA4zx8b0v2xq3P8sIvf814SsHjVAks38J3n95P1qcTFh+/
      +SLHL45T5nODu5q/fO5pass+c5UrpzdCWjIS033i57/8jRifTYh0JiOsBR1GQghhGwnx8vP/
      Is73h0Q6nRammdtBZduWuHj8ZfHiuxdEOp0WumGK3CUJEe5vFT/7zZ/EXDwl0hk9bxk7ExHP
      //M/ip7JmEinM8K08tTJyogTr/5GvHWuV6TTaWGYVt5ljXUcE//6u/dFOp0WGd3IWyY5Myh+
      8YtfidGZeN42kHuApUwITMtCVTXUnMOoT9mWiY2KQyt8SiiEjWkJHA6twKHptfWZFppDy3u4
      +QnLNEHVcq6AZdXJtrBt5pe1yPoM08LhdCxaxrIslAJtIAMglbQ76iqQJBWbDIBU0v4/w35/
      fuHPF0AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Treemap Total Deaths' width='192'>
      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
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIk
      AMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIk
      AMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIk
      AMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSbGt9wEpfH4qur/VhxReoqnz2QQ0C4IrFUKrV
      tT6s+IJKJFLrEtaFtf8YUFT8PVuwaeDu6MJhtxPaeYDWx/bjcNtB9VK/deOalyWsqQbtoErd
      9p3YbeDt2Yy7rovGbjfJawu4Qh7cvTup39SN262sfWnCcmoQABPTNAFQFAUzN0XsYpKGndtw
      +X1EeptIxarU9batfWnCctY+AKZBLrZEZP8BggE7FU+Eho0RKrk8tnAntsoixeQcjmgnqjQC
      YpWt+SAYTJKn3yfr92KWBqkUykwdS6OpJuV8ERUdvaKTmx7HMNe+OmEtNQgAoFcop1Kfflld
      TnNzXujmBKleLK55WcJ61j4Aikpo10MEGr0kh4cIbNsDy3PMfTyMYQCqg6aD+1k8fpb6/fux
      leZZjBtENreSv3aBxOjsmpcsvr5q0gUqTI5Qym6kYdeDOCszZHxdBBouk5ov4n+gn/DGDRQn
      UrgcOvlUmWo6wezJFG0HOlkcnUV6RvdOdzgo+3y1LuOeVR0OSobxlX9+7QNgmlTLGo1RO/Fj
      71O3ez++qIuUTQN3E237N6N6vfjb2qA8jX/bTlKXfk1obx8LZ87Jyb9C7KEQ7mi01mXcVt4w
      8Hq9t93Gc4/HWPsAqDZan/8WamoaT7QZd9gPxQXyRQ8ed45LP/05zc88xdLwMNHH9qEVUwQf
      fpa6+ipKNkI2sbzmJX8dKYCiV1jOFUDR8Pu8aF827WbqFMoGbqcdAKNapmJqOO3aqtaoKgo2
      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
    </thumbnail>
    <thumbnail height='192' name='Treemap Deaths by Cause' width='192'>
      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
      sw4GAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Scatterplot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mexico/US Scatterplot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab2' width='192'>
      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
      LgMQxAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Five Highest' width='192'>
      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
      sZ30kKsIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      +P8zEMPBdPsu7AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Barchart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29Z5AcZ5rn90tT3ld77y28J0AYgt4NZ8ftzO5NrG73dHN7oYhdmVBIF6EI
      rUKhD9IpFBcn7Z0ibqXV3u4eZ2dnOENyyCFBAiQsYRroRhu0QXtvy/uqzNSHBkFXTbhEN4DO
      35fuysx63jer3n/la573eQRN0zQMDDYp4kZXwMBgIzEEYLCpMQRgsKkxBGCwqTEEYLCpMQRg
      sKkxBGCwqTEEYLCpMQRgsKkxBGCwqTEEYLCpkb/8IhpPEgrHHkpBFllAlg29GTxafEUAv70c
      4l//cuyObyqv8lAnppkTrRyut3LiwiLNW4soUtN8OqOwxZJhEivudJKiQgGLLPDyHi+Hd9c/
      tBsxMLgf5Dtf8rU3WEy8sa+QxNQS28pcnLiZ5kcHCkiLCiGbi8ZclleavfTPxfnFhQzd86vv
      29mg6F13A4MH5p77JAf3l1IkalSW2LGiEU4reO0mclmFJAIOUcAmC5jM0sOor4GBrtyzAC5d
      muXnV8NMLie5EdT4430eTlwPIPk9bJUVxlMKPYMrXF6Gl1odD6POBga6cc9doExG4ebYCjfH
      AMKcuHX80sz47WtGAYjT8+D1MzB4qBjTMgabGkMABpsaQwAGmxpDAAabGkMABpsaQwAGmxpD
      AAabGkMABpsaQwAGmxpDAAabGkMABpuatQUggM0k4rLLyMI61sjAYB1Z0xmurNrHd9pdVBea
      uHRlhncHUutZLwODdWHNJ4CmqBT5JC72RQinvoigXlXhYneNDQloqnXTXGhCNsnsaXFTYBWo
      rbBjAqpLbFiNLQEGjzhrPgEyiRznry1xeTRBKqPeOirRWCRTUe7HZAmxs9KM1ePm6pRCuU1l
      m0/A21BIR2eEQlOK3y6u010YGNwnaz4BIpEUCbOVP/tRHT97tpgiqwAonBtO4rVCocfG8mKM
      kNlMs1OmdzxKkc+KxWrl9Z0Oro/GyWnw3FYLr+60Uuo1HgcGjx5rCqCg0M62UhOnL8zyTk8M
      t0MCQeJok42xkIKs5igsduFLZ+iPZNnR4GYxkCKdSvJ//W6Rlw4V4ZLgZG+a97tSzIeMPcEG
      jx5rdoEkk0RluZv6YhunL8xwYjQHwMB8lqKVFXqnklRXuRDiQSYiKokaO1NTMZyTGeaDSd7q
      UNFEARQjA5PBo8uaArBYRTpuhNnXYMPrkoE0ADNzMWZuXTM6Gb19/fXh1f8Dc0kAFleMWSOD
      R581BTA3FcGWtTA0EWRyKb2edTIwWDfyjgEcHhs/e6WcxhI7z+wvZU+Zab3rZWCwLuR9Avjc
      FgZ6lzhxM4nD6eT1dhvMZNe7bgYGD528AkgmFRp3F1LTqCGKAmNDy+tdLwODdSGvAFaWo/z7
      d6J87gJkpNI2eFLJOwZwOi1sq7QiAKoGRvs3eFLJ+wTw+uwc3+lgW32GkZkko3NxFuNqvksN
      DB5r8gpAURSu9SxzZUGhrtiCRRIBQwAGTx55u0DBcJr2XWX8eLuDicUcjeXm9a6XgcG6kPcJ
      4PfZmLu5yGcrEj/Y7SObja93vQwM1oW8AlhcjDFrsRCci/CpSaBWyqx3vQwM1oW8AshlcnSM
      rDq/TU2GmVrXKhkYrB9r+gJZnVb+6fOl+CSVX3w8zUjYGAQbPHmsKYDqKhezg0t8mLZyoN7O
      SOfDyR75JKBpCmM9l7DWPkV2+io9U3GOHDlA/8VPyLprObi7DVmEwatnmUm72FLj5FrnAGnV
      zP4D7fR09LH10FEqfPaNvpVNR95ZIEkSmZkIkfa6OFgucqLvi8ZfUmijscSCLEBZsY1yt4Qk
      izRU2HGZBIr9FiSg0GvGvEmCrkQXpzjzyccsxjL09Q6TDU8zOtRFf9gHi32MLSWAEJf7gthi
      Y4Slcp4/vB3ZWcBE10XKKwo539FvLDhuAHmfACWlLprMaT78bP6rJySZfY0O7B47TfMx6kot
      WG0i58ZzbCmRyK7IFLYUcf5ikDq/yttXN8fg2V1SS3tdKVo2S0424baYSZtLKZe6mFyI4M1k
      gRSS7MIiRUim03T19LL76RcY+WQEj9tDcnwODTAi0KwveX+jRVHi2afL+Nmrlfzs1Qr2V1hW
      Tyg53ru8QjKVIyHILMyGWbFY2Oo1c+lGiLIiGxarld8/6OGzvjBpFY61mXlhm4Viz5O/J1gQ
      JSQ1w0IggklSSSTSiI4CCk0J5kMurLlh+uZTlBc6mE9olNhMlJUVcerUaWrqa43GvwEImvaF
      q9ubn8zxr385Rlm5m0ZzhrPjX9vVJQh895lypoeWmRasvF4nYyuy0zut4CJDsUnBVevn7RML
      vLTDzt+cXCQrAAL8998r4vvHm9b59tYPVVFAFEFVUVQNWZZQlRyaIKEEp5jRiqj1m1E1AUkS
      UVUVUZQAlVxOQZJlRMGQwHqTtws0NxthLt8Jk0wylqa03Mn8QJgrSy6E4QX6AyoH291c6Q3j
      nc0ysxTj/RsaVrNAMr2qL/UJ7+CKksRcOEkwnm/fhA/IMbCQuyebRS4LRS6LLvUzyE9eAYiS
      yO42H40FZhKxFGd6Q4TSGmSynLjyxd6AmYHg7f9PdwYAmB9bHTBPzm6+1eP/cP0/8mbv73Sz
      92f7/5B/uff3dbNn8E3yCqCo2MVWH5zsC+IvdfNSq51/uL75GvS98mJGojqh3/bRXdlNMo22
      geQVwNJynKWmYn7yjItoJMW75xLrXa8HRlMyXPzw5wT8h2nXejg5KXPoqf2UySv8v+9c4b/+
      058iCNB55n2Gp1eo3fci89c+YEVx8/KRNt4/cQlvdSvfe+Gpux6cliR2oAVsut1DQbJFN1sG
      +ckrADWb470zs7y33rXRkZySxeZ2IWQ1liJJnDYnmgY52Yz98x9WNcrY+Apmnw+PJcGkrYYt
      cpDLVy/RduQNpi+fIM5TOO+yzLmcl/5MpW73YFXc6GfNIB9rrgQLkkiV14THa2Z8Mkr0MdsT
      bzI7KCxwM7sMtXufoVVM8JvT1/ijHx5BFj//TZdQJQtPNXj5oHMCl5omLYHHbieRiKFJprU/
      oDzYbKN4PFd1uwerRQJqdLNn8E3W/H5r63082+jELyuMOVV++RiOARyeMiolF0p0jtP9Uxw4
      cAiQaW5uQEnH6R2e5uD+Fjp6J3n+2HMEBy8yn6nk6L4mzp48Q93OfVjvoTy3x0pZuUe3+juN
      GaCHzpoCCAbTeB0Org+nWJp/PANj+crb8QFQzHcad9w+fuzYQdRslsryEgr9PiqadgJQffA5
      Pr/qxe98d72ra7ABrCkAWRJQVJFt9Q4uB6LAvc1hPyp0zyzwi64butlrLPTzTw/suPOFBo8F
      eQVgsZjY0+4huRzj6nyGueDj2fgBVHWBbPpj3ewp2SYgvwBc4QKU2VrdyrI3eXWzZZCfNZ4A
      GolIipFUFkmSqPKbmIk+nuHN7fMlVJ94Tjd7RW1+OJz/nM3sQHAU6FaW1azflKpBfvILQBLZ
      1uSjKJdhMalwpfPxGwB/jgDo6WLzbbbMJSbEFv0aranAiMn6sMkrgHQiwy8+mednL5ZSaVMZ
      tj6+K5IWe5Diquu62fMW1QA7857rTS8wHBvWraytGZktlOhmz+CbrDkI9vrM9A3HqC+QcDsf
      XwHYrCJlJfqFdfH61l4Z8Pv91NToN2/v8eg3pWqQnzW/zfGREFKFjWjcRN9NI9mFwZPJmj/t
      JZVu/tnLpTg1M3trjAUZgyeTNQWg5DQEUaK5xko2a0SEMHgyWVMAUi5Lx80Yk7MhPhn9YiXY
      6bby44MFiCaZ7x4r5we73BQUOvjjVyrYXWbmlcMleMwmnt/tx3UvjjQGBhtA/ujQBQ5e2+bi
      s8EwZZVunmlI89Hw6jigucrB9honZ2Y1nLEo9oYCjjlz9I9GONTmxlLhoc5l5mzHHNFHYP1M
      ypmwR9262bMkHbrZMth48grAaTcxNhamZyLJ6Aq83m4GVgXQfTPES21OZEkgk1WQBQGHKBBL
      KZhMIqIkEk+pFLkkWMrx3FYLFlnYsETZ1qSDovla3exZXMbq7JNEXgFEIhkqtxfwL27tYb/e
      vfTFSQ1iKYX5+RiFL5RiCcd5azLLTw4W09s5T7nDxjtn53n5eAnlc3Oc7F3tPu1seDxXkg2e
      bPILIJzgr9/Lvwssl1X4P387DcC/f3vi9vH/bezW/uDB1WNvfjT7zTdrOTrPf8pcXGZbWyU9
      13txlLVxdE8zSjrC+TPnyboq2FNt4dNLgzTs2Ic5NMLgTIxDz79Akd0YVBjoy7qucKmRKXqm
      k/g9Dkw2H0efO87kYA8asDgxwErajNNqJjA7RiyjMDmzQEFFDdbEHDOBx9Ml2+DRZl0FoCTj
      xDWZ1OIQSymJ0e5Odh06hoBAJhJGc7gZut7B1HyEptZakpEIvuIyWlpqmZqYXs+qGmwS1rVP
      YSqqpUruZTKoIg6dZ2AyRE3OQxFBzFUtaKcvkLP6KS8xc/nGEP7qJi58+B7zgQiNT+f3v7kT
      klPCXnsv+7rucA/f4lahaWk0LapbWbA5QktuJOvbqZacvP6jn9x+efTW3+XxESyFNfzwx1/4
      0TTv//y/PQ9UZM6iEivSr/tk9WRxrXFOVd8hm/ulbmUp6r8A6nWzZ/BN1k0A6aUVpv7TNTqW
      F0kis8vnojcQQDI72Of1IghdLKWjXIvm2GGHc6E4DZ4CmhxWehenKfBVUWaChfc/Ihe5+1/Z
      WCzGwsKCbvdht9spKyvLey6TCaDk9HO8mzL9mnnTKd3sGXyTdROA2eehePdzHFia5N0THUQq
      3KiCmcqWdorrytFycT47+zERoYyocwaECqoP7UcM32RqcZzS/ccpKgDf3t1oyt1PqQZDQSwT
      k7rdh8vloqE+/69yVyDKVDSpW1ntXgetHmPh7WGybgIQZBmz30ehy8XOliFGZ2MUb9nDjc4r
      HNi7hbm+XgYDSZYCc9T+2R/SHJnnnbNXILxELptgJhpnZ0sVlkL/PZWbWl5G1vRbgzB7PDhb
      GvOekxZDKGH9gojJfhfOgrU6XAZ6sK5jAC0d4sMPTpPIWXj66HauXrqCp7yBxZF+bE1H+dPG
      Ft4/P0X0Zhcdw3NU1m/nmb0tDH32HlJd1XpW1WCTsK4CEG0FfOd737/9urq6AYCVqQlMMiCV
      8Opzqzug6r806dNy8LX1rKbBJmJDllYTmRzvdX85ALsIC/efi1IWBb632wgi+DiTjq2wGBWp
      KvOxPD2MVNCIzwa52BKfXevDW95MlTNF31iIXXu3Mz/UxWLGzq5tbVjk+9/0vSECMGVitF7+
      S93sibIJdv/PutkzWF+UbIyT775J1H+Ul7QV/vHNv+PIH/0FPhvMDV4hbm9jV5mdU++epbW9
      ghMXu2n0uhEXbtDrL2ZPTeF9l70xzjWqBTn8lG7mBHltT1NNS6Gq82uev1c0bWM3BymZONeu
      Xqd19yFcFo3Q3DDnO27Suu8pYiOdzCYsHH56O9cvnEcsbubQ9ob7LEkjGgqQ1swU+Fwo6QQZ
      zYSJDCuhGG5fAXaLPs1HMjnZd2gP5wbAW97Ijqby2+esRQ2YBvp46wOZ1iIb/TcnCEh1NO2q
      5fy8i51F97ZvWlOyLK8EcXoLsJklfQRQWOzk9/Z5ud65SGmTn3MXVziwzcX5rkDePQEiIn49
      ox0Ia3t0KGonydR/o1tRtsxh4JBu9u4NjfnJQa5c7aF2+yFcZpVrlzvxVzSgKjH6BmexOzQG
      bojEbdUsdV3kwPYG7scRXUtHuHr1OtNjkzz/Bz+g652/Qal/gzphnKVEkqW0mx++dFD3O/wC
      lVAgRCyWxFVQiBhexu4pxJdT8ZQU8ttfv0Nxy24k4d5SD012X+DqTADM1Xz/xT36CGBHi5fu
      m2GeanNjrnBT5zTx8cW1N8RkJIWLVfrln5ckidc5kPecYG1FKvlvdStLdG7kWEOgorGNMl/f
      6ktNIxQIYikK03ttBtXpx2NPEAyHsXjLEZUMWbgvAQgWDwd2NjM5PkEuJ1NTX82kBu37jzA/
      0oWiYx4EAG/pNo77Vmu6/ZnvIzlg8sYkZU3NSIuLtLTtxqzEcIXqKC/1Mus+ioKEJN5b/39x
      KcLWp57i3DtnAZ0EIIkCyYyKLImIoshKTKHSJ3NjJb8CRFmipLFaj6JX7YlrPwHiYgVj5jd0
      KystW9YIjLh+iIIIJBgZC9HWUsOlm1NUNLWRHh5gJgm7n95B14VPyXqq7im69ZdRkyEmwrCt
      ysxMQKHUZoYELI71MBg08/RufRMemixO3GaNrKJica2u9dS0bkGSJWxVn7cVL+W3comX19Te
      fm9Wyd8tFQSQv9Y27FaR8PIyZudqGboI4MZ4jJ8cKKK7c4EKm5X3zs/z4rFSymbmmEs+4dnx
      1h0b3/3DfwKkCSpZ2g69TNvnPbJDtx2oaG9sfqBSRJsbKdJP1LuTp+ucxJfbaM35CM5OkFiO
      0TVg58DWugcq4+uMTIR48239AhlXlLr4Zz/e/pVjbfsPc+Gzqxx/YTW+pS4CmJ4I8r9P3NoQ
      c3PV7eAXJ/NsiLlNEo2f61E0ABpmYP8dr3uS6JtNkTS76BgP6GKvudSF2/rlUIwiTTsP8vnv
      vLuwBjdA6REeVuKmYkuc18tv6mbPUVAIfFUAotXD4ePP3n79lTzBy5EMcw9p44lLSlJbVQyA
      pimk04s6WhewWkvznkkpKtGsfrvzTaKA15w/Zmc0myO1xuP4frDLEo41ZrgG5iMkM/q5eDQW
      O3FZNzYWaTYbIZEY1c2eJNlxOr/9SfgVATxMAoEAfv+9+fEYGDxsHt+gnwYGOrCuC2FqJszp
      U+eJaRZ2tFfRc/0G9tJWGp1hrgyvsHPfIerLvEQXhzl5tpfW/UdorfLTefo9fG1Hmeg6S8JS
      wgtH9nwp0Z2Bwf2zvk8ATWb7wWcoYZGlrIdnnj/O9M0+uq7dYMf2Bi53dKECAx1XqNm6lZ7u
      XgITfXR09xPJmKhrrGNmbBhFNWaWDPRhXQUgWhwogVHi3i3sqPMxfP0au58+xv5DexjsvkFa
      WW3YOUXFZrOiZMP87oPT5LIpphdWKCuvocqqMJd8BELOGTwRrGsXKBUY5Zfvn6e6vo5Ln05y
      YypCteIFYZFQMs3WXW2M3ByirrWR9z86SfP+Yxz8zmv0n/0NOY/I+799j1DOxkHrxkSZM3jy
      eORmgcZGR6ipa8Do4husBxviDZrKKpwbXl7jrJORgXvbxC4JAsdbix+8Ygabjg0RgJZLEh/W
      L3yIJJmg9We62TPYPGyIAJSUzPz7+i2oy2YJXtXNnMEmYsOizeY0HSegVGPAYHB/GCvBBpua
      DXkCyGaR1iP3v4/z60iS8QQwuD/WFICmqeQUFTWXw2SxIOqYbl0QwGzRz5NRlIwHmcH9saYA
      AmPdXOgeYnI2yM6jb/D01vzxMO8HJZtgqe8fdLMnmUzwvY3ep2XwOLL2EwCR5aUou/ZuwWq+
      tfKqpjhz4mMCGYmnnt5H36XzKN5a9tXZ+PRcD80HjrE0cI09R/bT2znI9n37cJi++essSTIl
      lfpFehMlI3OMwf2xZt/B6S/C73MyNTqLxSLevnz7weO0FGr0dF1FKWwjNtpL943rtGzfSk/P
      IFNj/bz32xOUNW3J2/gNDPKRjq8wNRckG1vhs/MXWAivJmWcHxshklvtLseDs1y82EkiqzA5
      2MXV3mFyGmhKgpsj95dAJW8L1VSVpclRfI27efGlF6gvvZUZUTShRiaZFyvZUulClkxImkpW
      1TCbzCiKAqpCod/B/HIUTYNgMEggECCTMZI9GORHycY4+c6bXOieou/CKZKmHJ+c7iIVnOIX
      f/srFtNZIMvFM+cQUnOc6+7l9MVR1MVBbkyt0PPZR5y40H1fZecVQCIyx/XBGRZHezn96acM
      TN5yW0it8KvfniYWmCfnrCQydplsUR3bG1u4ePYsTS0NeAurOHj0WRLjXawks/h8Pvx+P2az
      fnHzDZ4sPg+MZQZkm4OV6UVcbokLF65RXF5IIp4GcmSyJirKi1hZSeGxxBmZmmGs7zIjcTu2
      XIL72SGat/NsMtlIR5cImwvwWgVyuVv7XK2F/PN/+ae3r6v+4RehTX5ad2sQ2vIjAJ595ZV7
      r43BpicSS1JaXsr0bICmlhrmxieJRuIE5Cwel8b13lGq2w4jWuIEg0Eq6hrIRmaZHIqSUcB8
      j47C+QVg9/Hcyy9z+lInimbC6bTocW9PLFouyam336Ti0B8QHPiU0bFpGg4eZ7m3g6ytmJde
      fha7DCuTfXzcvcSPX3+G5Mowvz47y5EWC+evDlOz5xhPtVWyWVc0vKXbeMYr4rI2MDO3xM4d
      FbhsJioqahDtdgb6h9h79HnmlqKUVZSRKBSIq1bKiv0I1FPfuAvnfXQy8gpAEAQSgSX89TvY
      Wl2E1eF80Pt7oomGgiTiEVKCjaeOHCWSusDW+moS1iTvnL5BTtMAgZVQnGh4BU1J8tnVftJx
      SCdsxBJJkqnNPUYyWZx4zRqqBpXVq7niFFXD6vaiaRrtba1Iskxl5WrCEFdBGS5A0zQ0JDxe
      d96dgneKHLfm/KHN72f+k0uM98jsPvI8Wx4gAu+TjruwnBLvasiywNQIzsomHDIIpc20FvUz
      uxTDXe6ipq4BuW+K+aFrjC+EmJte5LpYwbHnDnGhawJtZz06rjc+dlyYHODP3/sr3extLanm
      //vBn3/rNWsKQEJAk01YUNE2zmfuscHpL8FkgnhIoaK0AHIJTn9wkrTJT7O6wMi8SLVbprjQ
      T1nb0/xJ2y4++ugazeUyHdf6aG4/sKkbP0C77OTfelp1s+d03HmPyJotOxkNIruKKDJFCITi
      UOPVrWJPIu2Hv7v6T8Gu28de/d4PAEiHFkGSMdkdvPrC8Vtn7bxwKzxfzRb9QsU/zkSCNjrP
      3m84929SUutm+8vffk1eAeQySTRnGXVFUyRUL20NRvfnbrgwskz/XGSNs7F7tre72seuat+D
      Veoxwum3sOWZIt3suQvuHME6rwDigXH++t/9LdaKemrKSymuqsOv40yQqIp4l/TzLRJNj8Ym
      +ZnY21xfPqGbvYqi3wd+oJu9R51MbJqlvr/RzZ5aWQ382bdek1cAntI2/rv/6X+k98o5LneP
      EElmdasUgKBKeEL6KV14RFwunj0VYe9v9MtG4/uTGA8tEu0jiMVmp7xWv4jTzqI7J2HJK4Do
      0gh/97e/RvIWUVxZS7FH32QITypTNS8wule/uPnt5S0YI6+HS14BmB1+jj73IqooAAImw9/+
      rrBX+/Cl9YsObS1z62bLID95BWCx+9iyY/MMvvRCELKIYkpHe0YEvIdNXgGoSoaJoRsMTc5T
      UFbH1vZmrA+Qi3WzkFjsJjh0UTd7peXPAxW62XvUEVURU/p+kzp9E1Pmzr4ReQUQnhtmcDaJ
      GomRdU9wqdvGsd365fR6UinXGnCo+iWZ8Gvf/Mwz8WU+PvUZh44d49LpU6RkH8/sq+fDUxco
      rt/OM3vbUGKL/Pp3n+Aub6HZm6F7cJy0rZxXD7fywYcXee2Hr9937rCHiSXpoHzywVI7fRmz
      5rrjNXkF4PAUkQl0EcFPs8eH5jO6Q3eDnLFgTernNyVnv/4LphFYXmB+foksVrZvbeH9k9eY
      q4RATGNLwWroyfDyNIuBFA3bC6htqSSXSpIoaCO4vMLi3DT67cZ+/Mk7uk1nsuw8/CKN7gTn
      ro5gMRuuEI8GAqU19fjsJhAl/OX1tJaLpF3b+KMfv8rFE++RATwVW/jPfvoD+j/5kFA2wehS
      jpYaP5V1zbgsxoTGl8nbslORJbqHFlEzhbxx3EPn0AzVBxvXu26PHZYSM0KzflPG5oJ8X4+A
      2+NFzAT58MRp0jjZk53noxM38NS0Ep64QVSx0nu9C6GsHks6icNfhOWWo5HX7zeCQX2JvALw
      lTfQnBBQbIXkSLNr+0Ymh358MLklxDL9VsxlZ74VbivPvf4dAN74/herxPVN7QCE5ybw+2t4
      o77+9rmn93/hyvL6D3+oW/2eBPIKQLY4ad6yPd8pg2/hRnye0ZVh3ey1VYq0kn8188O+eUKJ
      fCv0IkxP3XNZx1uKKHY/ikPjh8uanftUaIZ33z9JQpE59sr3qC00VoPvhLvIT5lao5s9p8+z
      5rmFX0+wNH3vDnZrkfqvnGAI4AuWp8Ypat5HtWWF0dF5agv1zQpu8GA4rRIZh36TE/ImDS+5
      hjt0Cn/dVjx9PUxHLezfq9+vmoE+FNfGsLnWcr2+dyy2zbnqnFcAwdkRZtI+dh04vN71MbhL
      pNQIUmJRN3uCugPYfPs+1nCFSHLp5CWGe9yASNu+I2yp0c992eDBsdodqG79nOVE6dHYU7He
      5A+LYnFz5OXXaK+/sz+1gcHjTF4B+CubuXM+RwODx5+8AtBUhWw2x+dRViTZhGzsCTB4Asnv
      ChGd582/fQt3ZQ1mUaR510FaqwqA1UBEAAKgod36b/W4kCeuR95jsoCtUsdoc7IhzieBhD3N
      cO29pcj9NlzFWe4UGCWvAGyeCn7vxz/C4i7EYfnqJfM3r/Lm2TH+ix88xa9++ykZaxHH2xyc
      +myImj3Hmb/2CcdeO0ZX1zTPPHcUh+mbAhAlcDTouLC2CbNqS4qMlNXP9VrQM2nhfSK6rFh3
      6ud2Y3He2TN3zZUUf1Fp3uOiowif5SbhxSnKthwl0v0pgzNWjj3/PBe6xlDSy7zz3nl+8JOf
      4jCJJJNJgNXQ6Qa6UTJTT3Zev0kKS8qum63HiTUFkFgao6N/nMmxaXY/9wbtlavL8gWFq3PF
      JrOF1EqcrGyi2GQiEo1gsdlIy26eeXoLHR09vHR0Z17bKTXHRyv9ut2EJEm8xlbd7BlsHtbO
      ETY3S9+1Tup272B+NnhbAKJkor21GW9lO/7xs3i3P8WOKitnz3exb/8RVjwa9c27ELPdhJNZ
      /PbVrs7nTwIAk8XM9sP776vCy8vL5HJfXbUUxY1/fBs8nqwpgLLWnRxIm8lmc2EAlPIAABRz
      SURBVFQ1fTGUEGUzB/buAeDAMy/ePv7Sa+UA1Bathvlr2baLr5ONLPLJ+cv09/bTumsbN3qH
      adiyk12ttQiCxspYJx/3p/nRKwfoP/87llxb2Vcp8Y9vn+PHf/ITDHc8A71ZUwALQ9cZXUxQ
      U+xD06n/bnIXc/zQFhJyGUXmOcxWC9mcCmhk40FG5wLYTB6iixPMpQQcTsgJdrwOkW8GvjYw
      eHDy9h3iwWmudI8QDy4zNTVFOJHWrcChq3207duGo6CKZ48fZnKwFw2IrsyzGIgwOz7ByOQE
      sWiE6dlZ7F4/8iac5TFYH/K7QpgdSIKC2eZCFjMEAgnQKSiEUFhFjVNkSstx/VoPrTv3sTTc
      h1C1lddeqqJvNEB7Sw0tTbMsxqyYRKhpaDACtBs8FPILwOZm39NHScsOnDYLDuedw0vcCTWb
      I7MSoLGiCiUQxKRZ2L91dZYoFnJiSYbIAS3FHpRgCAt2qhyQC4Zoq6uH4Op5NRxFzX1tJ5Qo
      klkJPHAdHxQlFEYN6+einHOGydjyT0/mEhFyyYRuZWVDIcQV/aLa3Q+5sL6fn5JT79guBO3z
      pd2vEZy6wW/eO0lKtLH3+Bvsa7pzsoFvY+zTs0z9D/8LsLpq/OVZIT2w2zd+HjuTyXxjhupB
      MJlMmEz5F7tyS0m0nH4NVi6wItxrhjmdURSFdFq/7rYoilit377Lbe11gFCM1i2NDE5HiIUf
      vLF6tm+h7twHAKTTaTo7Ox/Y5ueIosj+/fc3raonY2NjLCzot5RfWVlJZWX+ldGFf3ON7Hxc
      t7IK//k2rA0bG4o3GAwyODiomz2n08nWrd++PrSmAEpbt6FMzuL0Jalp3Dzh+Qw2F2uuIC2P
      9PKbX54glp6nq1+/mPcGBo8SawrAYrMjiSmGR+ZxuIwlKIMnk/xdIE0hlhOob6pGLGxge33B
      OlfLwGB9yCuAyMIYnYML7Nr3FMsTvXTcmOPgVv1yej2pKOpNsjn9BveqehjIPwh2bbGjVurn
      A2VyGXuCb5NKxCkqr6GosBCnpY5rfSHAEMCdUJTPyGb/k372VCfwdN5zmgU0q34OIo/AdoAN
      IX94dH8h4d6rfDjZC6zuCDO4M4L7WQTlwdZLvmLPuW/Nc+dTk4QSId3KekatoJgHX/B8MBZQ
      1V/pZk1Vq+EObvL5BeCt4KU3jKnPe6VPaeOzrH47ml5UfNSuca60tBS3jmFRLBYdt6jeJ/Ni
      MW9ZX9fNXrXFzZ0i3BouNjpSapJps+nXkArlzdUvd8p2trj0y7JZaLnzllFDAAb50TQUVUUD
      JFFEVRQQRURBBDRUVQFBRBRAUVRESUJAQ1FUJEnKGwzhUcQQgEFelOQy7314jtDKEi27djM9
      Pk44beGnv/86ueg4v/jlx+RsRTy7tZCLg1O4y7ZQoU0xvhShfNvzHGh5PCIJPtFj/0wiTDCS
      ZHF6lP7+fibmVlaPx0MMDg4RjKWJBeYZGp4kp2mEl2YZmZglpxrbbyR7EW/83ndoqiikuGEn
      33n5GIUe2614OAKSLGKxWqnYeogt5S5yuRhjEwsIkgW3a+PHE3fLEyuAXDrKx7/5j5zpnkWU
      ZMKzg9yYWBXAxPBNUqkQv/v4E8ZGJhjvOknn6BJnL1xheXaSUDKzwbV/BFAzdF++hLf9MOVy
      iCtXhzh45DBmSSC6MI2/9RC21BITY2PUbNtPbH6KrMnGge1VXLqqn0Pbw+aJFYBostO2tQWT
      BgWlVUSSIkf3rQ6wmrbvpdQhU1pex7btreQUgUR0msnRGW4OT5BWjCdAJhZian6Bkb6r3Bgc
      ZWFliatdPcxcv0SseDvexASl7fso80qcP9/Bnqef5bkju+m8scTzR7ZtdPXvmid2DCCKEibT
      6iyKlpokZa7GIUEqmWJl/DrX5gSO7CvhxuAkrQ3lXFnKUFpTjV+MsRxJUbEJs6V8GbO7mNe+
      +/3br3etxkEgsrJCUYGbhudevn3utddqb/1XxKuVLetXSR3YEAFoxEil/61u9iTRDHxzP4C/
      Yiu7Ch0IZNmzpwhQGerrxea0U2CNMjkfparIydBMKd99divhmWFmoyLtZWunJtpspDMK//rn
      PV87eu85yL7Mv/rpDqRHZJ/3xjwBtAyKckk/c1r+X2u7u4TP94lV2AA0mtq3YLXb+PJs84Fb
      Xh7W6uY1UtJtXiQ09ieXdLUpfCmm7Hoz2d9B5+A41uJ2XjrUro8AMokgly9107znAMGpEerb
      W5i6OUJpXRN208YOM3pHA7x1dlQ3ew3lbv7JC8262btfUqn/lURSv4yUqvqXwN5vHBc0jdLY
      im7lrNrU1dw9UVzbzmsNTfz8V6dBHwFo9F/5FLO7mrNXekmNXWM5OIW5YBt1cn6Vp0Uvp73/
      x4MXfQuTKHF8jXP1kRx/3K/f/mNr7tGY4tO0EJq2rJ898qVcBUET8C89OW4xspjj4plLPPvK
      6hhGFwFk0hmKagsZnBhBTS1zc9LNkSbPmquBsmCmzrW2o9e9cqcEh49Gb1NfQs7nCIntutnL
      SY/HwtWDcuPSaSYCWbJDQ6Qckh4CECgoLuLq5SsU12xjJVjCy68f5+yp0xS+8hIeywZPNPkl
      2KvjjE6JWT9bD8Cw5SfMa/qtV+wTS+4YS/9JYPvR79xykFOZm5zVRwC1Ww/jLg/j9PnJtpbh
      cLt48YWjSI9AVpmYbY6xkg90s+fz1VPExk/1VZhk7Dr2pW1rBBhWRY2xGn0HweVs/FO5czJM
      74zyVQGkUikSifsLtiTKEoloGIBQILh6MP2Fv/qX7WZUlVohf5/zy2iahoBwx09LFAQCgS8C
      IKmqejtitJIzUVqaP0z7N8q6Cwcuk8l7u6zb2XJuvc+RTt39fd1FWZZUnEBg1Z6qqgiCcPt9
      pWoaj3DnuEB3W1Y2GiaQkm+X9fnnp6oqroP1d3z/vRAMBW/X6SvfVTan6+dnV9U1v6vChRAH
      ZiJrB8bSm0AggN9/b6n3stksoigi3WMKz/spK51O37NPfDqdJpvN4ryLTCQPWlYoFMLlct3T
      Z6FpGplM5p7Lup/P7/OAYLJ8b52K9fqucrkc8Xgcj+erazyP9ErwWlHRHgbruSFkvcoSBGHd
      yrrXhv8g6HlP0l/8xV/8hW7WvgWz2bxmIgs1l6GnuxO7txTLGlOnmXiEcErBdhebHL5c1ljf
      Za5297MQTOOx55heTOP32EFTWVlYIplYZikm4nXe+4cqSRImk8zixCCXO/uweIpx2e5ftP29
      PTjsNqLpL+4zkwgyPLlCWUkBoigw2nuFa70DJDQrLiHK+EqWAnf+sDXhuREW01Y89ruoUy5B
      3+AkhYV+LJYvPr/owjhzCQklOMFiSmN0YIzw8gw2fxmh6QECORvhwCJuq8jV7gEKioqIzI6w
      EM8xcaOT3sFhBLsfn11mqLuDgdkolaUFt7si+dpF/7VrOMvK+LzWgZmbLKTMeB1f/Y4y8SAj
      0yv4fe47jikEQcBkMn21LDWzfgL4tiwu0ble/vLf/T2Omq3UFMicP/kxMzGB3PIoEUnm+qVe
      Rq+8z4XJDPbsItduTFJWWYl5jfnPL5d16t1fU7PvCIOfvoVUXEcmk2Kw6yrDo4P86pe/RdHC
      dHSNE4qnqa0uQyRH75WzXB2YpbjAwrlTp4jgJjp1nWs9QwTSImWFXgRh9UNNLA7x1umbPHt4
      GyOj83hMSU6fOUdS9hKb6qGzd4DllIwzt8ipc9eYWwpjkxOcPXsZi6+Yka6L9PYPgqOIlclh
      +i6d4MpUFmtylo7rY7hdKqcuDrNnexOCpnDmg19T/9SrdJ/4FbaiIqJpifh0H591j1Ngy3Lq
      7BVCoSW6r/cyO9rD+b5ZkqkcpX4z5z/9lNkoFNgUzp4+Q1L2IIQnOHX+GjaXiQ8/7mD3rq1f
      SYk72/MJV5csaBNnGc7aOfe789gzU0Rd1XR++C7F7a0M9QzgUpf4D//PLyjasp/kwBluRASG
      +wY5+uwzvP8Pb1JVV8q7H16ixGvFU1GF9dZ3l69dvPVXf0VRYznXOroYnQnhllMsx7NMT8yR
      DowSzMDFM+eIpHKkchpqaILPuoYpKPJz/bPTDM4nqKss+YooBEH4ZlnZ6KPRBeq+dJH2g0/R
      f62TmpTGtNTAblOawa4O7GYbZ85d5weHKsiZzfzmvdMUe81cK2vkSNtdTNwpSQZ6eghnZYJz
      N1lKWLh5oY//8l/9MVMji1SWeIhb61jq+oC5vbupIMzYXIiRnkvYrK/Scf0GBQk7FbFOrDu+
      S9fpD6mt+c8pcqz2xUPLs9h9lXj95Rz0F/HO3/w1jcdf48Q//iNN5QLepqe5fOE8Q8k5dv/o
      D/j052/R35nA7vDw4acS0lI/O/fu4MylHjJj3ezaWoWtoISpqWEm+q9i8X3nq/cjCFjtHkpc
      OcZGR1nIFlIuLDLW3Y1N2kl/wE570TI9mSIOF4YIFTQw1XOG5IwXqeEooav/yM+v2IlrMten
      ExyqMRNdHOVs1xpjC01lYvA68eQc3mJAENmxo4m3P/0IzVZGaXaGiYJ6OjveZ/+hHVy62MUx
      362qihI2px+PHCVuKWVPk4+rN0Zp2nMQ7uAhEJkdYiZbjNJ7DrHOxQzlRGZDtHjnEGoPcnkw
      xJ/vqOHX57v4eOAm1RUFnAPGujpJSVMc2L8N511MQm78PKUS5epghLbmGpTAOFHRRXRuhNHJ
      OZweN1NDw8RVDdksEwxEcXl9VFQ3UFt2l4FcBRl/YSFeh4nc527OFgs2SUTLxglEktidDswW
      E6oG6egyA6Nz2O0WBMlOaamXwMIiiqoyNzmGZnV9pZtWWNGMEhii48o5PjzTjdfnYnSwD7O3
      GJMk4XI5kSSJggIHN/uHSeVEfD4/BUVltDXVIptsOJ3225leZZPE4vhNugYnsDqsZL8WbVrN
      phm6cY2phIf6QgvZdIzBwVGsNhO5nIbVYkUALFYrogAOlwuzLOP2F7A0PkhYdVBRWkhBQSFb
      2poZ7r2OarGjrhXVWhBp3HaAXS1fJIgorGlnZeAiZc3bWBybo6RYYnQ5S3VjC8nRTkK3TGXi
      Yfp6Oohba/BqKyynrLhZZjFyNxG0RRwONzaLhAaYLW6E9ApTC6szjBarBVEQQDRR4PNRWlNH
      XU05ZaUlZCNLRO88mbR6e+s1C7QmaoaFlTglRV4igRVMLg/RpQWwuvHaRZaCEUTRQqHHzHI4
      jd2kEksLlJYW3XEFGCC8PEconkG2OCj02khmNNLJNMXFPoJLi6iSjNnqRktFsPkKMZFjcX4B
      VRBxeXzEgkuYnH463v6/Edq/x57mUvxu+5cerxrxcICVcAJ/cSlWIcvC0gpOXzFSNoZkc5KI
      J5m49DanxxXs9gL+8PefJbwcpqC0lFQ0gt1uJZHRUDNJnA4LgUgSSc2SQ8ThdKEoGn6vCzSN
      0PIC4UQGh8eP1wrRjICSDJNRwOFwkNVk3GaFuGLCLqRJi3bUVBS7y01waQHR5sXvlFlYWMbp
      L0ZIhwgnc9jtDlRFo8C/2r37nEw8TEqwYVLiZCQrqWiCkmIvy4tL2H2FkEoi2U1Ew2kKCjyE
      lxcQTBaQzaQjQZJZBW9BCW6bTGBpgaRqory0cLXxrsHKwgJ2l52MZkZLBTjz9s/xH/4jWj0Z
      soqGy+slkchS4LEQTmSxkCEYz1FSUkh0ZZEkFsqL/Xdea9CUR0AAjwmZdBJRtiLfjeryoOQy
      JFMZTGYrFvMj0fN8TNBIxhOYbfaH4kK9vl2g+AInL/aua5G3yaW4eP4C8W95+oZnRxieyx9s
      ymyx3XfjB5BkM06nM2/j77l0jonxQQYm783rMjB+nY7+CXr6Bnhy05AL2ByOh7Z/YH1/ilJh
      eoYmqZIX6RoLUd/cwNxCjErTCml/I9GleUQlSSQtsaOlmLOXhjj0wivU+VV++fdvUb1jL+nl
      KUIZMwf31HP6k4v46nfx/FNbuOPno2TpvnyG4ckJ2nbvZfbmNLsbHQyv5AiG4kjpBK1NZSwL
      CpNd51iMC7zxvdew38W608JwN5919+Or34U420cgmcVZu5t68zxX+heoattF5OZnZEWZBFY0
      bDyzq4JzHQO4K9pIDfdTLmlEZROR0UvMhGDf3mbOnL6Mr7KFF4/t4cvVUDNRTn5wgpXFKag5
      QoEYI708xtBsmKeee4X5nnPMxyQOHWjl4rkOZF817cUZLvVM0Lz/eSzLNxiYi7D3wB46PvkE
      U2EtLz1/BOvmCkMEbMAgWEPj9LlOjh/bxZWrfczf7OHTrmtcPPkec1OTnL82SDK6xOTUFGl7
      JY2lblQlzdxyhhpvhgtdwyRCc8yvRJkeH2VgeBzlLqM4mOw+drdW0De8Qnahl1MdA5Q2bCE6
      eJJZoRQptsD07Dwr0SQTvR0spe7ungLLC2TTUa5e72duboktbQ109w5y/pMOnn7uAF0XzzNw
      c4aWej9zWQfp5QlmJmdIZZNc7boBQDq6xNjUMCdOXiUdW2JuMcjs5CiDg2Okv+bxEF+cZDLp
      YFdLBWouzeTUDNHIMsMD/QwP9/LJ2R5S4XnGJ6aJprL0XbtOMB5hZHiI4ZFRTp38hFQqwszc
      Egszk/QPDJHIbGx+sI1ifQUgrM77NlZ5ePd3ZymrbeWpFjeafzdyJs7WAwcp8VhIZTS8bjtm
      k+n2golkMuMqLKPIZSaZk/BYBOx+H0I2y9lf/xXnr1zirZPd31q8bDJjsZgRBIFd7eX0L0j4
      c5OE3W1kxi6zkoJsIsT49DyyDNN9Z3j3ozP8zd//huy39DEWJkYJZTTUXBbZJGO1WJAkiYaG
      Qj585yQFVY3YbFYssojZZEKWJZbnRlmOKohKFlUQEQQBs8VHbbmbWEbEaZexO33IZFC/1jZt
      3kK0wCiXeicQBQFRhKwiUuJ3kRM9VJY4iGdlxNQis4EYkqCQTioUl/hJZ6G2uoxYPIvHaUey
      u7DLGrmvF7JJ2KSD4Awnf/F3iC0vcHxH1UZXxmAD2aQCMDBYZeMXwgwMNhBDAAabmv8f3Jzw
      tpcV5A4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Barchart2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Haiti Bar' width='192'>
      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
      x3WZEg+BAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Haiti Pie' width='192'>
      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
      kGgMgET7Px79tuR2FDjNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Five Highest Countries 0-27' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Five Highest Countries 1-59' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
